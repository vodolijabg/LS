//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LAV.DS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PoslovniPartnerDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PoslovniPartnerDataSet : global::System.Data.DataSet {
        
        private vwPoslovniPartnerDataTable tablevwPoslovniPartner;
        
        private mestoDataTableDataTable tablemestoDataTable;
        
        private uspDajArtikleDobavljacaDataTable tableuspDajArtikleDobavljaca;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PoslovniPartnerDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PoslovniPartnerDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["vwPoslovniPartner"] != null)) {
                    base.Tables.Add(new vwPoslovniPartnerDataTable(ds.Tables["vwPoslovniPartner"]));
                }
                if ((ds.Tables["mestoDataTable"] != null)) {
                    base.Tables.Add(new mestoDataTableDataTable(ds.Tables["mestoDataTable"]));
                }
                if ((ds.Tables["uspDajArtikleDobavljaca"] != null)) {
                    base.Tables.Add(new uspDajArtikleDobavljacaDataTable(ds.Tables["uspDajArtikleDobavljaca"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vwPoslovniPartnerDataTable vwPoslovniPartner {
            get {
                return this.tablevwPoslovniPartner;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public mestoDataTableDataTable mestoDataTable {
            get {
                return this.tablemestoDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public uspDajArtikleDobavljacaDataTable uspDajArtikleDobavljaca {
            get {
                return this.tableuspDajArtikleDobavljaca;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PoslovniPartnerDataSet cln = ((PoslovniPartnerDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["vwPoslovniPartner"] != null)) {
                    base.Tables.Add(new vwPoslovniPartnerDataTable(ds.Tables["vwPoslovniPartner"]));
                }
                if ((ds.Tables["mestoDataTable"] != null)) {
                    base.Tables.Add(new mestoDataTableDataTable(ds.Tables["mestoDataTable"]));
                }
                if ((ds.Tables["uspDajArtikleDobavljaca"] != null)) {
                    base.Tables.Add(new uspDajArtikleDobavljacaDataTable(ds.Tables["uspDajArtikleDobavljaca"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablevwPoslovniPartner = ((vwPoslovniPartnerDataTable)(base.Tables["vwPoslovniPartner"]));
            if ((initTable == true)) {
                if ((this.tablevwPoslovniPartner != null)) {
                    this.tablevwPoslovniPartner.InitVars();
                }
            }
            this.tablemestoDataTable = ((mestoDataTableDataTable)(base.Tables["mestoDataTable"]));
            if ((initTable == true)) {
                if ((this.tablemestoDataTable != null)) {
                    this.tablemestoDataTable.InitVars();
                }
            }
            this.tableuspDajArtikleDobavljaca = ((uspDajArtikleDobavljacaDataTable)(base.Tables["uspDajArtikleDobavljaca"]));
            if ((initTable == true)) {
                if ((this.tableuspDajArtikleDobavljaca != null)) {
                    this.tableuspDajArtikleDobavljaca.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PoslovniPartnerDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PoslovniPartnerDataSet.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("en-GB");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablevwPoslovniPartner = new vwPoslovniPartnerDataTable();
            base.Tables.Add(this.tablevwPoslovniPartner);
            this.tablemestoDataTable = new mestoDataTableDataTable();
            base.Tables.Add(this.tablemestoDataTable);
            this.tableuspDajArtikleDobavljaca = new uspDajArtikleDobavljacaDataTable();
            base.Tables.Add(this.tableuspDajArtikleDobavljaca);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevwPoslovniPartner() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializemestoDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeuspDajArtikleDobavljaca() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PoslovniPartnerDataSet ds = new PoslovniPartnerDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void vwPoslovniPartnerRowChangeEventHandler(object sender, vwPoslovniPartnerRowChangeEvent e);
        
        public delegate void mestoDataTableRowChangeEventHandler(object sender, mestoDataTableRowChangeEvent e);
        
        public delegate void uspDajArtikleDobavljacaRowChangeEventHandler(object sender, uspDajArtikleDobavljacaRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vwPoslovniPartnerDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPoslovniPartner_ID;
            
            private global::System.Data.DataColumn columnStara_šifra;
            
            private global::System.Data.DataColumn columnNaziv;
            
            private global::System.Data.DataColumn columnPIB;
            
            private global::System.Data.DataColumn columnMesto_ID;
            
            private global::System.Data.DataColumn columnMesto;
            
            private global::System.Data.DataColumn columnAdresa;
            
            private global::System.Data.DataColumn columnTelefon;
            
            private global::System.Data.DataColumn _columnE_mail;
            
            private global::System.Data.DataColumn columnKontakt_osoba;
            
            private global::System.Data.DataColumn columnNapomena;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vwPoslovniPartnerDataTable() {
                this.TableName = "vwPoslovniPartner";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vwPoslovniPartnerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vwPoslovniPartnerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PoslovniPartner_IDColumn {
                get {
                    return this.columnPoslovniPartner_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Stara_šifraColumn {
                get {
                    return this.columnStara_šifra;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NazivColumn {
                get {
                    return this.columnNaziv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PIBColumn {
                get {
                    return this.columnPIB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mesto_IDColumn {
                get {
                    return this.columnMesto_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MestoColumn {
                get {
                    return this.columnMesto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdresaColumn {
                get {
                    return this.columnAdresa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelefonColumn {
                get {
                    return this.columnTelefon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn _E_mailColumn {
                get {
                    return this._columnE_mail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Kontakt_osobaColumn {
                get {
                    return this.columnKontakt_osoba;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NapomenaColumn {
                get {
                    return this.columnNapomena;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vwPoslovniPartnerRow this[int index] {
                get {
                    return ((vwPoslovniPartnerRow)(this.Rows[index]));
                }
            }
            
            public event vwPoslovniPartnerRowChangeEventHandler vwPoslovniPartnerRowChanging;
            
            public event vwPoslovniPartnerRowChangeEventHandler vwPoslovniPartnerRowChanged;
            
            public event vwPoslovniPartnerRowChangeEventHandler vwPoslovniPartnerRowDeleting;
            
            public event vwPoslovniPartnerRowChangeEventHandler vwPoslovniPartnerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvwPoslovniPartnerRow(vwPoslovniPartnerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vwPoslovniPartnerRow AddvwPoslovniPartnerRow(short PoslovniPartner_ID, string Stara_šifra, string Naziv, string PIB, byte Mesto_ID, string Mesto, string Adresa, string Telefon, string _E_mail, string Kontakt_osoba, string Napomena) {
                vwPoslovniPartnerRow rowvwPoslovniPartnerRow = ((vwPoslovniPartnerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PoslovniPartner_ID,
                        Stara_šifra,
                        Naziv,
                        PIB,
                        Mesto_ID,
                        Mesto,
                        Adresa,
                        Telefon,
                        _E_mail,
                        Kontakt_osoba,
                        Napomena};
                rowvwPoslovniPartnerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowvwPoslovniPartnerRow);
                return rowvwPoslovniPartnerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vwPoslovniPartnerRow FindByPoslovniPartner_ID(short PoslovniPartner_ID) {
                return ((vwPoslovniPartnerRow)(this.Rows.Find(new object[] {
                            PoslovniPartner_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                vwPoslovniPartnerDataTable cln = ((vwPoslovniPartnerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new vwPoslovniPartnerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPoslovniPartner_ID = base.Columns["PoslovniPartner_ID"];
                this.columnStara_šifra = base.Columns["Stara šifra"];
                this.columnNaziv = base.Columns["Naziv"];
                this.columnPIB = base.Columns["PIB"];
                this.columnMesto_ID = base.Columns["Mesto_ID"];
                this.columnMesto = base.Columns["Mesto"];
                this.columnAdresa = base.Columns["Adresa"];
                this.columnTelefon = base.Columns["Telefon"];
                this._columnE_mail = base.Columns["E-mail"];
                this.columnKontakt_osoba = base.Columns["Kontakt osoba"];
                this.columnNapomena = base.Columns["Napomena"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPoslovniPartner_ID = new global::System.Data.DataColumn("PoslovniPartner_ID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoslovniPartner_ID);
                this.columnStara_šifra = new global::System.Data.DataColumn("Stara šifra", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStara_šifra);
                this.columnNaziv = new global::System.Data.DataColumn("Naziv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNaziv);
                this.columnPIB = new global::System.Data.DataColumn("PIB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIB);
                this.columnMesto_ID = new global::System.Data.DataColumn("Mesto_ID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMesto_ID);
                this.columnMesto = new global::System.Data.DataColumn("Mesto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMesto);
                this.columnAdresa = new global::System.Data.DataColumn("Adresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdresa);
                this.columnTelefon = new global::System.Data.DataColumn("Telefon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelefon);
                this._columnE_mail = new global::System.Data.DataColumn("E-mail", typeof(string), null, global::System.Data.MappingType.Element);
                this._columnE_mail.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnE_mail");
                this._columnE_mail.ExtendedProperties.Add("Generator_UserColumnName", "E-mail");
                base.Columns.Add(this._columnE_mail);
                this.columnKontakt_osoba = new global::System.Data.DataColumn("Kontakt osoba", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKontakt_osoba);
                this.columnNapomena = new global::System.Data.DataColumn("Napomena", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNapomena);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoslovniPartner_ID}, true));
                this.columnPoslovniPartner_ID.AllowDBNull = false;
                this.columnPoslovniPartner_ID.Unique = true;
                this.columnStara_šifra.MaxLength = 15;
                this.columnNaziv.AllowDBNull = false;
                this.columnNaziv.MaxLength = 60;
                this.columnPIB.MaxLength = 15;
                this.columnMesto.MaxLength = 30;
                this.columnAdresa.MaxLength = 50;
                this.columnTelefon.MaxLength = 50;
                this._columnE_mail.MaxLength = 50;
                this.columnKontakt_osoba.MaxLength = 50;
                this.columnNapomena.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vwPoslovniPartnerRow NewvwPoslovniPartnerRow() {
                return ((vwPoslovniPartnerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new vwPoslovniPartnerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(vwPoslovniPartnerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vwPoslovniPartnerRowChanged != null)) {
                    this.vwPoslovniPartnerRowChanged(this, new vwPoslovniPartnerRowChangeEvent(((vwPoslovniPartnerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vwPoslovniPartnerRowChanging != null)) {
                    this.vwPoslovniPartnerRowChanging(this, new vwPoslovniPartnerRowChangeEvent(((vwPoslovniPartnerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vwPoslovniPartnerRowDeleted != null)) {
                    this.vwPoslovniPartnerRowDeleted(this, new vwPoslovniPartnerRowChangeEvent(((vwPoslovniPartnerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vwPoslovniPartnerRowDeleting != null)) {
                    this.vwPoslovniPartnerRowDeleting(this, new vwPoslovniPartnerRowChangeEvent(((vwPoslovniPartnerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevwPoslovniPartnerRow(vwPoslovniPartnerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PoslovniPartnerDataSet ds = new PoslovniPartnerDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vwPoslovniPartnerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class mestoDataTableDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMesto_ID;
            
            private global::System.Data.DataColumn columnNaziv;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mestoDataTableDataTable() {
                this.TableName = "mestoDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal mestoDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected mestoDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mesto_IDColumn {
                get {
                    return this.columnMesto_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NazivColumn {
                get {
                    return this.columnNaziv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mestoDataTableRow this[int index] {
                get {
                    return ((mestoDataTableRow)(this.Rows[index]));
                }
            }
            
            public event mestoDataTableRowChangeEventHandler mestoDataTableRowChanging;
            
            public event mestoDataTableRowChangeEventHandler mestoDataTableRowChanged;
            
            public event mestoDataTableRowChangeEventHandler mestoDataTableRowDeleting;
            
            public event mestoDataTableRowChangeEventHandler mestoDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddmestoDataTableRow(mestoDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mestoDataTableRow AddmestoDataTableRow(byte Mesto_ID, string Naziv) {
                mestoDataTableRow rowmestoDataTableRow = ((mestoDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Mesto_ID,
                        Naziv};
                rowmestoDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmestoDataTableRow);
                return rowmestoDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                mestoDataTableDataTable cln = ((mestoDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new mestoDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMesto_ID = base.Columns["Mesto_ID"];
                this.columnNaziv = base.Columns["Naziv"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMesto_ID = new global::System.Data.DataColumn("Mesto_ID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMesto_ID);
                this.columnNaziv = new global::System.Data.DataColumn("Naziv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNaziv);
                this.columnMesto_ID.AllowDBNull = false;
                this.columnNaziv.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mestoDataTableRow NewmestoDataTableRow() {
                return ((mestoDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new mestoDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(mestoDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.mestoDataTableRowChanged != null)) {
                    this.mestoDataTableRowChanged(this, new mestoDataTableRowChangeEvent(((mestoDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.mestoDataTableRowChanging != null)) {
                    this.mestoDataTableRowChanging(this, new mestoDataTableRowChangeEvent(((mestoDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.mestoDataTableRowDeleted != null)) {
                    this.mestoDataTableRowDeleted(this, new mestoDataTableRowChangeEvent(((mestoDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.mestoDataTableRowDeleting != null)) {
                    this.mestoDataTableRowDeleting(this, new mestoDataTableRowChangeEvent(((mestoDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovemestoDataTableRow(mestoDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PoslovniPartnerDataSet ds = new PoslovniPartnerDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "mestoDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class uspDajArtikleDobavljacaDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnProizvođač;
            
            private global::System.Data.DataColumn columnBroj_proizvođača;
            
            private global::System.Data.DataColumn columnCena;
            
            private global::System.Data.DataColumn columnDatum_ažuriranja;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uspDajArtikleDobavljacaDataTable() {
                this.TableName = "uspDajArtikleDobavljaca";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal uspDajArtikleDobavljacaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected uspDajArtikleDobavljacaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProizvođačColumn {
                get {
                    return this.columnProizvođač;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Broj_proizvođačaColumn {
                get {
                    return this.columnBroj_proizvođača;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CenaColumn {
                get {
                    return this.columnCena;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Datum_ažuriranjaColumn {
                get {
                    return this.columnDatum_ažuriranja;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uspDajArtikleDobavljacaRow this[int index] {
                get {
                    return ((uspDajArtikleDobavljacaRow)(this.Rows[index]));
                }
            }
            
            public event uspDajArtikleDobavljacaRowChangeEventHandler uspDajArtikleDobavljacaRowChanging;
            
            public event uspDajArtikleDobavljacaRowChangeEventHandler uspDajArtikleDobavljacaRowChanged;
            
            public event uspDajArtikleDobavljacaRowChangeEventHandler uspDajArtikleDobavljacaRowDeleting;
            
            public event uspDajArtikleDobavljacaRowChangeEventHandler uspDajArtikleDobavljacaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdduspDajArtikleDobavljacaRow(uspDajArtikleDobavljacaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uspDajArtikleDobavljacaRow AdduspDajArtikleDobavljacaRow(string Proizvođač, string Broj_proizvođača, decimal Cena, System.DateTime Datum_ažuriranja) {
                uspDajArtikleDobavljacaRow rowuspDajArtikleDobavljacaRow = ((uspDajArtikleDobavljacaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Proizvođač,
                        Broj_proizvođača,
                        Cena,
                        Datum_ažuriranja};
                rowuspDajArtikleDobavljacaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowuspDajArtikleDobavljacaRow);
                return rowuspDajArtikleDobavljacaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                uspDajArtikleDobavljacaDataTable cln = ((uspDajArtikleDobavljacaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new uspDajArtikleDobavljacaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProizvođač = base.Columns["Proizvođač"];
                this.columnBroj_proizvođača = base.Columns["Broj proizvođača"];
                this.columnCena = base.Columns["Cena"];
                this.columnDatum_ažuriranja = base.Columns["Datum ažuriranja"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProizvođač = new global::System.Data.DataColumn("Proizvođač", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProizvođač);
                this.columnBroj_proizvođača = new global::System.Data.DataColumn("Broj proizvođača", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBroj_proizvođača);
                this.columnCena = new global::System.Data.DataColumn("Cena", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCena);
                this.columnDatum_ažuriranja = new global::System.Data.DataColumn("Datum ažuriranja", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatum_ažuriranja);
                this.columnProizvođač.AllowDBNull = false;
                this.columnProizvođač.MaxLength = 60;
                this.columnBroj_proizvođača.AllowDBNull = false;
                this.columnBroj_proizvođača.MaxLength = 66;
                this.columnCena.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uspDajArtikleDobavljacaRow NewuspDajArtikleDobavljacaRow() {
                return ((uspDajArtikleDobavljacaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new uspDajArtikleDobavljacaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(uspDajArtikleDobavljacaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.uspDajArtikleDobavljacaRowChanged != null)) {
                    this.uspDajArtikleDobavljacaRowChanged(this, new uspDajArtikleDobavljacaRowChangeEvent(((uspDajArtikleDobavljacaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.uspDajArtikleDobavljacaRowChanging != null)) {
                    this.uspDajArtikleDobavljacaRowChanging(this, new uspDajArtikleDobavljacaRowChangeEvent(((uspDajArtikleDobavljacaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.uspDajArtikleDobavljacaRowDeleted != null)) {
                    this.uspDajArtikleDobavljacaRowDeleted(this, new uspDajArtikleDobavljacaRowChangeEvent(((uspDajArtikleDobavljacaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.uspDajArtikleDobavljacaRowDeleting != null)) {
                    this.uspDajArtikleDobavljacaRowDeleting(this, new uspDajArtikleDobavljacaRowChangeEvent(((uspDajArtikleDobavljacaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveuspDajArtikleDobavljacaRow(uspDajArtikleDobavljacaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PoslovniPartnerDataSet ds = new PoslovniPartnerDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "uspDajArtikleDobavljacaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class vwPoslovniPartnerRow : global::System.Data.DataRow {
            
            private vwPoslovniPartnerDataTable tablevwPoslovniPartner;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vwPoslovniPartnerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevwPoslovniPartner = ((vwPoslovniPartnerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short PoslovniPartner_ID {
                get {
                    return ((short)(this[this.tablevwPoslovniPartner.PoslovniPartner_IDColumn]));
                }
                set {
                    this[this.tablevwPoslovniPartner.PoslovniPartner_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Stara_šifra {
                get {
                    try {
                        return ((string)(this[this.tablevwPoslovniPartner.Stara_šifraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stara šifra\' in table \'vwPoslovniPartner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwPoslovniPartner.Stara_šifraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Naziv {
                get {
                    return ((string)(this[this.tablevwPoslovniPartner.NazivColumn]));
                }
                set {
                    this[this.tablevwPoslovniPartner.NazivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PIB {
                get {
                    try {
                        return ((string)(this[this.tablevwPoslovniPartner.PIBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PIB\' in table \'vwPoslovniPartner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwPoslovniPartner.PIBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Mesto_ID {
                get {
                    try {
                        return ((byte)(this[this.tablevwPoslovniPartner.Mesto_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mesto_ID\' in table \'vwPoslovniPartner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwPoslovniPartner.Mesto_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mesto {
                get {
                    try {
                        return ((string)(this[this.tablevwPoslovniPartner.MestoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mesto\' in table \'vwPoslovniPartner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwPoslovniPartner.MestoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Adresa {
                get {
                    try {
                        return ((string)(this[this.tablevwPoslovniPartner.AdresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adresa\' in table \'vwPoslovniPartner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwPoslovniPartner.AdresaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Telefon {
                get {
                    try {
                        return ((string)(this[this.tablevwPoslovniPartner.TelefonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Telefon\' in table \'vwPoslovniPartner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwPoslovniPartner.TelefonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _E_mail {
                get {
                    try {
                        return ((string)(this[this.tablevwPoslovniPartner._E_mailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'E-mail\' in table \'vwPoslovniPartner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwPoslovniPartner._E_mailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kontakt_osoba {
                get {
                    try {
                        return ((string)(this[this.tablevwPoslovniPartner.Kontakt_osobaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kontakt osoba\' in table \'vwPoslovniPartner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwPoslovniPartner.Kontakt_osobaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Napomena {
                get {
                    try {
                        return ((string)(this[this.tablevwPoslovniPartner.NapomenaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Napomena\' in table \'vwPoslovniPartner\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevwPoslovniPartner.NapomenaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStara_šifraNull() {
                return this.IsNull(this.tablevwPoslovniPartner.Stara_šifraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStara_šifraNull() {
                this[this.tablevwPoslovniPartner.Stara_šifraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPIBNull() {
                return this.IsNull(this.tablevwPoslovniPartner.PIBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPIBNull() {
                this[this.tablevwPoslovniPartner.PIBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMesto_IDNull() {
                return this.IsNull(this.tablevwPoslovniPartner.Mesto_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMesto_IDNull() {
                this[this.tablevwPoslovniPartner.Mesto_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMestoNull() {
                return this.IsNull(this.tablevwPoslovniPartner.MestoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMestoNull() {
                this[this.tablevwPoslovniPartner.MestoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdresaNull() {
                return this.IsNull(this.tablevwPoslovniPartner.AdresaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdresaNull() {
                this[this.tablevwPoslovniPartner.AdresaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelefonNull() {
                return this.IsNull(this.tablevwPoslovniPartner.TelefonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelefonNull() {
                this[this.tablevwPoslovniPartner.TelefonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_E_mailNull() {
                return this.IsNull(this.tablevwPoslovniPartner._E_mailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set_E_mailNull() {
                this[this.tablevwPoslovniPartner._E_mailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKontakt_osobaNull() {
                return this.IsNull(this.tablevwPoslovniPartner.Kontakt_osobaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKontakt_osobaNull() {
                this[this.tablevwPoslovniPartner.Kontakt_osobaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNapomenaNull() {
                return this.IsNull(this.tablevwPoslovniPartner.NapomenaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNapomenaNull() {
                this[this.tablevwPoslovniPartner.NapomenaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class mestoDataTableRow : global::System.Data.DataRow {
            
            private mestoDataTableDataTable tablemestoDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal mestoDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablemestoDataTable = ((mestoDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Mesto_ID {
                get {
                    return ((byte)(this[this.tablemestoDataTable.Mesto_IDColumn]));
                }
                set {
                    this[this.tablemestoDataTable.Mesto_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Naziv {
                get {
                    try {
                        return ((string)(this[this.tablemestoDataTable.NazivColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Naziv\' in table \'mestoDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablemestoDataTable.NazivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNazivNull() {
                return this.IsNull(this.tablemestoDataTable.NazivColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNazivNull() {
                this[this.tablemestoDataTable.NazivColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class uspDajArtikleDobavljacaRow : global::System.Data.DataRow {
            
            private uspDajArtikleDobavljacaDataTable tableuspDajArtikleDobavljaca;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal uspDajArtikleDobavljacaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableuspDajArtikleDobavljaca = ((uspDajArtikleDobavljacaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Proizvođač {
                get {
                    return ((string)(this[this.tableuspDajArtikleDobavljaca.ProizvođačColumn]));
                }
                set {
                    this[this.tableuspDajArtikleDobavljaca.ProizvođačColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Broj_proizvođača {
                get {
                    return ((string)(this[this.tableuspDajArtikleDobavljaca.Broj_proizvođačaColumn]));
                }
                set {
                    this[this.tableuspDajArtikleDobavljaca.Broj_proizvođačaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Cena {
                get {
                    return ((decimal)(this[this.tableuspDajArtikleDobavljaca.CenaColumn]));
                }
                set {
                    this[this.tableuspDajArtikleDobavljaca.CenaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Datum_ažuriranja {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableuspDajArtikleDobavljaca.Datum_ažuriranjaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Datum ažuriranja\' in table \'uspDajArtikleDobavljaca\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableuspDajArtikleDobavljaca.Datum_ažuriranjaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDatum_ažuriranjaNull() {
                return this.IsNull(this.tableuspDajArtikleDobavljaca.Datum_ažuriranjaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDatum_ažuriranjaNull() {
                this[this.tableuspDajArtikleDobavljaca.Datum_ažuriranjaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class vwPoslovniPartnerRowChangeEvent : global::System.EventArgs {
            
            private vwPoslovniPartnerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vwPoslovniPartnerRowChangeEvent(vwPoslovniPartnerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vwPoslovniPartnerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class mestoDataTableRowChangeEvent : global::System.EventArgs {
            
            private mestoDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mestoDataTableRowChangeEvent(mestoDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public mestoDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class uspDajArtikleDobavljacaRowChangeEvent : global::System.EventArgs {
            
            private uspDajArtikleDobavljacaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uspDajArtikleDobavljacaRowChangeEvent(uspDajArtikleDobavljacaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public uspDajArtikleDobavljacaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591