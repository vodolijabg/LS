#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Baza
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="LavAuto")]
	public partial class LavAutoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRadnik(Radnik instance);
    partial void UpdateRadnik(Radnik instance);
    partial void DeleteRadnik(Radnik instance);
    partial void InsertVezaRadnikKorisnickiNalog(VezaRadnikKorisnickiNalog instance);
    partial void UpdateVezaRadnikKorisnickiNalog(VezaRadnikKorisnickiNalog instance);
    partial void DeleteVezaRadnikKorisnickiNalog(VezaRadnikKorisnickiNalog instance);
    partial void InsertMesto(Mesto instance);
    partial void UpdateMesto(Mesto instance);
    partial void DeleteMesto(Mesto instance);
    partial void InsertFizickoLice(FizickoLice instance);
    partial void UpdateFizickoLice(FizickoLice instance);
    partial void DeleteFizickoLice(FizickoLice instance);
    partial void InsertPoslovniPartner(PoslovniPartner instance);
    partial void UpdatePoslovniPartner(PoslovniPartner instance);
    partial void DeletePoslovniPartner(PoslovniPartner instance);
    partial void InsertKorisnikPrograma(KorisnikPrograma instance);
    partial void UpdateKorisnikPrograma(KorisnikPrograma instance);
    partial void DeleteKorisnikPrograma(KorisnikPrograma instance);
    partial void InsertServisnaKnjizica(ServisnaKnjizica instance);
    partial void UpdateServisnaKnjizica(ServisnaKnjizica instance);
    partial void DeleteServisnaKnjizica(ServisnaKnjizica instance);
    partial void InsertTipAutomobila(TipAutomobila instance);
    partial void UpdateTipAutomobila(TipAutomobila instance);
    partial void DeleteTipAutomobila(TipAutomobila instance);
    partial void InsertModelAutomobila(ModelAutomobila instance);
    partial void UpdateModelAutomobila(ModelAutomobila instance);
    partial void DeleteModelAutomobila(ModelAutomobila instance);
    partial void InsertProizvodjac(Proizvodjac instance);
    partial void UpdateProizvodjac(Proizvodjac instance);
    partial void DeleteProizvodjac(Proizvodjac instance);
    partial void InsertArtikal(Artikal instance);
    partial void UpdateArtikal(Artikal instance);
    partial void DeleteArtikal(Artikal instance);
    partial void InsertStablo(Stablo instance);
    partial void UpdateStablo(Stablo instance);
    partial void DeleteStablo(Stablo instance);
    partial void InsertVezaArtikalStablo(VezaArtikalStablo instance);
    partial void UpdateVezaArtikalStablo(VezaArtikalStablo instance);
    partial void DeleteVezaArtikalStablo(VezaArtikalStablo instance);
    partial void InsertVezaArtikalKriterijum(VezaArtikalKriterijum instance);
    partial void UpdateVezaArtikalKriterijum(VezaArtikalKriterijum instance);
    partial void DeleteVezaArtikalKriterijum(VezaArtikalKriterijum instance);
    partial void InsertKriterijum(Kriterijum instance);
    partial void UpdateKriterijum(Kriterijum instance);
    partial void DeleteKriterijum(Kriterijum instance);
    partial void InsertMotor(Motor instance);
    partial void UpdateMotor(Motor instance);
    partial void DeleteMotor(Motor instance);
    partial void InsertVezaTipAutomobilaMotor(VezaTipAutomobilaMotor instance);
    partial void UpdateVezaTipAutomobilaMotor(VezaTipAutomobilaMotor instance);
    partial void DeleteVezaTipAutomobilaMotor(VezaTipAutomobilaMotor instance);
    partial void InsertPoreskaStopa(PoreskaStopa instance);
    partial void UpdatePoreskaStopa(PoreskaStopa instance);
    partial void DeletePoreskaStopa(PoreskaStopa instance);
    partial void InsertUgradnja(Ugradnja instance);
    partial void UpdateUgradnja(Ugradnja instance);
    partial void DeleteUgradnja(Ugradnja instance);
    partial void InsertVezaUgradnjaKriterijum(VezaUgradnjaKriterijum instance);
    partial void UpdateVezaUgradnjaKriterijum(VezaUgradnjaKriterijum instance);
    partial void DeleteVezaUgradnjaKriterijum(VezaUgradnjaKriterijum instance);
    partial void InsertVrstaBrojaZaPretragu(VrstaBrojaZaPretragu instance);
    partial void UpdateVrstaBrojaZaPretragu(VrstaBrojaZaPretragu instance);
    partial void DeleteVrstaBrojaZaPretragu(VrstaBrojaZaPretragu instance);
    partial void InsertVezaArtikalBrojZaPretragu(VezaArtikalBrojZaPretragu instance);
    partial void UpdateVezaArtikalBrojZaPretragu(VezaArtikalBrojZaPretragu instance);
    partial void DeleteVezaArtikalBrojZaPretragu(VezaArtikalBrojZaPretragu instance);
    partial void InsertVezaArtikalDobavljac(VezaArtikalDobavljac instance);
    partial void UpdateVezaArtikalDobavljac(VezaArtikalDobavljac instance);
    partial void DeleteVezaArtikalDobavljac(VezaArtikalDobavljac instance);
    partial void InsertTipCvora(TipCvora instance);
    partial void UpdateTipCvora(TipCvora instance);
    partial void DeleteTipCvora(TipCvora instance);
    partial void InsertOpisTabela(OpisTabela instance);
    partial void UpdateOpisTabela(OpisTabela instance);
    partial void DeleteOpisTabela(OpisTabela instance);
    partial void InsertZaglavlje(Zaglavlje instance);
    partial void UpdateZaglavlje(Zaglavlje instance);
    partial void DeleteZaglavlje(Zaglavlje instance);
    partial void InsertPonuda(Ponuda instance);
    partial void UpdatePonuda(Ponuda instance);
    partial void DeletePonuda(Ponuda instance);
    partial void InsertRadniNalog(RadniNalog instance);
    partial void UpdateRadniNalog(RadniNalog instance);
    partial void DeleteRadniNalog(RadniNalog instance);
    partial void InsertStavkaUsluga(StavkaUsluga instance);
    partial void UpdateStavkaUsluga(StavkaUsluga instance);
    partial void DeleteStavkaUsluga(StavkaUsluga instance);
    partial void InsertStavkaArtikal(StavkaArtikal instance);
    partial void UpdateStavkaArtikal(StavkaArtikal instance);
    partial void DeleteStavkaArtikal(StavkaArtikal instance);
    partial void InsertRadniNalogStavkaUsluga(RadniNalogStavkaUsluga instance);
    partial void UpdateRadniNalogStavkaUsluga(RadniNalogStavkaUsluga instance);
    partial void DeleteRadniNalogStavkaUsluga(RadniNalogStavkaUsluga instance);
    partial void InsertUsluga(Usluga instance);
    partial void UpdateUsluga(Usluga instance);
    partial void DeleteUsluga(Usluga instance);
    partial void InsertVrstaUsluge(VrstaUsluge instance);
    partial void UpdateVrstaUsluge(VrstaUsluge instance);
    partial void DeleteVrstaUsluge(VrstaUsluge instance);
    partial void InsertRadnoMesto(RadnoMesto instance);
    partial void UpdateRadnoMesto(RadnoMesto instance);
    partial void DeleteRadnoMesto(RadnoMesto instance);
    partial void InsertRadniNalogStatus(RadniNalogStatus instance);
    partial void UpdateRadniNalogStatus(RadniNalogStatus instance);
    partial void DeleteRadniNalogStatus(RadniNalogStatus instance);
    partial void InsertNosilacGrupe(NosilacGrupe instance);
    partial void UpdateNosilacGrupe(NosilacGrupe instance);
    partial void DeleteNosilacGrupe(NosilacGrupe instance);
    partial void InsertNivo(Nivo instance);
    partial void UpdateNivo(Nivo instance);
    partial void DeleteNivo(Nivo instance);
    partial void InsertNacinZahtevaZaPonudu(NacinZahtevaZaPonudu instance);
    partial void UpdateNacinZahtevaZaPonudu(NacinZahtevaZaPonudu instance);
    partial void DeleteNacinZahtevaZaPonudu(NacinZahtevaZaPonudu instance);
    partial void InsertBod(Bod instance);
    partial void UpdateBod(Bod instance);
    partial void DeleteBod(Bod instance);
    partial void InsertRadnoVreme(RadnoVreme instance);
    partial void UpdateRadnoVreme(RadnoVreme instance);
    partial void DeleteRadnoVreme(RadnoVreme instance);
    partial void InsertStavkaUslugaRadniRaspored(StavkaUslugaRadniRaspored instance);
    partial void UpdateStavkaUslugaRadniRaspored(StavkaUslugaRadniRaspored instance);
    partial void DeleteStavkaUslugaRadniRaspored(StavkaUslugaRadniRaspored instance);
    #endregion
		
		public LavAutoDataContext() : 
				base(global::Baza.Properties.Settings.Default.LavAutoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LavAutoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LavAutoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LavAutoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LavAutoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Radnik> Radniks
		{
			get
			{
				return this.GetTable<Radnik>();
			}
		}
		
		public System.Data.Linq.Table<VezaRadnikKorisnickiNalog> VezaRadnikKorisnickiNalogs
		{
			get
			{
				return this.GetTable<VezaRadnikKorisnickiNalog>();
			}
		}
		
		public System.Data.Linq.Table<Mesto> Mestos
		{
			get
			{
				return this.GetTable<Mesto>();
			}
		}
		
		public System.Data.Linq.Table<FizickoLice> FizickoLices
		{
			get
			{
				return this.GetTable<FizickoLice>();
			}
		}
		
		public System.Data.Linq.Table<PoslovniPartner> PoslovniPartners
		{
			get
			{
				return this.GetTable<PoslovniPartner>();
			}
		}
		
		public System.Data.Linq.Table<KorisnikPrograma> KorisnikProgramas
		{
			get
			{
				return this.GetTable<KorisnikPrograma>();
			}
		}
		
		public System.Data.Linq.Table<ServisnaKnjizica> ServisnaKnjizicas
		{
			get
			{
				return this.GetTable<ServisnaKnjizica>();
			}
		}
		
		public System.Data.Linq.Table<TipAutomobila> TipAutomobilas
		{
			get
			{
				return this.GetTable<TipAutomobila>();
			}
		}
		
		public System.Data.Linq.Table<ModelAutomobila> ModelAutomobilas
		{
			get
			{
				return this.GetTable<ModelAutomobila>();
			}
		}
		
		public System.Data.Linq.Table<Proizvodjac> Proizvodjacs
		{
			get
			{
				return this.GetTable<Proizvodjac>();
			}
		}
		
		public System.Data.Linq.Table<Artikal> Artikals
		{
			get
			{
				return this.GetTable<Artikal>();
			}
		}
		
		public System.Data.Linq.Table<Stablo> Stablos
		{
			get
			{
				return this.GetTable<Stablo>();
			}
		}
		
		public System.Data.Linq.Table<VezaArtikalStablo> VezaArtikalStablos
		{
			get
			{
				return this.GetTable<VezaArtikalStablo>();
			}
		}
		
		public System.Data.Linq.Table<VezaArtikalKriterijum> VezaArtikalKriterijums
		{
			get
			{
				return this.GetTable<VezaArtikalKriterijum>();
			}
		}
		
		public System.Data.Linq.Table<Kriterijum> Kriterijums
		{
			get
			{
				return this.GetTable<Kriterijum>();
			}
		}
		
		public System.Data.Linq.Table<Motor> Motors
		{
			get
			{
				return this.GetTable<Motor>();
			}
		}
		
		public System.Data.Linq.Table<VezaTipAutomobilaMotor> VezaTipAutomobilaMotors
		{
			get
			{
				return this.GetTable<VezaTipAutomobilaMotor>();
			}
		}
		
		public System.Data.Linq.Table<PoreskaStopa> PoreskaStopas
		{
			get
			{
				return this.GetTable<PoreskaStopa>();
			}
		}
		
		public System.Data.Linq.Table<Ugradnja> Ugradnjas
		{
			get
			{
				return this.GetTable<Ugradnja>();
			}
		}
		
		public System.Data.Linq.Table<VezaUgradnjaKriterijum> VezaUgradnjaKriterijums
		{
			get
			{
				return this.GetTable<VezaUgradnjaKriterijum>();
			}
		}
		
		public System.Data.Linq.Table<VrstaBrojaZaPretragu> VrstaBrojaZaPretragus
		{
			get
			{
				return this.GetTable<VrstaBrojaZaPretragu>();
			}
		}
		
		public System.Data.Linq.Table<VezaArtikalBrojZaPretragu> VezaArtikalBrojZaPretragus
		{
			get
			{
				return this.GetTable<VezaArtikalBrojZaPretragu>();
			}
		}
		
		public System.Data.Linq.Table<VezaArtikalDobavljac> VezaArtikalDobavljacs
		{
			get
			{
				return this.GetTable<VezaArtikalDobavljac>();
			}
		}
		
		public System.Data.Linq.Table<TipCvora> TipCvoras
		{
			get
			{
				return this.GetTable<TipCvora>();
			}
		}
		
		public System.Data.Linq.Table<OpisTabela> OpisTabelas
		{
			get
			{
				return this.GetTable<OpisTabela>();
			}
		}
		
		public System.Data.Linq.Table<Zaglavlje> Zaglavljes
		{
			get
			{
				return this.GetTable<Zaglavlje>();
			}
		}
		
		public System.Data.Linq.Table<Ponuda> Ponudas
		{
			get
			{
				return this.GetTable<Ponuda>();
			}
		}
		
		public System.Data.Linq.Table<RadniNalog> RadniNalogs
		{
			get
			{
				return this.GetTable<RadniNalog>();
			}
		}
		
		public System.Data.Linq.Table<StavkaUsluga> StavkaUslugas
		{
			get
			{
				return this.GetTable<StavkaUsluga>();
			}
		}
		
		public System.Data.Linq.Table<StavkaArtikal> StavkaArtikals
		{
			get
			{
				return this.GetTable<StavkaArtikal>();
			}
		}
		
		public System.Data.Linq.Table<RadniNalogStavkaUsluga> RadniNalogStavkaUslugas
		{
			get
			{
				return this.GetTable<RadniNalogStavkaUsluga>();
			}
		}
		
		public System.Data.Linq.Table<Usluga> Uslugas
		{
			get
			{
				return this.GetTable<Usluga>();
			}
		}
		
		public System.Data.Linq.Table<VrstaUsluge> VrstaUsluges
		{
			get
			{
				return this.GetTable<VrstaUsluge>();
			}
		}
		
		public System.Data.Linq.Table<RadnoMesto> RadnoMestos
		{
			get
			{
				return this.GetTable<RadnoMesto>();
			}
		}
		
		public System.Data.Linq.Table<RadniNalogStatus> RadniNalogStatus
		{
			get
			{
				return this.GetTable<RadniNalogStatus>();
			}
		}
		
		public System.Data.Linq.Table<NosilacGrupe> NosilacGrupes
		{
			get
			{
				return this.GetTable<NosilacGrupe>();
			}
		}
		
		public System.Data.Linq.Table<Nivo> Nivos
		{
			get
			{
				return this.GetTable<Nivo>();
			}
		}
		
		public System.Data.Linq.Table<NacinZahtevaZaPonudu> NacinZahtevaZaPonudus
		{
			get
			{
				return this.GetTable<NacinZahtevaZaPonudu>();
			}
		}
		
		public System.Data.Linq.Table<Bod> Bods
		{
			get
			{
				return this.GetTable<Bod>();
			}
		}
		
		public System.Data.Linq.Table<RadnoVreme> RadnoVremes
		{
			get
			{
				return this.GetTable<RadnoVreme>();
			}
		}
		
		public System.Data.Linq.Table<StavkaUslugaRadniRaspored> StavkaUslugaRadniRasporeds
		{
			get
			{
				return this.GetTable<StavkaUslugaRadniRaspored>();
			}
		}
	}
	
	[Table(Name="dbo.Radnik")]
	public partial class Radnik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Radnik_ID;
		
		private string _Sifra;
		
		private string _Ime;
		
		private string _Prezime;
		
		private string _ImeOca;
		
		private string _Nadimak;
		
		private System.Nullable<long> _JMBG;
		
		private System.Nullable<System.DateTime> _DatumRodjenja;
		
		private System.Nullable<int> _Mesto_ID;
		
		private string _Adresa;
		
		private string _Telefon;
		
		private System.Nullable<System.DateTime> _ZaposlenOd;
		
		private string _Raspored;
		
		private EntitySet<VezaRadnikKorisnickiNalog> _VezaRadnikKorisnickiNalogs;
		
		private EntitySet<Ponuda> _Ponudas;
		
		private EntitySet<RadniNalog> _RadniNalogs;
		
		private EntitySet<StavkaUslugaRadniRaspored> _StavkaUslugaRadniRasporeds;
		
		private EntityRef<Mesto> _Mesto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRadnik_IDChanging(int value);
    partial void OnRadnik_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnPrezimeChanging(string value);
    partial void OnPrezimeChanged();
    partial void OnImeOcaChanging(string value);
    partial void OnImeOcaChanged();
    partial void OnNadimakChanging(string value);
    partial void OnNadimakChanged();
    partial void OnJMBGChanging(System.Nullable<long> value);
    partial void OnJMBGChanged();
    partial void OnDatumRodjenjaChanging(System.Nullable<System.DateTime> value);
    partial void OnDatumRodjenjaChanged();
    partial void OnMesto_IDChanging(System.Nullable<int> value);
    partial void OnMesto_IDChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnZaposlenOdChanging(System.Nullable<System.DateTime> value);
    partial void OnZaposlenOdChanged();
    partial void OnRasporedChanging(string value);
    partial void OnRasporedChanged();
    #endregion
		
		public Radnik()
		{
			this._VezaRadnikKorisnickiNalogs = new EntitySet<VezaRadnikKorisnickiNalog>(new Action<VezaRadnikKorisnickiNalog>(this.attach_VezaRadnikKorisnickiNalogs), new Action<VezaRadnikKorisnickiNalog>(this.detach_VezaRadnikKorisnickiNalogs));
			this._Ponudas = new EntitySet<Ponuda>(new Action<Ponuda>(this.attach_Ponudas), new Action<Ponuda>(this.detach_Ponudas));
			this._RadniNalogs = new EntitySet<RadniNalog>(new Action<RadniNalog>(this.attach_RadniNalogs), new Action<RadniNalog>(this.detach_RadniNalogs));
			this._StavkaUslugaRadniRasporeds = new EntitySet<StavkaUslugaRadniRaspored>(new Action<StavkaUslugaRadniRaspored>(this.attach_StavkaUslugaRadniRasporeds), new Action<StavkaUslugaRadniRaspored>(this.detach_StavkaUslugaRadniRasporeds));
			this._Mesto = default(EntityRef<Mesto>);
			OnCreated();
		}
		
		[Column(Storage="_Radnik_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Radnik_ID
		{
			get
			{
				return this._Radnik_ID;
			}
			set
			{
				if ((this._Radnik_ID != value))
				{
					this.OnRadnik_IDChanging(value);
					this.SendPropertyChanging();
					this._Radnik_ID = value;
					this.SendPropertyChanged("Radnik_ID");
					this.OnRadnik_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_Ime", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[Column(Storage="_Prezime", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Prezime
		{
			get
			{
				return this._Prezime;
			}
			set
			{
				if ((this._Prezime != value))
				{
					this.OnPrezimeChanging(value);
					this.SendPropertyChanging();
					this._Prezime = value;
					this.SendPropertyChanged("Prezime");
					this.OnPrezimeChanged();
				}
			}
		}
		
		[Column(Storage="_ImeOca", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ImeOca
		{
			get
			{
				return this._ImeOca;
			}
			set
			{
				if ((this._ImeOca != value))
				{
					this.OnImeOcaChanging(value);
					this.SendPropertyChanging();
					this._ImeOca = value;
					this.SendPropertyChanged("ImeOca");
					this.OnImeOcaChanged();
				}
			}
		}
		
		[Column(Storage="_Nadimak", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Nadimak
		{
			get
			{
				return this._Nadimak;
			}
			set
			{
				if ((this._Nadimak != value))
				{
					this.OnNadimakChanging(value);
					this.SendPropertyChanging();
					this._Nadimak = value;
					this.SendPropertyChanged("Nadimak");
					this.OnNadimakChanged();
				}
			}
		}
		
		[Column(Storage="_JMBG", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> JMBG
		{
			get
			{
				return this._JMBG;
			}
			set
			{
				if ((this._JMBG != value))
				{
					this.OnJMBGChanging(value);
					this.SendPropertyChanging();
					this._JMBG = value;
					this.SendPropertyChanged("JMBG");
					this.OnJMBGChanged();
				}
			}
		}
		
		[Column(Storage="_DatumRodjenja", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DatumRodjenja
		{
			get
			{
				return this._DatumRodjenja;
			}
			set
			{
				if ((this._DatumRodjenja != value))
				{
					this.OnDatumRodjenjaChanging(value);
					this.SendPropertyChanging();
					this._DatumRodjenja = value;
					this.SendPropertyChanged("DatumRodjenja");
					this.OnDatumRodjenjaChanged();
				}
			}
		}
		
		[Column(Storage="_Mesto_ID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Mesto_ID
		{
			get
			{
				return this._Mesto_ID;
			}
			set
			{
				if ((this._Mesto_ID != value))
				{
					if (this._Mesto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMesto_IDChanging(value);
					this.SendPropertyChanging();
					this._Mesto_ID = value;
					this.SendPropertyChanged("Mesto_ID");
					this.OnMesto_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Adresa", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[Column(Storage="_Telefon", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[Column(Storage="_ZaposlenOd", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ZaposlenOd
		{
			get
			{
				return this._ZaposlenOd;
			}
			set
			{
				if ((this._ZaposlenOd != value))
				{
					this.OnZaposlenOdChanging(value);
					this.SendPropertyChanging();
					this._ZaposlenOd = value;
					this.SendPropertyChanged("ZaposlenOd");
					this.OnZaposlenOdChanged();
				}
			}
		}
		
		[Column(Storage="_Raspored", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Raspored
		{
			get
			{
				return this._Raspored;
			}
			set
			{
				if ((this._Raspored != value))
				{
					this.OnRasporedChanging(value);
					this.SendPropertyChanging();
					this._Raspored = value;
					this.SendPropertyChanged("Raspored");
					this.OnRasporedChanged();
				}
			}
		}
		
		[Association(Name="Radnik_VezaRadnikKorisnickiNalog", Storage="_VezaRadnikKorisnickiNalogs", ThisKey="Radnik_ID", OtherKey="Radnik_ID")]
		public EntitySet<VezaRadnikKorisnickiNalog> VezaRadnikKorisnickiNalogs
		{
			get
			{
				return this._VezaRadnikKorisnickiNalogs;
			}
			set
			{
				this._VezaRadnikKorisnickiNalogs.Assign(value);
			}
		}
		
		[Association(Name="Radnik_Ponuda", Storage="_Ponudas", ThisKey="Radnik_ID", OtherKey="Radnik_ID")]
		public EntitySet<Ponuda> Ponudas
		{
			get
			{
				return this._Ponudas;
			}
			set
			{
				this._Ponudas.Assign(value);
			}
		}
		
		[Association(Name="Radnik_RadniNalog", Storage="_RadniNalogs", ThisKey="Radnik_ID", OtherKey="Radnik_ID")]
		public EntitySet<RadniNalog> RadniNalogs
		{
			get
			{
				return this._RadniNalogs;
			}
			set
			{
				this._RadniNalogs.Assign(value);
			}
		}
		
		[Association(Name="Radnik_StavkaUslugaRadniRaspored", Storage="_StavkaUslugaRadniRasporeds", ThisKey="Radnik_ID", OtherKey="Radnik_ID")]
		public EntitySet<StavkaUslugaRadniRaspored> StavkaUslugaRadniRasporeds
		{
			get
			{
				return this._StavkaUslugaRadniRasporeds;
			}
			set
			{
				this._StavkaUslugaRadniRasporeds.Assign(value);
			}
		}
		
		[Association(Name="Mesto_Radnik", Storage="_Mesto", ThisKey="Mesto_ID", OtherKey="Mesto_ID", IsForeignKey=true)]
		public Mesto Mesto
		{
			get
			{
				return this._Mesto.Entity;
			}
			set
			{
				Mesto previousValue = this._Mesto.Entity;
				if (((previousValue != value) 
							|| (this._Mesto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mesto.Entity = null;
						previousValue.Radniks.Remove(this);
					}
					this._Mesto.Entity = value;
					if ((value != null))
					{
						value.Radniks.Add(this);
						this._Mesto_ID = value.Mesto_ID;
					}
					else
					{
						this._Mesto_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Mesto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VezaRadnikKorisnickiNalogs(VezaRadnikKorisnickiNalog entity)
		{
			this.SendPropertyChanging();
			entity.Radnik = this;
		}
		
		private void detach_VezaRadnikKorisnickiNalogs(VezaRadnikKorisnickiNalog entity)
		{
			this.SendPropertyChanging();
			entity.Radnik = null;
		}
		
		private void attach_Ponudas(Ponuda entity)
		{
			this.SendPropertyChanging();
			entity.Radnik = this;
		}
		
		private void detach_Ponudas(Ponuda entity)
		{
			this.SendPropertyChanging();
			entity.Radnik = null;
		}
		
		private void attach_RadniNalogs(RadniNalog entity)
		{
			this.SendPropertyChanging();
			entity.Radnik = this;
		}
		
		private void detach_RadniNalogs(RadniNalog entity)
		{
			this.SendPropertyChanging();
			entity.Radnik = null;
		}
		
		private void attach_StavkaUslugaRadniRasporeds(StavkaUslugaRadniRaspored entity)
		{
			this.SendPropertyChanging();
			entity.Radnik = this;
		}
		
		private void detach_StavkaUslugaRadniRasporeds(StavkaUslugaRadniRaspored entity)
		{
			this.SendPropertyChanging();
			entity.Radnik = null;
		}
	}
	
	[Table(Name="dbo.VezaRadnikKorisnickiNalog")]
	public partial class VezaRadnikKorisnickiNalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Radnik_ID;
		
		private string _KorisnickiNalog;
		
		private EntityRef<Radnik> _Radnik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRadnik_IDChanging(int value);
    partial void OnRadnik_IDChanged();
    partial void OnKorisnickiNalogChanging(string value);
    partial void OnKorisnickiNalogChanged();
    #endregion
		
		public VezaRadnikKorisnickiNalog()
		{
			this._Radnik = default(EntityRef<Radnik>);
			OnCreated();
		}
		
		[Column(Storage="_Radnik_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Radnik_ID
		{
			get
			{
				return this._Radnik_ID;
			}
			set
			{
				if ((this._Radnik_ID != value))
				{
					if (this._Radnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRadnik_IDChanging(value);
					this.SendPropertyChanging();
					this._Radnik_ID = value;
					this.SendPropertyChanged("Radnik_ID");
					this.OnRadnik_IDChanged();
				}
			}
		}
		
		[Column(Storage="_KorisnickiNalog", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string KorisnickiNalog
		{
			get
			{
				return this._KorisnickiNalog;
			}
			set
			{
				if ((this._KorisnickiNalog != value))
				{
					this.OnKorisnickiNalogChanging(value);
					this.SendPropertyChanging();
					this._KorisnickiNalog = value;
					this.SendPropertyChanged("KorisnickiNalog");
					this.OnKorisnickiNalogChanged();
				}
			}
		}
		
		[Association(Name="Radnik_VezaRadnikKorisnickiNalog", Storage="_Radnik", ThisKey="Radnik_ID", OtherKey="Radnik_ID", IsForeignKey=true)]
		public Radnik Radnik
		{
			get
			{
				return this._Radnik.Entity;
			}
			set
			{
				Radnik previousValue = this._Radnik.Entity;
				if (((previousValue != value) 
							|| (this._Radnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Radnik.Entity = null;
						previousValue.VezaRadnikKorisnickiNalogs.Remove(this);
					}
					this._Radnik.Entity = value;
					if ((value != null))
					{
						value.VezaRadnikKorisnickiNalogs.Add(this);
						this._Radnik_ID = value.Radnik_ID;
					}
					else
					{
						this._Radnik_ID = default(int);
					}
					this.SendPropertyChanged("Radnik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Mesto")]
	public partial class Mesto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Mesto_ID;
		
		private string _Sifra;
		
		private string _Naziv;
		
		private string _PozivniBroj;
		
		private string _PostanskiBroj;
		
		private EntitySet<Radnik> _Radniks;
		
		private EntitySet<FizickoLice> _FizickoLices;
		
		private EntitySet<PoslovniPartner> _PoslovniPartners;
		
		private EntitySet<KorisnikPrograma> _KorisnikProgramas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMesto_IDChanging(int value);
    partial void OnMesto_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    partial void OnPozivniBrojChanging(string value);
    partial void OnPozivniBrojChanged();
    partial void OnPostanskiBrojChanging(string value);
    partial void OnPostanskiBrojChanged();
    #endregion
		
		public Mesto()
		{
			this._Radniks = new EntitySet<Radnik>(new Action<Radnik>(this.attach_Radniks), new Action<Radnik>(this.detach_Radniks));
			this._FizickoLices = new EntitySet<FizickoLice>(new Action<FizickoLice>(this.attach_FizickoLices), new Action<FizickoLice>(this.detach_FizickoLices));
			this._PoslovniPartners = new EntitySet<PoslovniPartner>(new Action<PoslovniPartner>(this.attach_PoslovniPartners), new Action<PoslovniPartner>(this.detach_PoslovniPartners));
			this._KorisnikProgramas = new EntitySet<KorisnikPrograma>(new Action<KorisnikPrograma>(this.attach_KorisnikProgramas), new Action<KorisnikPrograma>(this.detach_KorisnikProgramas));
			OnCreated();
		}
		
		[Column(Storage="_Mesto_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Mesto_ID
		{
			get
			{
				return this._Mesto_ID;
			}
			set
			{
				if ((this._Mesto_ID != value))
				{
					this.OnMesto_IDChanging(value);
					this.SendPropertyChanging();
					this._Mesto_ID = value;
					this.SendPropertyChanged("Mesto_ID");
					this.OnMesto_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[Column(Storage="_PozivniBroj", DbType="NVarChar(5)", UpdateCheck=UpdateCheck.Never)]
		public string PozivniBroj
		{
			get
			{
				return this._PozivniBroj;
			}
			set
			{
				if ((this._PozivniBroj != value))
				{
					this.OnPozivniBrojChanging(value);
					this.SendPropertyChanging();
					this._PozivniBroj = value;
					this.SendPropertyChanged("PozivniBroj");
					this.OnPozivniBrojChanged();
				}
			}
		}
		
		[Column(Storage="_PostanskiBroj", DbType="NVarChar(5)", UpdateCheck=UpdateCheck.Never)]
		public string PostanskiBroj
		{
			get
			{
				return this._PostanskiBroj;
			}
			set
			{
				if ((this._PostanskiBroj != value))
				{
					this.OnPostanskiBrojChanging(value);
					this.SendPropertyChanging();
					this._PostanskiBroj = value;
					this.SendPropertyChanged("PostanskiBroj");
					this.OnPostanskiBrojChanged();
				}
			}
		}
		
		[Association(Name="Mesto_Radnik", Storage="_Radniks", ThisKey="Mesto_ID", OtherKey="Mesto_ID")]
		public EntitySet<Radnik> Radniks
		{
			get
			{
				return this._Radniks;
			}
			set
			{
				this._Radniks.Assign(value);
			}
		}
		
		[Association(Name="Mesto_FizickoLice", Storage="_FizickoLices", ThisKey="Mesto_ID", OtherKey="Mesto_ID")]
		public EntitySet<FizickoLice> FizickoLices
		{
			get
			{
				return this._FizickoLices;
			}
			set
			{
				this._FizickoLices.Assign(value);
			}
		}
		
		[Association(Name="Mesto_PoslovniPartner", Storage="_PoslovniPartners", ThisKey="Mesto_ID", OtherKey="Mesto_ID")]
		public EntitySet<PoslovniPartner> PoslovniPartners
		{
			get
			{
				return this._PoslovniPartners;
			}
			set
			{
				this._PoslovniPartners.Assign(value);
			}
		}
		
		[Association(Name="Mesto_KorisnikPrograma", Storage="_KorisnikProgramas", ThisKey="Mesto_ID", OtherKey="Mesto_ID")]
		public EntitySet<KorisnikPrograma> KorisnikProgramas
		{
			get
			{
				return this._KorisnikProgramas;
			}
			set
			{
				this._KorisnikProgramas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Radniks(Radnik entity)
		{
			this.SendPropertyChanging();
			entity.Mesto = this;
		}
		
		private void detach_Radniks(Radnik entity)
		{
			this.SendPropertyChanging();
			entity.Mesto = null;
		}
		
		private void attach_FizickoLices(FizickoLice entity)
		{
			this.SendPropertyChanging();
			entity.Mesto = this;
		}
		
		private void detach_FizickoLices(FizickoLice entity)
		{
			this.SendPropertyChanging();
			entity.Mesto = null;
		}
		
		private void attach_PoslovniPartners(PoslovniPartner entity)
		{
			this.SendPropertyChanging();
			entity.Mesto = this;
		}
		
		private void detach_PoslovniPartners(PoslovniPartner entity)
		{
			this.SendPropertyChanging();
			entity.Mesto = null;
		}
		
		private void attach_KorisnikProgramas(KorisnikPrograma entity)
		{
			this.SendPropertyChanging();
			entity.Mesto = this;
		}
		
		private void detach_KorisnikProgramas(KorisnikPrograma entity)
		{
			this.SendPropertyChanging();
			entity.Mesto = null;
		}
	}
	
	[Table(Name="dbo.FizickoLice")]
	public partial class FizickoLice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FizickoLice_ID;
		
		private string _Sifra;
		
		private string _Ime;
		
		private string _Prezime;
		
		private bool _RegistrovanKupac;
		
		private System.Nullable<int> _Mesto_ID;
		
		private string _Adresa;
		
		private string _Telefon;
		
		private string _EMail;
		
		private EntitySet<ServisnaKnjizica> _ServisnaKnjizicas;
		
		private EntityRef<Mesto> _Mesto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFizickoLice_IDChanging(int value);
    partial void OnFizickoLice_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnPrezimeChanging(string value);
    partial void OnPrezimeChanged();
    partial void OnRegistrovanKupacChanging(bool value);
    partial void OnRegistrovanKupacChanged();
    partial void OnMesto_IDChanging(System.Nullable<int> value);
    partial void OnMesto_IDChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    #endregion
		
		public FizickoLice()
		{
			this._ServisnaKnjizicas = new EntitySet<ServisnaKnjizica>(new Action<ServisnaKnjizica>(this.attach_ServisnaKnjizicas), new Action<ServisnaKnjizica>(this.detach_ServisnaKnjizicas));
			this._Mesto = default(EntityRef<Mesto>);
			OnCreated();
		}
		
		[Column(Storage="_FizickoLice_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FizickoLice_ID
		{
			get
			{
				return this._FizickoLice_ID;
			}
			set
			{
				if ((this._FizickoLice_ID != value))
				{
					this.OnFizickoLice_IDChanging(value);
					this.SendPropertyChanging();
					this._FizickoLice_ID = value;
					this.SendPropertyChanged("FizickoLice_ID");
					this.OnFizickoLice_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[Column(Storage="_Prezime", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Prezime
		{
			get
			{
				return this._Prezime;
			}
			set
			{
				if ((this._Prezime != value))
				{
					this.OnPrezimeChanging(value);
					this.SendPropertyChanging();
					this._Prezime = value;
					this.SendPropertyChanged("Prezime");
					this.OnPrezimeChanged();
				}
			}
		}
		
		[Column(Storage="_RegistrovanKupac", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RegistrovanKupac
		{
			get
			{
				return this._RegistrovanKupac;
			}
			set
			{
				if ((this._RegistrovanKupac != value))
				{
					this.OnRegistrovanKupacChanging(value);
					this.SendPropertyChanging();
					this._RegistrovanKupac = value;
					this.SendPropertyChanged("RegistrovanKupac");
					this.OnRegistrovanKupacChanged();
				}
			}
		}
		
		[Column(Storage="_Mesto_ID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Mesto_ID
		{
			get
			{
				return this._Mesto_ID;
			}
			set
			{
				if ((this._Mesto_ID != value))
				{
					if (this._Mesto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMesto_IDChanging(value);
					this.SendPropertyChanging();
					this._Mesto_ID = value;
					this.SendPropertyChanged("Mesto_ID");
					this.OnMesto_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Adresa", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[Column(Storage="_Telefon", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[Column(Storage="_EMail", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[Association(Name="FizickoLice_ServisnaKnjizica", Storage="_ServisnaKnjizicas", ThisKey="FizickoLice_ID", OtherKey="FizickoLice_ID")]
		public EntitySet<ServisnaKnjizica> ServisnaKnjizicas
		{
			get
			{
				return this._ServisnaKnjizicas;
			}
			set
			{
				this._ServisnaKnjizicas.Assign(value);
			}
		}
		
		[Association(Name="Mesto_FizickoLice", Storage="_Mesto", ThisKey="Mesto_ID", OtherKey="Mesto_ID", IsForeignKey=true)]
		public Mesto Mesto
		{
			get
			{
				return this._Mesto.Entity;
			}
			set
			{
				Mesto previousValue = this._Mesto.Entity;
				if (((previousValue != value) 
							|| (this._Mesto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mesto.Entity = null;
						previousValue.FizickoLices.Remove(this);
					}
					this._Mesto.Entity = value;
					if ((value != null))
					{
						value.FizickoLices.Add(this);
						this._Mesto_ID = value.Mesto_ID;
					}
					else
					{
						this._Mesto_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Mesto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServisnaKnjizicas(ServisnaKnjizica entity)
		{
			this.SendPropertyChanging();
			entity.FizickoLice = this;
		}
		
		private void detach_ServisnaKnjizicas(ServisnaKnjizica entity)
		{
			this.SendPropertyChanging();
			entity.FizickoLice = null;
		}
	}
	
	[Table(Name="dbo.PoslovniPartner")]
	public partial class PoslovniPartner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PoslovniPartner_ID;
		
		private string _Sifra;
		
		private string _SkracenNaziv;
		
		private string _PunNaziv;
		
		private System.Nullable<int> _PIB;
		
		private System.Nullable<int> _MaticniBroj;
		
		private string _ZiroRacun;
		
		private System.Nullable<int> _Mesto_ID;
		
		private string _Adresa;
		
		private string _KontaktOsoba1;
		
		private string _Telefon1;
		
		private string _EMail1;
		
		private string _KontaktOsoba2;
		
		private string _Telefon2;
		
		private string _EMail2;
		
		private string _Faks;
		
		private EntitySet<ServisnaKnjizica> _ServisnaKnjizicas;
		
		private EntitySet<VezaArtikalDobavljac> _VezaArtikalDobavljacs;
		
		private EntityRef<Mesto> _Mesto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPoslovniPartner_IDChanging(int value);
    partial void OnPoslovniPartner_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnSkracenNazivChanging(string value);
    partial void OnSkracenNazivChanged();
    partial void OnPunNazivChanging(string value);
    partial void OnPunNazivChanged();
    partial void OnPIBChanging(System.Nullable<int> value);
    partial void OnPIBChanged();
    partial void OnMaticniBrojChanging(System.Nullable<int> value);
    partial void OnMaticniBrojChanged();
    partial void OnZiroRacunChanging(string value);
    partial void OnZiroRacunChanged();
    partial void OnMesto_IDChanging(System.Nullable<int> value);
    partial void OnMesto_IDChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnKontaktOsoba1Changing(string value);
    partial void OnKontaktOsoba1Changed();
    partial void OnTelefon1Changing(string value);
    partial void OnTelefon1Changed();
    partial void OnEMail1Changing(string value);
    partial void OnEMail1Changed();
    partial void OnKontaktOsoba2Changing(string value);
    partial void OnKontaktOsoba2Changed();
    partial void OnTelefon2Changing(string value);
    partial void OnTelefon2Changed();
    partial void OnEMail2Changing(string value);
    partial void OnEMail2Changed();
    partial void OnFaksChanging(string value);
    partial void OnFaksChanged();
    #endregion
		
		public PoslovniPartner()
		{
			this._ServisnaKnjizicas = new EntitySet<ServisnaKnjizica>(new Action<ServisnaKnjizica>(this.attach_ServisnaKnjizicas), new Action<ServisnaKnjizica>(this.detach_ServisnaKnjizicas));
			this._VezaArtikalDobavljacs = new EntitySet<VezaArtikalDobavljac>(new Action<VezaArtikalDobavljac>(this.attach_VezaArtikalDobavljacs), new Action<VezaArtikalDobavljac>(this.detach_VezaArtikalDobavljacs));
			this._Mesto = default(EntityRef<Mesto>);
			OnCreated();
		}
		
		[Column(Storage="_PoslovniPartner_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int PoslovniPartner_ID
		{
			get
			{
				return this._PoslovniPartner_ID;
			}
			set
			{
				if ((this._PoslovniPartner_ID != value))
				{
					this.OnPoslovniPartner_IDChanging(value);
					this.SendPropertyChanging();
					this._PoslovniPartner_ID = value;
					this.SendPropertyChanged("PoslovniPartner_ID");
					this.OnPoslovniPartner_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_SkracenNaziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SkracenNaziv
		{
			get
			{
				return this._SkracenNaziv;
			}
			set
			{
				if ((this._SkracenNaziv != value))
				{
					this.OnSkracenNazivChanging(value);
					this.SendPropertyChanging();
					this._SkracenNaziv = value;
					this.SendPropertyChanged("SkracenNaziv");
					this.OnSkracenNazivChanged();
				}
			}
		}
		
		[Column(Storage="_PunNaziv", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string PunNaziv
		{
			get
			{
				return this._PunNaziv;
			}
			set
			{
				if ((this._PunNaziv != value))
				{
					this.OnPunNazivChanging(value);
					this.SendPropertyChanging();
					this._PunNaziv = value;
					this.SendPropertyChanged("PunNaziv");
					this.OnPunNazivChanged();
				}
			}
		}
		
		[Column(Storage="_PIB", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PIB
		{
			get
			{
				return this._PIB;
			}
			set
			{
				if ((this._PIB != value))
				{
					this.OnPIBChanging(value);
					this.SendPropertyChanging();
					this._PIB = value;
					this.SendPropertyChanged("PIB");
					this.OnPIBChanged();
				}
			}
		}
		
		[Column(Storage="_MaticniBroj", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MaticniBroj
		{
			get
			{
				return this._MaticniBroj;
			}
			set
			{
				if ((this._MaticniBroj != value))
				{
					this.OnMaticniBrojChanging(value);
					this.SendPropertyChanging();
					this._MaticniBroj = value;
					this.SendPropertyChanged("MaticniBroj");
					this.OnMaticniBrojChanged();
				}
			}
		}
		
		[Column(Storage="_ZiroRacun", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string ZiroRacun
		{
			get
			{
				return this._ZiroRacun;
			}
			set
			{
				if ((this._ZiroRacun != value))
				{
					this.OnZiroRacunChanging(value);
					this.SendPropertyChanging();
					this._ZiroRacun = value;
					this.SendPropertyChanged("ZiroRacun");
					this.OnZiroRacunChanged();
				}
			}
		}
		
		[Column(Storage="_Mesto_ID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Mesto_ID
		{
			get
			{
				return this._Mesto_ID;
			}
			set
			{
				if ((this._Mesto_ID != value))
				{
					if (this._Mesto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMesto_IDChanging(value);
					this.SendPropertyChanging();
					this._Mesto_ID = value;
					this.SendPropertyChanged("Mesto_ID");
					this.OnMesto_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Adresa", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[Column(Storage="_KontaktOsoba1", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string KontaktOsoba1
		{
			get
			{
				return this._KontaktOsoba1;
			}
			set
			{
				if ((this._KontaktOsoba1 != value))
				{
					this.OnKontaktOsoba1Changing(value);
					this.SendPropertyChanging();
					this._KontaktOsoba1 = value;
					this.SendPropertyChanged("KontaktOsoba1");
					this.OnKontaktOsoba1Changed();
				}
			}
		}
		
		[Column(Storage="_Telefon1", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Telefon1
		{
			get
			{
				return this._Telefon1;
			}
			set
			{
				if ((this._Telefon1 != value))
				{
					this.OnTelefon1Changing(value);
					this.SendPropertyChanging();
					this._Telefon1 = value;
					this.SendPropertyChanged("Telefon1");
					this.OnTelefon1Changed();
				}
			}
		}
		
		[Column(Storage="_EMail1", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string EMail1
		{
			get
			{
				return this._EMail1;
			}
			set
			{
				if ((this._EMail1 != value))
				{
					this.OnEMail1Changing(value);
					this.SendPropertyChanging();
					this._EMail1 = value;
					this.SendPropertyChanged("EMail1");
					this.OnEMail1Changed();
				}
			}
		}
		
		[Column(Storage="_KontaktOsoba2", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string KontaktOsoba2
		{
			get
			{
				return this._KontaktOsoba2;
			}
			set
			{
				if ((this._KontaktOsoba2 != value))
				{
					this.OnKontaktOsoba2Changing(value);
					this.SendPropertyChanging();
					this._KontaktOsoba2 = value;
					this.SendPropertyChanged("KontaktOsoba2");
					this.OnKontaktOsoba2Changed();
				}
			}
		}
		
		[Column(Storage="_Telefon2", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Telefon2
		{
			get
			{
				return this._Telefon2;
			}
			set
			{
				if ((this._Telefon2 != value))
				{
					this.OnTelefon2Changing(value);
					this.SendPropertyChanging();
					this._Telefon2 = value;
					this.SendPropertyChanged("Telefon2");
					this.OnTelefon2Changed();
				}
			}
		}
		
		[Column(Storage="_EMail2", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string EMail2
		{
			get
			{
				return this._EMail2;
			}
			set
			{
				if ((this._EMail2 != value))
				{
					this.OnEMail2Changing(value);
					this.SendPropertyChanging();
					this._EMail2 = value;
					this.SendPropertyChanged("EMail2");
					this.OnEMail2Changed();
				}
			}
		}
		
		[Column(Storage="_Faks", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Faks
		{
			get
			{
				return this._Faks;
			}
			set
			{
				if ((this._Faks != value))
				{
					this.OnFaksChanging(value);
					this.SendPropertyChanging();
					this._Faks = value;
					this.SendPropertyChanged("Faks");
					this.OnFaksChanged();
				}
			}
		}
		
		[Association(Name="PoslovniPartner_ServisnaKnjizica", Storage="_ServisnaKnjizicas", ThisKey="PoslovniPartner_ID", OtherKey="PoslovniPartner_ID")]
		public EntitySet<ServisnaKnjizica> ServisnaKnjizicas
		{
			get
			{
				return this._ServisnaKnjizicas;
			}
			set
			{
				this._ServisnaKnjizicas.Assign(value);
			}
		}
		
		[Association(Name="PoslovniPartner_VezaArtikalDobavljac", Storage="_VezaArtikalDobavljacs", ThisKey="PoslovniPartner_ID", OtherKey="PoslovniPartner_ID")]
		public EntitySet<VezaArtikalDobavljac> VezaArtikalDobavljacs
		{
			get
			{
				return this._VezaArtikalDobavljacs;
			}
			set
			{
				this._VezaArtikalDobavljacs.Assign(value);
			}
		}
		
		[Association(Name="Mesto_PoslovniPartner", Storage="_Mesto", ThisKey="Mesto_ID", OtherKey="Mesto_ID", IsForeignKey=true)]
		public Mesto Mesto
		{
			get
			{
				return this._Mesto.Entity;
			}
			set
			{
				Mesto previousValue = this._Mesto.Entity;
				if (((previousValue != value) 
							|| (this._Mesto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mesto.Entity = null;
						previousValue.PoslovniPartners.Remove(this);
					}
					this._Mesto.Entity = value;
					if ((value != null))
					{
						value.PoslovniPartners.Add(this);
						this._Mesto_ID = value.Mesto_ID;
					}
					else
					{
						this._Mesto_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Mesto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServisnaKnjizicas(ServisnaKnjizica entity)
		{
			this.SendPropertyChanging();
			entity.PoslovniPartner = this;
		}
		
		private void detach_ServisnaKnjizicas(ServisnaKnjizica entity)
		{
			this.SendPropertyChanging();
			entity.PoslovniPartner = null;
		}
		
		private void attach_VezaArtikalDobavljacs(VezaArtikalDobavljac entity)
		{
			this.SendPropertyChanging();
			entity.PoslovniPartner = this;
		}
		
		private void detach_VezaArtikalDobavljacs(VezaArtikalDobavljac entity)
		{
			this.SendPropertyChanging();
			entity.PoslovniPartner = null;
		}
	}
	
	[Table(Name="dbo.KorisnikPrograma")]
	public partial class KorisnikPrograma : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KorisnikPrograma_ID;
		
		private string _Sifra;
		
		private string _Naziv;
		
		private int _PIB;
		
		private int _MaticniBroj;
		
		private string _ZiroRacun;
		
		private int _Mesto_ID;
		
		private string _Adresa;
		
		private string _Telefon;
		
		private string _Faks;
		
		private string _EMail;
		
		private EntitySet<VezaArtikalDobavljac> _VezaArtikalDobavljacs;
		
		private EntitySet<Zaglavlje> _Zaglavljes;
		
		private EntityRef<Mesto> _Mesto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKorisnikPrograma_IDChanging(int value);
    partial void OnKorisnikPrograma_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    partial void OnPIBChanging(int value);
    partial void OnPIBChanged();
    partial void OnMaticniBrojChanging(int value);
    partial void OnMaticniBrojChanged();
    partial void OnZiroRacunChanging(string value);
    partial void OnZiroRacunChanged();
    partial void OnMesto_IDChanging(int value);
    partial void OnMesto_IDChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnFaksChanging(string value);
    partial void OnFaksChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    #endregion
		
		public KorisnikPrograma()
		{
			this._VezaArtikalDobavljacs = new EntitySet<VezaArtikalDobavljac>(new Action<VezaArtikalDobavljac>(this.attach_VezaArtikalDobavljacs), new Action<VezaArtikalDobavljac>(this.detach_VezaArtikalDobavljacs));
			this._Zaglavljes = new EntitySet<Zaglavlje>(new Action<Zaglavlje>(this.attach_Zaglavljes), new Action<Zaglavlje>(this.detach_Zaglavljes));
			this._Mesto = default(EntityRef<Mesto>);
			OnCreated();
		}
		
		[Column(Storage="_KorisnikPrograma_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int KorisnikPrograma_ID
		{
			get
			{
				return this._KorisnikPrograma_ID;
			}
			set
			{
				if ((this._KorisnikPrograma_ID != value))
				{
					this.OnKorisnikPrograma_IDChanging(value);
					this.SendPropertyChanging();
					this._KorisnikPrograma_ID = value;
					this.SendPropertyChanged("KorisnikPrograma_ID");
					this.OnKorisnikPrograma_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[Column(Storage="_PIB", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PIB
		{
			get
			{
				return this._PIB;
			}
			set
			{
				if ((this._PIB != value))
				{
					this.OnPIBChanging(value);
					this.SendPropertyChanging();
					this._PIB = value;
					this.SendPropertyChanged("PIB");
					this.OnPIBChanged();
				}
			}
		}
		
		[Column(Storage="_MaticniBroj", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int MaticniBroj
		{
			get
			{
				return this._MaticniBroj;
			}
			set
			{
				if ((this._MaticniBroj != value))
				{
					this.OnMaticniBrojChanging(value);
					this.SendPropertyChanging();
					this._MaticniBroj = value;
					this.SendPropertyChanged("MaticniBroj");
					this.OnMaticniBrojChanged();
				}
			}
		}
		
		[Column(Storage="_ZiroRacun", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ZiroRacun
		{
			get
			{
				return this._ZiroRacun;
			}
			set
			{
				if ((this._ZiroRacun != value))
				{
					this.OnZiroRacunChanging(value);
					this.SendPropertyChanging();
					this._ZiroRacun = value;
					this.SendPropertyChanged("ZiroRacun");
					this.OnZiroRacunChanged();
				}
			}
		}
		
		[Column(Storage="_Mesto_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Mesto_ID
		{
			get
			{
				return this._Mesto_ID;
			}
			set
			{
				if ((this._Mesto_ID != value))
				{
					if (this._Mesto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMesto_IDChanging(value);
					this.SendPropertyChanging();
					this._Mesto_ID = value;
					this.SendPropertyChanged("Mesto_ID");
					this.OnMesto_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Adresa", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[Column(Storage="_Telefon", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[Column(Storage="_Faks", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Faks
		{
			get
			{
				return this._Faks;
			}
			set
			{
				if ((this._Faks != value))
				{
					this.OnFaksChanging(value);
					this.SendPropertyChanging();
					this._Faks = value;
					this.SendPropertyChanged("Faks");
					this.OnFaksChanged();
				}
			}
		}
		
		[Column(Storage="_EMail", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[Association(Name="KorisnikPrograma_VezaArtikalDobavljac", Storage="_VezaArtikalDobavljacs", ThisKey="KorisnikPrograma_ID", OtherKey="KorisnikPrograma_ID")]
		public EntitySet<VezaArtikalDobavljac> VezaArtikalDobavljacs
		{
			get
			{
				return this._VezaArtikalDobavljacs;
			}
			set
			{
				this._VezaArtikalDobavljacs.Assign(value);
			}
		}
		
		[Association(Name="KorisnikPrograma_Zaglavlje", Storage="_Zaglavljes", ThisKey="KorisnikPrograma_ID", OtherKey="KorisnikPrograma_ID")]
		public EntitySet<Zaglavlje> Zaglavljes
		{
			get
			{
				return this._Zaglavljes;
			}
			set
			{
				this._Zaglavljes.Assign(value);
			}
		}
		
		[Association(Name="Mesto_KorisnikPrograma", Storage="_Mesto", ThisKey="Mesto_ID", OtherKey="Mesto_ID", IsForeignKey=true)]
		public Mesto Mesto
		{
			get
			{
				return this._Mesto.Entity;
			}
			set
			{
				Mesto previousValue = this._Mesto.Entity;
				if (((previousValue != value) 
							|| (this._Mesto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mesto.Entity = null;
						previousValue.KorisnikProgramas.Remove(this);
					}
					this._Mesto.Entity = value;
					if ((value != null))
					{
						value.KorisnikProgramas.Add(this);
						this._Mesto_ID = value.Mesto_ID;
					}
					else
					{
						this._Mesto_ID = default(int);
					}
					this.SendPropertyChanged("Mesto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VezaArtikalDobavljacs(VezaArtikalDobavljac entity)
		{
			this.SendPropertyChanging();
			entity.KorisnikPrograma = this;
		}
		
		private void detach_VezaArtikalDobavljacs(VezaArtikalDobavljac entity)
		{
			this.SendPropertyChanging();
			entity.KorisnikPrograma = null;
		}
		
		private void attach_Zaglavljes(Zaglavlje entity)
		{
			this.SendPropertyChanging();
			entity.KorisnikPrograma = this;
		}
		
		private void detach_Zaglavljes(Zaglavlje entity)
		{
			this.SendPropertyChanging();
			entity.KorisnikPrograma = null;
		}
	}
	
	[Table(Name="dbo.ServisnaKnjizica")]
	public partial class ServisnaKnjizica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServisnaKnjizica_ID;
		
		private string _Sifra;
		
		private System.Nullable<int> _FizickoLice_ID;
		
		private System.Nullable<int> _PoslovniPartner_ID;
		
		private int _TipAutomobila_ID;
		
		private string _BrojSasije;
		
		private string _BrojMotora;
		
		private System.Nullable<int> _Godiste;
		
		private System.Nullable<int> _Kilometraza;
		
		private string _RegistarskiBroj;
		
		private System.Nullable<System.DateTime> _DatumRegistracije;
		
		private System.Nullable<bool> _ABS;
		
		private System.Nullable<bool> _PS;
		
		private System.Nullable<bool> _AC;
		
		private string _Napomena;
		
		private EntitySet<Zaglavlje> _Zaglavljes;
		
		private EntityRef<FizickoLice> _FizickoLice;
		
		private EntityRef<PoslovniPartner> _PoslovniPartner;
		
		private EntityRef<TipAutomobila> _TipAutomobila;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServisnaKnjizica_IDChanging(int value);
    partial void OnServisnaKnjizica_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnFizickoLice_IDChanging(System.Nullable<int> value);
    partial void OnFizickoLice_IDChanged();
    partial void OnPoslovniPartner_IDChanging(System.Nullable<int> value);
    partial void OnPoslovniPartner_IDChanged();
    partial void OnTipAutomobila_IDChanging(int value);
    partial void OnTipAutomobila_IDChanged();
    partial void OnBrojSasijeChanging(string value);
    partial void OnBrojSasijeChanged();
    partial void OnBrojMotoraChanging(string value);
    partial void OnBrojMotoraChanged();
    partial void OnGodisteChanging(System.Nullable<int> value);
    partial void OnGodisteChanged();
    partial void OnKilometrazaChanging(System.Nullable<int> value);
    partial void OnKilometrazaChanged();
    partial void OnRegistarskiBrojChanging(string value);
    partial void OnRegistarskiBrojChanged();
    partial void OnDatumRegistracijeChanging(System.Nullable<System.DateTime> value);
    partial void OnDatumRegistracijeChanged();
    partial void OnABSChanging(System.Nullable<bool> value);
    partial void OnABSChanged();
    partial void OnPSChanging(System.Nullable<bool> value);
    partial void OnPSChanged();
    partial void OnACChanging(System.Nullable<bool> value);
    partial void OnACChanged();
    partial void OnNapomenaChanging(string value);
    partial void OnNapomenaChanged();
    #endregion
		
		public ServisnaKnjizica()
		{
			this._Zaglavljes = new EntitySet<Zaglavlje>(new Action<Zaglavlje>(this.attach_Zaglavljes), new Action<Zaglavlje>(this.detach_Zaglavljes));
			this._FizickoLice = default(EntityRef<FizickoLice>);
			this._PoslovniPartner = default(EntityRef<PoslovniPartner>);
			this._TipAutomobila = default(EntityRef<TipAutomobila>);
			OnCreated();
		}
		
		[Column(Storage="_ServisnaKnjizica_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServisnaKnjizica_ID
		{
			get
			{
				return this._ServisnaKnjizica_ID;
			}
			set
			{
				if ((this._ServisnaKnjizica_ID != value))
				{
					this.OnServisnaKnjizica_IDChanging(value);
					this.SendPropertyChanging();
					this._ServisnaKnjizica_ID = value;
					this.SendPropertyChanged("ServisnaKnjizica_ID");
					this.OnServisnaKnjizica_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_FizickoLice_ID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> FizickoLice_ID
		{
			get
			{
				return this._FizickoLice_ID;
			}
			set
			{
				if ((this._FizickoLice_ID != value))
				{
					if (this._FizickoLice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFizickoLice_IDChanging(value);
					this.SendPropertyChanging();
					this._FizickoLice_ID = value;
					this.SendPropertyChanged("FizickoLice_ID");
					this.OnFizickoLice_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PoslovniPartner_ID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PoslovniPartner_ID
		{
			get
			{
				return this._PoslovniPartner_ID;
			}
			set
			{
				if ((this._PoslovniPartner_ID != value))
				{
					if (this._PoslovniPartner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPoslovniPartner_IDChanging(value);
					this.SendPropertyChanging();
					this._PoslovniPartner_ID = value;
					this.SendPropertyChanged("PoslovniPartner_ID");
					this.OnPoslovniPartner_IDChanged();
				}
			}
		}
		
		[Column(Storage="_TipAutomobila_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TipAutomobila_ID
		{
			get
			{
				return this._TipAutomobila_ID;
			}
			set
			{
				if ((this._TipAutomobila_ID != value))
				{
					if (this._TipAutomobila.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipAutomobila_IDChanging(value);
					this.SendPropertyChanging();
					this._TipAutomobila_ID = value;
					this.SendPropertyChanged("TipAutomobila_ID");
					this.OnTipAutomobila_IDChanged();
				}
			}
		}
		
		[Column(Storage="_BrojSasije", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string BrojSasije
		{
			get
			{
				return this._BrojSasije;
			}
			set
			{
				if ((this._BrojSasije != value))
				{
					this.OnBrojSasijeChanging(value);
					this.SendPropertyChanging();
					this._BrojSasije = value;
					this.SendPropertyChanged("BrojSasije");
					this.OnBrojSasijeChanged();
				}
			}
		}
		
		[Column(Storage="_BrojMotora", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string BrojMotora
		{
			get
			{
				return this._BrojMotora;
			}
			set
			{
				if ((this._BrojMotora != value))
				{
					this.OnBrojMotoraChanging(value);
					this.SendPropertyChanging();
					this._BrojMotora = value;
					this.SendPropertyChanged("BrojMotora");
					this.OnBrojMotoraChanged();
				}
			}
		}
		
		[Column(Storage="_Godiste", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Godiste
		{
			get
			{
				return this._Godiste;
			}
			set
			{
				if ((this._Godiste != value))
				{
					this.OnGodisteChanging(value);
					this.SendPropertyChanging();
					this._Godiste = value;
					this.SendPropertyChanged("Godiste");
					this.OnGodisteChanged();
				}
			}
		}
		
		[Column(Storage="_Kilometraza", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Kilometraza
		{
			get
			{
				return this._Kilometraza;
			}
			set
			{
				if ((this._Kilometraza != value))
				{
					this.OnKilometrazaChanging(value);
					this.SendPropertyChanging();
					this._Kilometraza = value;
					this.SendPropertyChanged("Kilometraza");
					this.OnKilometrazaChanged();
				}
			}
		}
		
		[Column(Storage="_RegistarskiBroj", DbType="NVarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string RegistarskiBroj
		{
			get
			{
				return this._RegistarskiBroj;
			}
			set
			{
				if ((this._RegistarskiBroj != value))
				{
					this.OnRegistarskiBrojChanging(value);
					this.SendPropertyChanging();
					this._RegistarskiBroj = value;
					this.SendPropertyChanged("RegistarskiBroj");
					this.OnRegistarskiBrojChanged();
				}
			}
		}
		
		[Column(Storage="_DatumRegistracije", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DatumRegistracije
		{
			get
			{
				return this._DatumRegistracije;
			}
			set
			{
				if ((this._DatumRegistracije != value))
				{
					this.OnDatumRegistracijeChanging(value);
					this.SendPropertyChanging();
					this._DatumRegistracije = value;
					this.SendPropertyChanged("DatumRegistracije");
					this.OnDatumRegistracijeChanged();
				}
			}
		}
		
		[Column(Storage="_ABS", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> ABS
		{
			get
			{
				return this._ABS;
			}
			set
			{
				if ((this._ABS != value))
				{
					this.OnABSChanging(value);
					this.SendPropertyChanging();
					this._ABS = value;
					this.SendPropertyChanged("ABS");
					this.OnABSChanged();
				}
			}
		}
		
		[Column(Storage="_PS", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> PS
		{
			get
			{
				return this._PS;
			}
			set
			{
				if ((this._PS != value))
				{
					this.OnPSChanging(value);
					this.SendPropertyChanging();
					this._PS = value;
					this.SendPropertyChanged("PS");
					this.OnPSChanged();
				}
			}
		}
		
		[Column(Storage="_AC", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> AC
		{
			get
			{
				return this._AC;
			}
			set
			{
				if ((this._AC != value))
				{
					this.OnACChanging(value);
					this.SendPropertyChanging();
					this._AC = value;
					this.SendPropertyChanged("AC");
					this.OnACChanged();
				}
			}
		}
		
		[Column(Storage="_Napomena", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string Napomena
		{
			get
			{
				return this._Napomena;
			}
			set
			{
				if ((this._Napomena != value))
				{
					this.OnNapomenaChanging(value);
					this.SendPropertyChanging();
					this._Napomena = value;
					this.SendPropertyChanged("Napomena");
					this.OnNapomenaChanged();
				}
			}
		}
		
		[Association(Name="ServisnaKnjizica_Zaglavlje", Storage="_Zaglavljes", ThisKey="ServisnaKnjizica_ID", OtherKey="ServisnaKnjizica_ID")]
		public EntitySet<Zaglavlje> Zaglavljes
		{
			get
			{
				return this._Zaglavljes;
			}
			set
			{
				this._Zaglavljes.Assign(value);
			}
		}
		
		[Association(Name="FizickoLice_ServisnaKnjizica", Storage="_FizickoLice", ThisKey="FizickoLice_ID", OtherKey="FizickoLice_ID", IsForeignKey=true)]
		public FizickoLice FizickoLice
		{
			get
			{
				return this._FizickoLice.Entity;
			}
			set
			{
				FizickoLice previousValue = this._FizickoLice.Entity;
				if (((previousValue != value) 
							|| (this._FizickoLice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FizickoLice.Entity = null;
						previousValue.ServisnaKnjizicas.Remove(this);
					}
					this._FizickoLice.Entity = value;
					if ((value != null))
					{
						value.ServisnaKnjizicas.Add(this);
						this._FizickoLice_ID = value.FizickoLice_ID;
					}
					else
					{
						this._FizickoLice_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("FizickoLice");
				}
			}
		}
		
		[Association(Name="PoslovniPartner_ServisnaKnjizica", Storage="_PoslovniPartner", ThisKey="PoslovniPartner_ID", OtherKey="PoslovniPartner_ID", IsForeignKey=true)]
		public PoslovniPartner PoslovniPartner
		{
			get
			{
				return this._PoslovniPartner.Entity;
			}
			set
			{
				PoslovniPartner previousValue = this._PoslovniPartner.Entity;
				if (((previousValue != value) 
							|| (this._PoslovniPartner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PoslovniPartner.Entity = null;
						previousValue.ServisnaKnjizicas.Remove(this);
					}
					this._PoslovniPartner.Entity = value;
					if ((value != null))
					{
						value.ServisnaKnjizicas.Add(this);
						this._PoslovniPartner_ID = value.PoslovniPartner_ID;
					}
					else
					{
						this._PoslovniPartner_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PoslovniPartner");
				}
			}
		}
		
		[Association(Name="TipAutomobila_ServisnaKnjizica", Storage="_TipAutomobila", ThisKey="TipAutomobila_ID", OtherKey="TipAutomobila_ID", IsForeignKey=true)]
		public TipAutomobila TipAutomobila
		{
			get
			{
				return this._TipAutomobila.Entity;
			}
			set
			{
				TipAutomobila previousValue = this._TipAutomobila.Entity;
				if (((previousValue != value) 
							|| (this._TipAutomobila.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipAutomobila.Entity = null;
						previousValue.ServisnaKnjizicas.Remove(this);
					}
					this._TipAutomobila.Entity = value;
					if ((value != null))
					{
						value.ServisnaKnjizicas.Add(this);
						this._TipAutomobila_ID = value.TipAutomobila_ID;
					}
					else
					{
						this._TipAutomobila_ID = default(int);
					}
					this.SendPropertyChanged("TipAutomobila");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zaglavljes(Zaglavlje entity)
		{
			this.SendPropertyChanging();
			entity.ServisnaKnjizica = this;
		}
		
		private void detach_Zaglavljes(Zaglavlje entity)
		{
			this.SendPropertyChanging();
			entity.ServisnaKnjizica = null;
		}
	}
	
	[Table(Name="dbo.TipAutomobila")]
	public partial class TipAutomobila : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TipAutomobila_ID;
		
		private int _Opis_ID;
		
		private int _ModelAutomobila_ID;
		
		private System.Nullable<int> _ProizvodnjaOd;
		
		private System.Nullable<int> _ProizvodnjaDo;
		
		private System.Nullable<short> _SnagaKWOd;
		
		private System.Nullable<short> _SnagaKWDo;
		
		private System.Nullable<short> _SnagaKSOd;
		
		private System.Nullable<short> _SnagaKSDo;
		
		private System.Nullable<int> _ZapreminaCcm;
		
		private System.Nullable<byte> _Cilindara;
		
		private System.Nullable<byte> _VentilaPoCilindru;
		
		private System.Nullable<int> _VrstaMotora_Opis;
		
		private System.Nullable<int> _VrstaGoriva_Opis;
		
		private System.Nullable<int> _PripremaGoriva_Opis;
		
		private System.Nullable<int> _VrstaKatalizatora_Opis;
		
		private System.Nullable<int> _NaponAkumulatora_Opis;
		
		private System.Nullable<int> _VrstaKaroserije_Opis;
		
		private System.Nullable<byte> _Vrata;
		
		private System.Nullable<byte> _RezervoarLitara;
		
		private System.Nullable<int> _ABS_Opis;
		
		private System.Nullable<int> _ASR_Opis;
		
		private System.Nullable<int> _KocioniSistem_Opis;
		
		private System.Nullable<int> _VrstaKocnica_Opis;
		
		private System.Nullable<int> _VrstaPogona_Opis;
		
		private System.Nullable<int> _Menjac_Opis;
		
		private EntitySet<ServisnaKnjizica> _ServisnaKnjizicas;
		
		private EntitySet<VezaTipAutomobilaMotor> _VezaTipAutomobilaMotors;
		
		private EntitySet<Ugradnja> _Ugradnjas;
		
		private EntityRef<ModelAutomobila> _ModelAutomobila;
		
		private EntityRef<OpisTabela> _OpisTabela;
		
		private EntityRef<OpisTabela> _OpisTabelaMenjac_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaPripremaGoriva_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaABS_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaKocioniSistem_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaNaponAkumulatora_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaASR_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaVrstaMotora_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaVrstaKocnica_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaVrstaGoriva_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaVrstaKatalizatora_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaVrstaKaroserije_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaVrstaPogona_Opis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTipAutomobila_IDChanging(int value);
    partial void OnTipAutomobila_IDChanged();
    partial void OnOpis_IDChanging(int value);
    partial void OnOpis_IDChanged();
    partial void OnModelAutomobila_IDChanging(int value);
    partial void OnModelAutomobila_IDChanged();
    partial void OnProizvodnjaOdChanging(System.Nullable<int> value);
    partial void OnProizvodnjaOdChanged();
    partial void OnProizvodnjaDoChanging(System.Nullable<int> value);
    partial void OnProizvodnjaDoChanged();
    partial void OnSnagaKWOdChanging(System.Nullable<short> value);
    partial void OnSnagaKWOdChanged();
    partial void OnSnagaKWDoChanging(System.Nullable<short> value);
    partial void OnSnagaKWDoChanged();
    partial void OnSnagaKSOdChanging(System.Nullable<short> value);
    partial void OnSnagaKSOdChanged();
    partial void OnSnagaKSDoChanging(System.Nullable<short> value);
    partial void OnSnagaKSDoChanged();
    partial void OnZapreminaCcmChanging(System.Nullable<int> value);
    partial void OnZapreminaCcmChanged();
    partial void OnCilindaraChanging(System.Nullable<byte> value);
    partial void OnCilindaraChanged();
    partial void OnVentilaPoCilindruChanging(System.Nullable<byte> value);
    partial void OnVentilaPoCilindruChanged();
    partial void OnVrstaMotora_OpisChanging(System.Nullable<int> value);
    partial void OnVrstaMotora_OpisChanged();
    partial void OnVrstaGoriva_OpisChanging(System.Nullable<int> value);
    partial void OnVrstaGoriva_OpisChanged();
    partial void OnPripremaGoriva_OpisChanging(System.Nullable<int> value);
    partial void OnPripremaGoriva_OpisChanged();
    partial void OnVrstaKatalizatora_OpisChanging(System.Nullable<int> value);
    partial void OnVrstaKatalizatora_OpisChanged();
    partial void OnNaponAkumulatora_OpisChanging(System.Nullable<int> value);
    partial void OnNaponAkumulatora_OpisChanged();
    partial void OnVrstaKaroserije_OpisChanging(System.Nullable<int> value);
    partial void OnVrstaKaroserije_OpisChanged();
    partial void OnVrataChanging(System.Nullable<byte> value);
    partial void OnVrataChanged();
    partial void OnRezervoarLitaraChanging(System.Nullable<byte> value);
    partial void OnRezervoarLitaraChanged();
    partial void OnABS_OpisChanging(System.Nullable<int> value);
    partial void OnABS_OpisChanged();
    partial void OnASR_OpisChanging(System.Nullable<int> value);
    partial void OnASR_OpisChanged();
    partial void OnKocioniSistem_OpisChanging(System.Nullable<int> value);
    partial void OnKocioniSistem_OpisChanged();
    partial void OnVrstaKocnica_OpisChanging(System.Nullable<int> value);
    partial void OnVrstaKocnica_OpisChanged();
    partial void OnVrstaPogona_OpisChanging(System.Nullable<int> value);
    partial void OnVrstaPogona_OpisChanged();
    partial void OnMenjac_OpisChanging(System.Nullable<int> value);
    partial void OnMenjac_OpisChanged();
    #endregion
		
		public TipAutomobila()
		{
			this._ServisnaKnjizicas = new EntitySet<ServisnaKnjizica>(new Action<ServisnaKnjizica>(this.attach_ServisnaKnjizicas), new Action<ServisnaKnjizica>(this.detach_ServisnaKnjizicas));
			this._VezaTipAutomobilaMotors = new EntitySet<VezaTipAutomobilaMotor>(new Action<VezaTipAutomobilaMotor>(this.attach_VezaTipAutomobilaMotors), new Action<VezaTipAutomobilaMotor>(this.detach_VezaTipAutomobilaMotors));
			this._Ugradnjas = new EntitySet<Ugradnja>(new Action<Ugradnja>(this.attach_Ugradnjas), new Action<Ugradnja>(this.detach_Ugradnjas));
			this._ModelAutomobila = default(EntityRef<ModelAutomobila>);
			this._OpisTabela = default(EntityRef<OpisTabela>);
			this._OpisTabelaMenjac_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaPripremaGoriva_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaABS_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaKocioniSistem_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaNaponAkumulatora_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaASR_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaVrstaMotora_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaVrstaKocnica_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaVrstaGoriva_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaVrstaKatalizatora_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaVrstaKaroserije_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaVrstaPogona_Opis = default(EntityRef<OpisTabela>);
			OnCreated();
		}
		
		[Column(Storage="_TipAutomobila_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TipAutomobila_ID
		{
			get
			{
				return this._TipAutomobila_ID;
			}
			set
			{
				if ((this._TipAutomobila_ID != value))
				{
					this.OnTipAutomobila_IDChanging(value);
					this.SendPropertyChanging();
					this._TipAutomobila_ID = value;
					this.SendPropertyChanged("TipAutomobila_ID");
					this.OnTipAutomobila_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Opis_ID", DbType="Int NOT NULL")]
		public int Opis_ID
		{
			get
			{
				return this._Opis_ID;
			}
			set
			{
				if ((this._Opis_ID != value))
				{
					if (this._OpisTabela.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOpis_IDChanging(value);
					this.SendPropertyChanging();
					this._Opis_ID = value;
					this.SendPropertyChanged("Opis_ID");
					this.OnOpis_IDChanged();
				}
			}
		}
		
		[Column(Storage="_ModelAutomobila_ID", DbType="Int NOT NULL")]
		public int ModelAutomobila_ID
		{
			get
			{
				return this._ModelAutomobila_ID;
			}
			set
			{
				if ((this._ModelAutomobila_ID != value))
				{
					if (this._ModelAutomobila.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModelAutomobila_IDChanging(value);
					this.SendPropertyChanging();
					this._ModelAutomobila_ID = value;
					this.SendPropertyChanged("ModelAutomobila_ID");
					this.OnModelAutomobila_IDChanged();
				}
			}
		}
		
		[Column(Storage="_ProizvodnjaOd", DbType="Int")]
		public System.Nullable<int> ProizvodnjaOd
		{
			get
			{
				return this._ProizvodnjaOd;
			}
			set
			{
				if ((this._ProizvodnjaOd != value))
				{
					this.OnProizvodnjaOdChanging(value);
					this.SendPropertyChanging();
					this._ProizvodnjaOd = value;
					this.SendPropertyChanged("ProizvodnjaOd");
					this.OnProizvodnjaOdChanged();
				}
			}
		}
		
		[Column(Storage="_ProizvodnjaDo", DbType="Int")]
		public System.Nullable<int> ProizvodnjaDo
		{
			get
			{
				return this._ProizvodnjaDo;
			}
			set
			{
				if ((this._ProizvodnjaDo != value))
				{
					this.OnProizvodnjaDoChanging(value);
					this.SendPropertyChanging();
					this._ProizvodnjaDo = value;
					this.SendPropertyChanged("ProizvodnjaDo");
					this.OnProizvodnjaDoChanged();
				}
			}
		}
		
		[Column(Storage="_SnagaKWOd", DbType="SmallInt")]
		public System.Nullable<short> SnagaKWOd
		{
			get
			{
				return this._SnagaKWOd;
			}
			set
			{
				if ((this._SnagaKWOd != value))
				{
					this.OnSnagaKWOdChanging(value);
					this.SendPropertyChanging();
					this._SnagaKWOd = value;
					this.SendPropertyChanged("SnagaKWOd");
					this.OnSnagaKWOdChanged();
				}
			}
		}
		
		[Column(Storage="_SnagaKWDo", DbType="SmallInt")]
		public System.Nullable<short> SnagaKWDo
		{
			get
			{
				return this._SnagaKWDo;
			}
			set
			{
				if ((this._SnagaKWDo != value))
				{
					this.OnSnagaKWDoChanging(value);
					this.SendPropertyChanging();
					this._SnagaKWDo = value;
					this.SendPropertyChanged("SnagaKWDo");
					this.OnSnagaKWDoChanged();
				}
			}
		}
		
		[Column(Storage="_SnagaKSOd", DbType="SmallInt")]
		public System.Nullable<short> SnagaKSOd
		{
			get
			{
				return this._SnagaKSOd;
			}
			set
			{
				if ((this._SnagaKSOd != value))
				{
					this.OnSnagaKSOdChanging(value);
					this.SendPropertyChanging();
					this._SnagaKSOd = value;
					this.SendPropertyChanged("SnagaKSOd");
					this.OnSnagaKSOdChanged();
				}
			}
		}
		
		[Column(Storage="_SnagaKSDo", DbType="SmallInt")]
		public System.Nullable<short> SnagaKSDo
		{
			get
			{
				return this._SnagaKSDo;
			}
			set
			{
				if ((this._SnagaKSDo != value))
				{
					this.OnSnagaKSDoChanging(value);
					this.SendPropertyChanging();
					this._SnagaKSDo = value;
					this.SendPropertyChanged("SnagaKSDo");
					this.OnSnagaKSDoChanged();
				}
			}
		}
		
		[Column(Storage="_ZapreminaCcm", DbType="Int")]
		public System.Nullable<int> ZapreminaCcm
		{
			get
			{
				return this._ZapreminaCcm;
			}
			set
			{
				if ((this._ZapreminaCcm != value))
				{
					this.OnZapreminaCcmChanging(value);
					this.SendPropertyChanging();
					this._ZapreminaCcm = value;
					this.SendPropertyChanged("ZapreminaCcm");
					this.OnZapreminaCcmChanged();
				}
			}
		}
		
		[Column(Storage="_Cilindara", DbType="TinyInt")]
		public System.Nullable<byte> Cilindara
		{
			get
			{
				return this._Cilindara;
			}
			set
			{
				if ((this._Cilindara != value))
				{
					this.OnCilindaraChanging(value);
					this.SendPropertyChanging();
					this._Cilindara = value;
					this.SendPropertyChanged("Cilindara");
					this.OnCilindaraChanged();
				}
			}
		}
		
		[Column(Storage="_VentilaPoCilindru", DbType="TinyInt")]
		public System.Nullable<byte> VentilaPoCilindru
		{
			get
			{
				return this._VentilaPoCilindru;
			}
			set
			{
				if ((this._VentilaPoCilindru != value))
				{
					this.OnVentilaPoCilindruChanging(value);
					this.SendPropertyChanging();
					this._VentilaPoCilindru = value;
					this.SendPropertyChanged("VentilaPoCilindru");
					this.OnVentilaPoCilindruChanged();
				}
			}
		}
		
		[Column(Storage="_VrstaMotora_Opis", DbType="Int")]
		public System.Nullable<int> VrstaMotora_Opis
		{
			get
			{
				return this._VrstaMotora_Opis;
			}
			set
			{
				if ((this._VrstaMotora_Opis != value))
				{
					if (this._OpisTabelaVrstaMotora_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVrstaMotora_OpisChanging(value);
					this.SendPropertyChanging();
					this._VrstaMotora_Opis = value;
					this.SendPropertyChanged("VrstaMotora_Opis");
					this.OnVrstaMotora_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_VrstaGoriva_Opis", DbType="Int")]
		public System.Nullable<int> VrstaGoriva_Opis
		{
			get
			{
				return this._VrstaGoriva_Opis;
			}
			set
			{
				if ((this._VrstaGoriva_Opis != value))
				{
					if (this._OpisTabelaVrstaGoriva_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVrstaGoriva_OpisChanging(value);
					this.SendPropertyChanging();
					this._VrstaGoriva_Opis = value;
					this.SendPropertyChanged("VrstaGoriva_Opis");
					this.OnVrstaGoriva_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_PripremaGoriva_Opis", DbType="Int")]
		public System.Nullable<int> PripremaGoriva_Opis
		{
			get
			{
				return this._PripremaGoriva_Opis;
			}
			set
			{
				if ((this._PripremaGoriva_Opis != value))
				{
					if (this._OpisTabelaPripremaGoriva_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPripremaGoriva_OpisChanging(value);
					this.SendPropertyChanging();
					this._PripremaGoriva_Opis = value;
					this.SendPropertyChanged("PripremaGoriva_Opis");
					this.OnPripremaGoriva_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_VrstaKatalizatora_Opis", DbType="Int")]
		public System.Nullable<int> VrstaKatalizatora_Opis
		{
			get
			{
				return this._VrstaKatalizatora_Opis;
			}
			set
			{
				if ((this._VrstaKatalizatora_Opis != value))
				{
					if (this._OpisTabelaVrstaKatalizatora_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVrstaKatalizatora_OpisChanging(value);
					this.SendPropertyChanging();
					this._VrstaKatalizatora_Opis = value;
					this.SendPropertyChanged("VrstaKatalizatora_Opis");
					this.OnVrstaKatalizatora_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_NaponAkumulatora_Opis", DbType="Int")]
		public System.Nullable<int> NaponAkumulatora_Opis
		{
			get
			{
				return this._NaponAkumulatora_Opis;
			}
			set
			{
				if ((this._NaponAkumulatora_Opis != value))
				{
					if (this._OpisTabelaNaponAkumulatora_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNaponAkumulatora_OpisChanging(value);
					this.SendPropertyChanging();
					this._NaponAkumulatora_Opis = value;
					this.SendPropertyChanged("NaponAkumulatora_Opis");
					this.OnNaponAkumulatora_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_VrstaKaroserije_Opis", DbType="Int")]
		public System.Nullable<int> VrstaKaroserije_Opis
		{
			get
			{
				return this._VrstaKaroserije_Opis;
			}
			set
			{
				if ((this._VrstaKaroserije_Opis != value))
				{
					if (this._OpisTabelaVrstaKaroserije_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVrstaKaroserije_OpisChanging(value);
					this.SendPropertyChanging();
					this._VrstaKaroserije_Opis = value;
					this.SendPropertyChanged("VrstaKaroserije_Opis");
					this.OnVrstaKaroserije_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_Vrata", DbType="TinyInt")]
		public System.Nullable<byte> Vrata
		{
			get
			{
				return this._Vrata;
			}
			set
			{
				if ((this._Vrata != value))
				{
					this.OnVrataChanging(value);
					this.SendPropertyChanging();
					this._Vrata = value;
					this.SendPropertyChanged("Vrata");
					this.OnVrataChanged();
				}
			}
		}
		
		[Column(Storage="_RezervoarLitara", DbType="TinyInt")]
		public System.Nullable<byte> RezervoarLitara
		{
			get
			{
				return this._RezervoarLitara;
			}
			set
			{
				if ((this._RezervoarLitara != value))
				{
					this.OnRezervoarLitaraChanging(value);
					this.SendPropertyChanging();
					this._RezervoarLitara = value;
					this.SendPropertyChanged("RezervoarLitara");
					this.OnRezervoarLitaraChanged();
				}
			}
		}
		
		[Column(Storage="_ABS_Opis", DbType="Int")]
		public System.Nullable<int> ABS_Opis
		{
			get
			{
				return this._ABS_Opis;
			}
			set
			{
				if ((this._ABS_Opis != value))
				{
					if (this._OpisTabelaABS_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnABS_OpisChanging(value);
					this.SendPropertyChanging();
					this._ABS_Opis = value;
					this.SendPropertyChanged("ABS_Opis");
					this.OnABS_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_ASR_Opis", DbType="Int")]
		public System.Nullable<int> ASR_Opis
		{
			get
			{
				return this._ASR_Opis;
			}
			set
			{
				if ((this._ASR_Opis != value))
				{
					if (this._OpisTabelaASR_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnASR_OpisChanging(value);
					this.SendPropertyChanging();
					this._ASR_Opis = value;
					this.SendPropertyChanged("ASR_Opis");
					this.OnASR_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_KocioniSistem_Opis", DbType="Int")]
		public System.Nullable<int> KocioniSistem_Opis
		{
			get
			{
				return this._KocioniSistem_Opis;
			}
			set
			{
				if ((this._KocioniSistem_Opis != value))
				{
					if (this._OpisTabelaKocioniSistem_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKocioniSistem_OpisChanging(value);
					this.SendPropertyChanging();
					this._KocioniSistem_Opis = value;
					this.SendPropertyChanged("KocioniSistem_Opis");
					this.OnKocioniSistem_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_VrstaKocnica_Opis", DbType="Int")]
		public System.Nullable<int> VrstaKocnica_Opis
		{
			get
			{
				return this._VrstaKocnica_Opis;
			}
			set
			{
				if ((this._VrstaKocnica_Opis != value))
				{
					if (this._OpisTabelaVrstaKocnica_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVrstaKocnica_OpisChanging(value);
					this.SendPropertyChanging();
					this._VrstaKocnica_Opis = value;
					this.SendPropertyChanged("VrstaKocnica_Opis");
					this.OnVrstaKocnica_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_VrstaPogona_Opis", DbType="Int")]
		public System.Nullable<int> VrstaPogona_Opis
		{
			get
			{
				return this._VrstaPogona_Opis;
			}
			set
			{
				if ((this._VrstaPogona_Opis != value))
				{
					if (this._OpisTabelaVrstaPogona_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVrstaPogona_OpisChanging(value);
					this.SendPropertyChanging();
					this._VrstaPogona_Opis = value;
					this.SendPropertyChanged("VrstaPogona_Opis");
					this.OnVrstaPogona_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_Menjac_Opis", DbType="Int")]
		public System.Nullable<int> Menjac_Opis
		{
			get
			{
				return this._Menjac_Opis;
			}
			set
			{
				if ((this._Menjac_Opis != value))
				{
					if (this._OpisTabelaMenjac_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenjac_OpisChanging(value);
					this.SendPropertyChanging();
					this._Menjac_Opis = value;
					this.SendPropertyChanged("Menjac_Opis");
					this.OnMenjac_OpisChanged();
				}
			}
		}
		
		[Association(Name="TipAutomobila_ServisnaKnjizica", Storage="_ServisnaKnjizicas", ThisKey="TipAutomobila_ID", OtherKey="TipAutomobila_ID")]
		public EntitySet<ServisnaKnjizica> ServisnaKnjizicas
		{
			get
			{
				return this._ServisnaKnjizicas;
			}
			set
			{
				this._ServisnaKnjizicas.Assign(value);
			}
		}
		
		[Association(Name="TipAutomobila_VezaTipAutomobilaMotor", Storage="_VezaTipAutomobilaMotors", ThisKey="TipAutomobila_ID", OtherKey="TipAutomobila_ID")]
		public EntitySet<VezaTipAutomobilaMotor> VezaTipAutomobilaMotors
		{
			get
			{
				return this._VezaTipAutomobilaMotors;
			}
			set
			{
				this._VezaTipAutomobilaMotors.Assign(value);
			}
		}
		
		[Association(Name="TipAutomobila_Ugradnja", Storage="_Ugradnjas", ThisKey="TipAutomobila_ID", OtherKey="TipAutomobila_ID")]
		public EntitySet<Ugradnja> Ugradnjas
		{
			get
			{
				return this._Ugradnjas;
			}
			set
			{
				this._Ugradnjas.Assign(value);
			}
		}
		
		[Association(Name="ModelAutomobila_TipAutomobila", Storage="_ModelAutomobila", ThisKey="ModelAutomobila_ID", OtherKey="ModelAutomobila_ID", IsForeignKey=true)]
		public ModelAutomobila ModelAutomobila
		{
			get
			{
				return this._ModelAutomobila.Entity;
			}
			set
			{
				ModelAutomobila previousValue = this._ModelAutomobila.Entity;
				if (((previousValue != value) 
							|| (this._ModelAutomobila.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ModelAutomobila.Entity = null;
						previousValue.TipAutomobilas.Remove(this);
					}
					this._ModelAutomobila.Entity = value;
					if ((value != null))
					{
						value.TipAutomobilas.Add(this);
						this._ModelAutomobila_ID = value.ModelAutomobila_ID;
					}
					else
					{
						this._ModelAutomobila_ID = default(int);
					}
					this.SendPropertyChanged("ModelAutomobila");
				}
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila", Storage="_OpisTabela", ThisKey="Opis_ID", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabela
		{
			get
			{
				return this._OpisTabela.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabela.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabela.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabela.Entity = null;
						previousValue.TipAutomobilas.Remove(this);
					}
					this._OpisTabela.Entity = value;
					if ((value != null))
					{
						value.TipAutomobilas.Add(this);
						this._Opis_ID = value.Opis_ID;
					}
					else
					{
						this._Opis_ID = default(int);
					}
					this.SendPropertyChanged("OpisTabela");
				}
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila1", Storage="_OpisTabelaMenjac_Opis", ThisKey="Menjac_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaMenjac_Opis
		{
			get
			{
				return this._OpisTabelaMenjac_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaMenjac_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaMenjac_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaMenjac_Opis.Entity = null;
						previousValue.TipAutomobilas1.Remove(this);
					}
					this._OpisTabelaMenjac_Opis.Entity = value;
					if ((value != null))
					{
						value.TipAutomobilas1.Add(this);
						this._Menjac_Opis = value.Opis_ID;
					}
					else
					{
						this._Menjac_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaMenjac_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila2", Storage="_OpisTabelaPripremaGoriva_Opis", ThisKey="PripremaGoriva_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaPripremaGoriva_Opis
		{
			get
			{
				return this._OpisTabelaPripremaGoriva_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaPripremaGoriva_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaPripremaGoriva_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaPripremaGoriva_Opis.Entity = null;
						previousValue.TipAutomobilas2.Remove(this);
					}
					this._OpisTabelaPripremaGoriva_Opis.Entity = value;
					if ((value != null))
					{
						value.TipAutomobilas2.Add(this);
						this._PripremaGoriva_Opis = value.Opis_ID;
					}
					else
					{
						this._PripremaGoriva_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaPripremaGoriva_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila3", Storage="_OpisTabelaABS_Opis", ThisKey="ABS_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaABS_Opis
		{
			get
			{
				return this._OpisTabelaABS_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaABS_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaABS_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaABS_Opis.Entity = null;
						previousValue.TipAutomobilas3.Remove(this);
					}
					this._OpisTabelaABS_Opis.Entity = value;
					if ((value != null))
					{
						value.TipAutomobilas3.Add(this);
						this._ABS_Opis = value.Opis_ID;
					}
					else
					{
						this._ABS_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaABS_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila4", Storage="_OpisTabelaKocioniSistem_Opis", ThisKey="KocioniSistem_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaKocioniSistem_Opis
		{
			get
			{
				return this._OpisTabelaKocioniSistem_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaKocioniSistem_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaKocioniSistem_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaKocioniSistem_Opis.Entity = null;
						previousValue.TipAutomobilas4.Remove(this);
					}
					this._OpisTabelaKocioniSistem_Opis.Entity = value;
					if ((value != null))
					{
						value.TipAutomobilas4.Add(this);
						this._KocioniSistem_Opis = value.Opis_ID;
					}
					else
					{
						this._KocioniSistem_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaKocioniSistem_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila5", Storage="_OpisTabelaNaponAkumulatora_Opis", ThisKey="NaponAkumulatora_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaNaponAkumulatora_Opis
		{
			get
			{
				return this._OpisTabelaNaponAkumulatora_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaNaponAkumulatora_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaNaponAkumulatora_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaNaponAkumulatora_Opis.Entity = null;
						previousValue.TipAutomobilas5.Remove(this);
					}
					this._OpisTabelaNaponAkumulatora_Opis.Entity = value;
					if ((value != null))
					{
						value.TipAutomobilas5.Add(this);
						this._NaponAkumulatora_Opis = value.Opis_ID;
					}
					else
					{
						this._NaponAkumulatora_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaNaponAkumulatora_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila6", Storage="_OpisTabelaASR_Opis", ThisKey="ASR_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaASR_Opis
		{
			get
			{
				return this._OpisTabelaASR_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaASR_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaASR_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaASR_Opis.Entity = null;
						previousValue.TipAutomobilas6.Remove(this);
					}
					this._OpisTabelaASR_Opis.Entity = value;
					if ((value != null))
					{
						value.TipAutomobilas6.Add(this);
						this._ASR_Opis = value.Opis_ID;
					}
					else
					{
						this._ASR_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaASR_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila7", Storage="_OpisTabelaVrstaMotora_Opis", ThisKey="VrstaMotora_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaVrstaMotora_Opis
		{
			get
			{
				return this._OpisTabelaVrstaMotora_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaVrstaMotora_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaVrstaMotora_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaVrstaMotora_Opis.Entity = null;
						previousValue.TipAutomobilas7.Remove(this);
					}
					this._OpisTabelaVrstaMotora_Opis.Entity = value;
					if ((value != null))
					{
						value.TipAutomobilas7.Add(this);
						this._VrstaMotora_Opis = value.Opis_ID;
					}
					else
					{
						this._VrstaMotora_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaVrstaMotora_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila8", Storage="_OpisTabelaVrstaKocnica_Opis", ThisKey="VrstaKocnica_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaVrstaKocnica_Opis
		{
			get
			{
				return this._OpisTabelaVrstaKocnica_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaVrstaKocnica_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaVrstaKocnica_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaVrstaKocnica_Opis.Entity = null;
						previousValue.TipAutomobilas8.Remove(this);
					}
					this._OpisTabelaVrstaKocnica_Opis.Entity = value;
					if ((value != null))
					{
						value.TipAutomobilas8.Add(this);
						this._VrstaKocnica_Opis = value.Opis_ID;
					}
					else
					{
						this._VrstaKocnica_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaVrstaKocnica_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila9", Storage="_OpisTabelaVrstaGoriva_Opis", ThisKey="VrstaGoriva_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaVrstaGoriva_Opis
		{
			get
			{
				return this._OpisTabelaVrstaGoriva_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaVrstaGoriva_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaVrstaGoriva_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaVrstaGoriva_Opis.Entity = null;
						previousValue.TipAutomobilas9.Remove(this);
					}
					this._OpisTabelaVrstaGoriva_Opis.Entity = value;
					if ((value != null))
					{
						value.TipAutomobilas9.Add(this);
						this._VrstaGoriva_Opis = value.Opis_ID;
					}
					else
					{
						this._VrstaGoriva_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaVrstaGoriva_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila10", Storage="_OpisTabelaVrstaKatalizatora_Opis", ThisKey="VrstaKatalizatora_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaVrstaKatalizatora_Opis
		{
			get
			{
				return this._OpisTabelaVrstaKatalizatora_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaVrstaKatalizatora_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaVrstaKatalizatora_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaVrstaKatalizatora_Opis.Entity = null;
						previousValue.TipAutomobilas10.Remove(this);
					}
					this._OpisTabelaVrstaKatalizatora_Opis.Entity = value;
					if ((value != null))
					{
						value.TipAutomobilas10.Add(this);
						this._VrstaKatalizatora_Opis = value.Opis_ID;
					}
					else
					{
						this._VrstaKatalizatora_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaVrstaKatalizatora_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila11", Storage="_OpisTabelaVrstaKaroserije_Opis", ThisKey="VrstaKaroserije_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaVrstaKaroserije_Opis
		{
			get
			{
				return this._OpisTabelaVrstaKaroserije_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaVrstaKaroserije_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaVrstaKaroserije_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaVrstaKaroserije_Opis.Entity = null;
						previousValue.TipAutomobilas11.Remove(this);
					}
					this._OpisTabelaVrstaKaroserije_Opis.Entity = value;
					if ((value != null))
					{
						value.TipAutomobilas11.Add(this);
						this._VrstaKaroserije_Opis = value.Opis_ID;
					}
					else
					{
						this._VrstaKaroserije_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaVrstaKaroserije_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila12", Storage="_OpisTabelaVrstaPogona_Opis", ThisKey="VrstaPogona_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaVrstaPogona_Opis
		{
			get
			{
				return this._OpisTabelaVrstaPogona_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaVrstaPogona_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaVrstaPogona_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaVrstaPogona_Opis.Entity = null;
						previousValue.TipAutomobilas12.Remove(this);
					}
					this._OpisTabelaVrstaPogona_Opis.Entity = value;
					if ((value != null))
					{
						value.TipAutomobilas12.Add(this);
						this._VrstaPogona_Opis = value.Opis_ID;
					}
					else
					{
						this._VrstaPogona_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaVrstaPogona_Opis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServisnaKnjizicas(ServisnaKnjizica entity)
		{
			this.SendPropertyChanging();
			entity.TipAutomobila = this;
		}
		
		private void detach_ServisnaKnjizicas(ServisnaKnjizica entity)
		{
			this.SendPropertyChanging();
			entity.TipAutomobila = null;
		}
		
		private void attach_VezaTipAutomobilaMotors(VezaTipAutomobilaMotor entity)
		{
			this.SendPropertyChanging();
			entity.TipAutomobila = this;
		}
		
		private void detach_VezaTipAutomobilaMotors(VezaTipAutomobilaMotor entity)
		{
			this.SendPropertyChanging();
			entity.TipAutomobila = null;
		}
		
		private void attach_Ugradnjas(Ugradnja entity)
		{
			this.SendPropertyChanging();
			entity.TipAutomobila = this;
		}
		
		private void detach_Ugradnjas(Ugradnja entity)
		{
			this.SendPropertyChanging();
			entity.TipAutomobila = null;
		}
	}
	
	[Table(Name="dbo.ModelAutomobila")]
	public partial class ModelAutomobila : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ModelAutomobila_ID;
		
		private int _Opis_ID;
		
		private short _Proizvodjac_ID;
		
		private System.Nullable<int> _ProizvodnjaOd;
		
		private System.Nullable<int> _ProizvodnjaDo;
		
		private EntitySet<TipAutomobila> _TipAutomobilas;
		
		private EntityRef<Proizvodjac> _Proizvodjac;
		
		private EntityRef<OpisTabela> _OpisTabela;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelAutomobila_IDChanging(int value);
    partial void OnModelAutomobila_IDChanged();
    partial void OnOpis_IDChanging(int value);
    partial void OnOpis_IDChanged();
    partial void OnProizvodjac_IDChanging(short value);
    partial void OnProizvodjac_IDChanged();
    partial void OnProizvodnjaOdChanging(System.Nullable<int> value);
    partial void OnProizvodnjaOdChanged();
    partial void OnProizvodnjaDoChanging(System.Nullable<int> value);
    partial void OnProizvodnjaDoChanged();
    #endregion
		
		public ModelAutomobila()
		{
			this._TipAutomobilas = new EntitySet<TipAutomobila>(new Action<TipAutomobila>(this.attach_TipAutomobilas), new Action<TipAutomobila>(this.detach_TipAutomobilas));
			this._Proizvodjac = default(EntityRef<Proizvodjac>);
			this._OpisTabela = default(EntityRef<OpisTabela>);
			OnCreated();
		}
		
		[Column(Storage="_ModelAutomobila_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ModelAutomobila_ID
		{
			get
			{
				return this._ModelAutomobila_ID;
			}
			set
			{
				if ((this._ModelAutomobila_ID != value))
				{
					this.OnModelAutomobila_IDChanging(value);
					this.SendPropertyChanging();
					this._ModelAutomobila_ID = value;
					this.SendPropertyChanged("ModelAutomobila_ID");
					this.OnModelAutomobila_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Opis_ID", DbType="Int NOT NULL")]
		public int Opis_ID
		{
			get
			{
				return this._Opis_ID;
			}
			set
			{
				if ((this._Opis_ID != value))
				{
					if (this._OpisTabela.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOpis_IDChanging(value);
					this.SendPropertyChanging();
					this._Opis_ID = value;
					this.SendPropertyChanged("Opis_ID");
					this.OnOpis_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Proizvodjac_ID", DbType="SmallInt NOT NULL")]
		public short Proizvodjac_ID
		{
			get
			{
				return this._Proizvodjac_ID;
			}
			set
			{
				if ((this._Proizvodjac_ID != value))
				{
					if (this._Proizvodjac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProizvodjac_IDChanging(value);
					this.SendPropertyChanging();
					this._Proizvodjac_ID = value;
					this.SendPropertyChanged("Proizvodjac_ID");
					this.OnProizvodjac_IDChanged();
				}
			}
		}
		
		[Column(Storage="_ProizvodnjaOd", DbType="Int")]
		public System.Nullable<int> ProizvodnjaOd
		{
			get
			{
				return this._ProizvodnjaOd;
			}
			set
			{
				if ((this._ProizvodnjaOd != value))
				{
					this.OnProizvodnjaOdChanging(value);
					this.SendPropertyChanging();
					this._ProizvodnjaOd = value;
					this.SendPropertyChanged("ProizvodnjaOd");
					this.OnProizvodnjaOdChanged();
				}
			}
		}
		
		[Column(Storage="_ProizvodnjaDo", DbType="Int")]
		public System.Nullable<int> ProizvodnjaDo
		{
			get
			{
				return this._ProizvodnjaDo;
			}
			set
			{
				if ((this._ProizvodnjaDo != value))
				{
					this.OnProizvodnjaDoChanging(value);
					this.SendPropertyChanging();
					this._ProizvodnjaDo = value;
					this.SendPropertyChanged("ProizvodnjaDo");
					this.OnProizvodnjaDoChanged();
				}
			}
		}
		
		[Association(Name="ModelAutomobila_TipAutomobila", Storage="_TipAutomobilas", ThisKey="ModelAutomobila_ID", OtherKey="ModelAutomobila_ID")]
		public EntitySet<TipAutomobila> TipAutomobilas
		{
			get
			{
				return this._TipAutomobilas;
			}
			set
			{
				this._TipAutomobilas.Assign(value);
			}
		}
		
		[Association(Name="Proizvodjac_ModelAutomobila", Storage="_Proizvodjac", ThisKey="Proizvodjac_ID", OtherKey="Proizvodjac_ID", IsForeignKey=true)]
		public Proizvodjac Proizvodjac
		{
			get
			{
				return this._Proizvodjac.Entity;
			}
			set
			{
				Proizvodjac previousValue = this._Proizvodjac.Entity;
				if (((previousValue != value) 
							|| (this._Proizvodjac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proizvodjac.Entity = null;
						previousValue.ModelAutomobilas.Remove(this);
					}
					this._Proizvodjac.Entity = value;
					if ((value != null))
					{
						value.ModelAutomobilas.Add(this);
						this._Proizvodjac_ID = value.Proizvodjac_ID;
					}
					else
					{
						this._Proizvodjac_ID = default(short);
					}
					this.SendPropertyChanged("Proizvodjac");
				}
			}
		}
		
		[Association(Name="OpisTabela_ModelAutomobila", Storage="_OpisTabela", ThisKey="Opis_ID", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabela
		{
			get
			{
				return this._OpisTabela.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabela.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabela.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabela.Entity = null;
						previousValue.ModelAutomobilas.Remove(this);
					}
					this._OpisTabela.Entity = value;
					if ((value != null))
					{
						value.ModelAutomobilas.Add(this);
						this._Opis_ID = value.Opis_ID;
					}
					else
					{
						this._Opis_ID = default(int);
					}
					this.SendPropertyChanged("OpisTabela");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TipAutomobilas(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.ModelAutomobila = this;
		}
		
		private void detach_TipAutomobilas(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.ModelAutomobila = null;
		}
	}
	
	[Table(Name="dbo.Proizvodjac")]
	public partial class Proizvodjac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Proizvodjac_ID;
		
		private string _Naziv;
		
		private EntitySet<ModelAutomobila> _ModelAutomobilas;
		
		private EntitySet<Artikal> _Artikals;
		
		private EntitySet<Motor> _Motors;
		
		private EntitySet<VezaArtikalBrojZaPretragu> _VezaArtikalBrojZaPretragus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProizvodjac_IDChanging(short value);
    partial void OnProizvodjac_IDChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    #endregion
		
		public Proizvodjac()
		{
			this._ModelAutomobilas = new EntitySet<ModelAutomobila>(new Action<ModelAutomobila>(this.attach_ModelAutomobilas), new Action<ModelAutomobila>(this.detach_ModelAutomobilas));
			this._Artikals = new EntitySet<Artikal>(new Action<Artikal>(this.attach_Artikals), new Action<Artikal>(this.detach_Artikals));
			this._Motors = new EntitySet<Motor>(new Action<Motor>(this.attach_Motors), new Action<Motor>(this.detach_Motors));
			this._VezaArtikalBrojZaPretragus = new EntitySet<VezaArtikalBrojZaPretragu>(new Action<VezaArtikalBrojZaPretragu>(this.attach_VezaArtikalBrojZaPretragus), new Action<VezaArtikalBrojZaPretragu>(this.detach_VezaArtikalBrojZaPretragus));
			OnCreated();
		}
		
		[Column(Storage="_Proizvodjac_ID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Proizvodjac_ID
		{
			get
			{
				return this._Proizvodjac_ID;
			}
			set
			{
				if ((this._Proizvodjac_ID != value))
				{
					this.OnProizvodjac_IDChanging(value);
					this.SendPropertyChanging();
					this._Proizvodjac_ID = value;
					this.SendPropertyChanged("Proizvodjac_ID");
					this.OnProizvodjac_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Naziv", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[Association(Name="Proizvodjac_ModelAutomobila", Storage="_ModelAutomobilas", ThisKey="Proizvodjac_ID", OtherKey="Proizvodjac_ID")]
		public EntitySet<ModelAutomobila> ModelAutomobilas
		{
			get
			{
				return this._ModelAutomobilas;
			}
			set
			{
				this._ModelAutomobilas.Assign(value);
			}
		}
		
		[Association(Name="Proizvodjac_Artikal", Storage="_Artikals", ThisKey="Proizvodjac_ID", OtherKey="Proizvodjac_ID")]
		public EntitySet<Artikal> Artikals
		{
			get
			{
				return this._Artikals;
			}
			set
			{
				this._Artikals.Assign(value);
			}
		}
		
		[Association(Name="Proizvodjac_Motor", Storage="_Motors", ThisKey="Proizvodjac_ID", OtherKey="Proizvodjac_ID")]
		public EntitySet<Motor> Motors
		{
			get
			{
				return this._Motors;
			}
			set
			{
				this._Motors.Assign(value);
			}
		}
		
		[Association(Name="Proizvodjac_VezaArtikalBrojZaPretragu", Storage="_VezaArtikalBrojZaPretragus", ThisKey="Proizvodjac_ID", OtherKey="Proizvodjac_ID")]
		public EntitySet<VezaArtikalBrojZaPretragu> VezaArtikalBrojZaPretragus
		{
			get
			{
				return this._VezaArtikalBrojZaPretragus;
			}
			set
			{
				this._VezaArtikalBrojZaPretragus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ModelAutomobilas(ModelAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.Proizvodjac = this;
		}
		
		private void detach_ModelAutomobilas(ModelAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.Proizvodjac = null;
		}
		
		private void attach_Artikals(Artikal entity)
		{
			this.SendPropertyChanging();
			entity.Proizvodjac = this;
		}
		
		private void detach_Artikals(Artikal entity)
		{
			this.SendPropertyChanging();
			entity.Proizvodjac = null;
		}
		
		private void attach_Motors(Motor entity)
		{
			this.SendPropertyChanging();
			entity.Proizvodjac = this;
		}
		
		private void detach_Motors(Motor entity)
		{
			this.SendPropertyChanging();
			entity.Proizvodjac = null;
		}
		
		private void attach_VezaArtikalBrojZaPretragus(VezaArtikalBrojZaPretragu entity)
		{
			this.SendPropertyChanging();
			entity.Proizvodjac = this;
		}
		
		private void detach_VezaArtikalBrojZaPretragus(VezaArtikalBrojZaPretragu entity)
		{
			this.SendPropertyChanging();
			entity.Proizvodjac = null;
		}
	}
	
	[Table(Name="dbo.Artikal")]
	public partial class Artikal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Artikal_ID;
		
		private int _Opis_ID;
		
		private string _BrojProizvodjaca;
		
		private short _Proizvodjac_ID;
		
		private string _Sifra;
		
		private int _PoreskaStopa_ID;
		
		private EntitySet<VezaArtikalStablo> _VezaArtikalStablos;
		
		private EntitySet<VezaArtikalKriterijum> _VezaArtikalKriterijums;
		
		private EntitySet<Ugradnja> _Ugradnjas;
		
		private EntitySet<VezaArtikalBrojZaPretragu> _VezaArtikalBrojZaPretragus;
		
		private EntitySet<VezaArtikalDobavljac> _VezaArtikalDobavljacs;
		
		private EntityRef<Proizvodjac> _Proizvodjac;
		
		private EntityRef<PoreskaStopa> _PoreskaStopa;
		
		private EntityRef<OpisTabela> _OpisTabela;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArtikal_IDChanging(int value);
    partial void OnArtikal_IDChanged();
    partial void OnOpis_IDChanging(int value);
    partial void OnOpis_IDChanged();
    partial void OnBrojProizvodjacaChanging(string value);
    partial void OnBrojProizvodjacaChanged();
    partial void OnProizvodjac_IDChanging(short value);
    partial void OnProizvodjac_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnPoreskaStopa_IDChanging(int value);
    partial void OnPoreskaStopa_IDChanged();
    #endregion
		
		public Artikal()
		{
			this._VezaArtikalStablos = new EntitySet<VezaArtikalStablo>(new Action<VezaArtikalStablo>(this.attach_VezaArtikalStablos), new Action<VezaArtikalStablo>(this.detach_VezaArtikalStablos));
			this._VezaArtikalKriterijums = new EntitySet<VezaArtikalKriterijum>(new Action<VezaArtikalKriterijum>(this.attach_VezaArtikalKriterijums), new Action<VezaArtikalKriterijum>(this.detach_VezaArtikalKriterijums));
			this._Ugradnjas = new EntitySet<Ugradnja>(new Action<Ugradnja>(this.attach_Ugradnjas), new Action<Ugradnja>(this.detach_Ugradnjas));
			this._VezaArtikalBrojZaPretragus = new EntitySet<VezaArtikalBrojZaPretragu>(new Action<VezaArtikalBrojZaPretragu>(this.attach_VezaArtikalBrojZaPretragus), new Action<VezaArtikalBrojZaPretragu>(this.detach_VezaArtikalBrojZaPretragus));
			this._VezaArtikalDobavljacs = new EntitySet<VezaArtikalDobavljac>(new Action<VezaArtikalDobavljac>(this.attach_VezaArtikalDobavljacs), new Action<VezaArtikalDobavljac>(this.detach_VezaArtikalDobavljacs));
			this._Proizvodjac = default(EntityRef<Proizvodjac>);
			this._PoreskaStopa = default(EntityRef<PoreskaStopa>);
			this._OpisTabela = default(EntityRef<OpisTabela>);
			OnCreated();
		}
		
		[Column(Storage="_Artikal_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Artikal_ID
		{
			get
			{
				return this._Artikal_ID;
			}
			set
			{
				if ((this._Artikal_ID != value))
				{
					this.OnArtikal_IDChanging(value);
					this.SendPropertyChanging();
					this._Artikal_ID = value;
					this.SendPropertyChanged("Artikal_ID");
					this.OnArtikal_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Opis_ID", DbType="Int NOT NULL")]
		public int Opis_ID
		{
			get
			{
				return this._Opis_ID;
			}
			set
			{
				if ((this._Opis_ID != value))
				{
					if (this._OpisTabela.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOpis_IDChanging(value);
					this.SendPropertyChanging();
					this._Opis_ID = value;
					this.SendPropertyChanged("Opis_ID");
					this.OnOpis_IDChanged();
				}
			}
		}
		
		[Column(Storage="_BrojProizvodjaca", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BrojProizvodjaca
		{
			get
			{
				return this._BrojProizvodjaca;
			}
			set
			{
				if ((this._BrojProizvodjaca != value))
				{
					this.OnBrojProizvodjacaChanging(value);
					this.SendPropertyChanging();
					this._BrojProizvodjaca = value;
					this.SendPropertyChanged("BrojProizvodjaca");
					this.OnBrojProizvodjacaChanged();
				}
			}
		}
		
		[Column(Storage="_Proizvodjac_ID", DbType="SmallInt NOT NULL")]
		public short Proizvodjac_ID
		{
			get
			{
				return this._Proizvodjac_ID;
			}
			set
			{
				if ((this._Proizvodjac_ID != value))
				{
					if (this._Proizvodjac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProizvodjac_IDChanging(value);
					this.SendPropertyChanging();
					this._Proizvodjac_ID = value;
					this.SendPropertyChanged("Proizvodjac_ID");
					this.OnProizvodjac_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_PoreskaStopa_ID", DbType="Int NOT NULL")]
		public int PoreskaStopa_ID
		{
			get
			{
				return this._PoreskaStopa_ID;
			}
			set
			{
				if ((this._PoreskaStopa_ID != value))
				{
					if (this._PoreskaStopa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPoreskaStopa_IDChanging(value);
					this.SendPropertyChanging();
					this._PoreskaStopa_ID = value;
					this.SendPropertyChanged("PoreskaStopa_ID");
					this.OnPoreskaStopa_IDChanged();
				}
			}
		}
		
		[Association(Name="Artikal_VezaArtikalStablo", Storage="_VezaArtikalStablos", ThisKey="Artikal_ID", OtherKey="Artikal_ID")]
		public EntitySet<VezaArtikalStablo> VezaArtikalStablos
		{
			get
			{
				return this._VezaArtikalStablos;
			}
			set
			{
				this._VezaArtikalStablos.Assign(value);
			}
		}
		
		[Association(Name="Artikal_VezaArtikalKriterijum", Storage="_VezaArtikalKriterijums", ThisKey="Artikal_ID", OtherKey="Artikal_ID")]
		public EntitySet<VezaArtikalKriterijum> VezaArtikalKriterijums
		{
			get
			{
				return this._VezaArtikalKriterijums;
			}
			set
			{
				this._VezaArtikalKriterijums.Assign(value);
			}
		}
		
		[Association(Name="Artikal_Ugradnja", Storage="_Ugradnjas", ThisKey="Artikal_ID", OtherKey="Artikal_ID")]
		public EntitySet<Ugradnja> Ugradnjas
		{
			get
			{
				return this._Ugradnjas;
			}
			set
			{
				this._Ugradnjas.Assign(value);
			}
		}
		
		[Association(Name="Artikal_VezaArtikalBrojZaPretragu", Storage="_VezaArtikalBrojZaPretragus", ThisKey="Artikal_ID", OtherKey="Artikal_ID")]
		public EntitySet<VezaArtikalBrojZaPretragu> VezaArtikalBrojZaPretragus
		{
			get
			{
				return this._VezaArtikalBrojZaPretragus;
			}
			set
			{
				this._VezaArtikalBrojZaPretragus.Assign(value);
			}
		}
		
		[Association(Name="Artikal_VezaArtikalDobavljac", Storage="_VezaArtikalDobavljacs", ThisKey="Artikal_ID", OtherKey="Artikal_ID")]
		public EntitySet<VezaArtikalDobavljac> VezaArtikalDobavljacs
		{
			get
			{
				return this._VezaArtikalDobavljacs;
			}
			set
			{
				this._VezaArtikalDobavljacs.Assign(value);
			}
		}
		
		[Association(Name="Proizvodjac_Artikal", Storage="_Proizvodjac", ThisKey="Proizvodjac_ID", OtherKey="Proizvodjac_ID", IsForeignKey=true)]
		public Proizvodjac Proizvodjac
		{
			get
			{
				return this._Proizvodjac.Entity;
			}
			set
			{
				Proizvodjac previousValue = this._Proizvodjac.Entity;
				if (((previousValue != value) 
							|| (this._Proizvodjac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proizvodjac.Entity = null;
						previousValue.Artikals.Remove(this);
					}
					this._Proizvodjac.Entity = value;
					if ((value != null))
					{
						value.Artikals.Add(this);
						this._Proizvodjac_ID = value.Proizvodjac_ID;
					}
					else
					{
						this._Proizvodjac_ID = default(short);
					}
					this.SendPropertyChanged("Proizvodjac");
				}
			}
		}
		
		[Association(Name="PoreskaStopa_Artikal", Storage="_PoreskaStopa", ThisKey="PoreskaStopa_ID", OtherKey="PoreskaStopa_ID", IsForeignKey=true)]
		public PoreskaStopa PoreskaStopa
		{
			get
			{
				return this._PoreskaStopa.Entity;
			}
			set
			{
				PoreskaStopa previousValue = this._PoreskaStopa.Entity;
				if (((previousValue != value) 
							|| (this._PoreskaStopa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PoreskaStopa.Entity = null;
						previousValue.Artikals.Remove(this);
					}
					this._PoreskaStopa.Entity = value;
					if ((value != null))
					{
						value.Artikals.Add(this);
						this._PoreskaStopa_ID = value.PoreskaStopa_ID;
					}
					else
					{
						this._PoreskaStopa_ID = default(int);
					}
					this.SendPropertyChanged("PoreskaStopa");
				}
			}
		}
		
		[Association(Name="OpisTabela_Artikal", Storage="_OpisTabela", ThisKey="Opis_ID", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabela
		{
			get
			{
				return this._OpisTabela.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabela.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabela.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabela.Entity = null;
						previousValue.Artikals.Remove(this);
					}
					this._OpisTabela.Entity = value;
					if ((value != null))
					{
						value.Artikals.Add(this);
						this._Opis_ID = value.Opis_ID;
					}
					else
					{
						this._Opis_ID = default(int);
					}
					this.SendPropertyChanged("OpisTabela");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VezaArtikalStablos(VezaArtikalStablo entity)
		{
			this.SendPropertyChanging();
			entity.Artikal = this;
		}
		
		private void detach_VezaArtikalStablos(VezaArtikalStablo entity)
		{
			this.SendPropertyChanging();
			entity.Artikal = null;
		}
		
		private void attach_VezaArtikalKriterijums(VezaArtikalKriterijum entity)
		{
			this.SendPropertyChanging();
			entity.Artikal = this;
		}
		
		private void detach_VezaArtikalKriterijums(VezaArtikalKriterijum entity)
		{
			this.SendPropertyChanging();
			entity.Artikal = null;
		}
		
		private void attach_Ugradnjas(Ugradnja entity)
		{
			this.SendPropertyChanging();
			entity.Artikal = this;
		}
		
		private void detach_Ugradnjas(Ugradnja entity)
		{
			this.SendPropertyChanging();
			entity.Artikal = null;
		}
		
		private void attach_VezaArtikalBrojZaPretragus(VezaArtikalBrojZaPretragu entity)
		{
			this.SendPropertyChanging();
			entity.Artikal = this;
		}
		
		private void detach_VezaArtikalBrojZaPretragus(VezaArtikalBrojZaPretragu entity)
		{
			this.SendPropertyChanging();
			entity.Artikal = null;
		}
		
		private void attach_VezaArtikalDobavljacs(VezaArtikalDobavljac entity)
		{
			this.SendPropertyChanging();
			entity.Artikal = this;
		}
		
		private void detach_VezaArtikalDobavljacs(VezaArtikalDobavljac entity)
		{
			this.SendPropertyChanging();
			entity.Artikal = null;
		}
	}
	
	[Table(Name="dbo.Stablo")]
	public partial class Stablo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Stablo_ID;
		
		private int _Opis_ID;
		
		private System.Nullable<int> _Roditelj_ID;
		
		private byte _Nivo;
		
		private short _Sort;
		
		private byte _TipCvora_ID;
		
		private EntitySet<Stablo> _Stablos;
		
		private EntitySet<VezaArtikalStablo> _VezaArtikalStablos;
		
		private EntityRef<Stablo> _Stablo1;
		
		private EntityRef<TipCvora> _TipCvora;
		
		private EntityRef<OpisTabela> _OpisTabela;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStablo_IDChanging(int value);
    partial void OnStablo_IDChanged();
    partial void OnOpis_IDChanging(int value);
    partial void OnOpis_IDChanged();
    partial void OnRoditelj_IDChanging(System.Nullable<int> value);
    partial void OnRoditelj_IDChanged();
    partial void OnNivoChanging(byte value);
    partial void OnNivoChanged();
    partial void OnSortChanging(short value);
    partial void OnSortChanged();
    partial void OnTipCvora_IDChanging(byte value);
    partial void OnTipCvora_IDChanged();
    #endregion
		
		public Stablo()
		{
			this._Stablos = new EntitySet<Stablo>(new Action<Stablo>(this.attach_Stablos), new Action<Stablo>(this.detach_Stablos));
			this._VezaArtikalStablos = new EntitySet<VezaArtikalStablo>(new Action<VezaArtikalStablo>(this.attach_VezaArtikalStablos), new Action<VezaArtikalStablo>(this.detach_VezaArtikalStablos));
			this._Stablo1 = default(EntityRef<Stablo>);
			this._TipCvora = default(EntityRef<TipCvora>);
			this._OpisTabela = default(EntityRef<OpisTabela>);
			OnCreated();
		}
		
		[Column(Storage="_Stablo_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Stablo_ID
		{
			get
			{
				return this._Stablo_ID;
			}
			set
			{
				if ((this._Stablo_ID != value))
				{
					this.OnStablo_IDChanging(value);
					this.SendPropertyChanging();
					this._Stablo_ID = value;
					this.SendPropertyChanged("Stablo_ID");
					this.OnStablo_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Opis_ID", DbType="Int NOT NULL")]
		public int Opis_ID
		{
			get
			{
				return this._Opis_ID;
			}
			set
			{
				if ((this._Opis_ID != value))
				{
					if (this._OpisTabela.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOpis_IDChanging(value);
					this.SendPropertyChanging();
					this._Opis_ID = value;
					this.SendPropertyChanged("Opis_ID");
					this.OnOpis_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Roditelj_ID", DbType="Int")]
		public System.Nullable<int> Roditelj_ID
		{
			get
			{
				return this._Roditelj_ID;
			}
			set
			{
				if ((this._Roditelj_ID != value))
				{
					if (this._Stablo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoditelj_IDChanging(value);
					this.SendPropertyChanging();
					this._Roditelj_ID = value;
					this.SendPropertyChanged("Roditelj_ID");
					this.OnRoditelj_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Nivo", DbType="TinyInt NOT NULL")]
		public byte Nivo
		{
			get
			{
				return this._Nivo;
			}
			set
			{
				if ((this._Nivo != value))
				{
					this.OnNivoChanging(value);
					this.SendPropertyChanging();
					this._Nivo = value;
					this.SendPropertyChanged("Nivo");
					this.OnNivoChanged();
				}
			}
		}
		
		[Column(Storage="_Sort", DbType="SmallInt NOT NULL")]
		public short Sort
		{
			get
			{
				return this._Sort;
			}
			set
			{
				if ((this._Sort != value))
				{
					this.OnSortChanging(value);
					this.SendPropertyChanging();
					this._Sort = value;
					this.SendPropertyChanged("Sort");
					this.OnSortChanged();
				}
			}
		}
		
		[Column(Storage="_TipCvora_ID", DbType="TinyInt NOT NULL")]
		public byte TipCvora_ID
		{
			get
			{
				return this._TipCvora_ID;
			}
			set
			{
				if ((this._TipCvora_ID != value))
				{
					if (this._TipCvora.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipCvora_IDChanging(value);
					this.SendPropertyChanging();
					this._TipCvora_ID = value;
					this.SendPropertyChanged("TipCvora_ID");
					this.OnTipCvora_IDChanged();
				}
			}
		}
		
		[Association(Name="Stablo_Stablo", Storage="_Stablos", ThisKey="Stablo_ID", OtherKey="Roditelj_ID")]
		public EntitySet<Stablo> Stablos
		{
			get
			{
				return this._Stablos;
			}
			set
			{
				this._Stablos.Assign(value);
			}
		}
		
		[Association(Name="Stablo_VezaArtikalStablo", Storage="_VezaArtikalStablos", ThisKey="Stablo_ID", OtherKey="Stablo_ID")]
		public EntitySet<VezaArtikalStablo> VezaArtikalStablos
		{
			get
			{
				return this._VezaArtikalStablos;
			}
			set
			{
				this._VezaArtikalStablos.Assign(value);
			}
		}
		
		[Association(Name="Stablo_Stablo", Storage="_Stablo1", ThisKey="Roditelj_ID", OtherKey="Stablo_ID", IsForeignKey=true)]
		public Stablo Stablo1
		{
			get
			{
				return this._Stablo1.Entity;
			}
			set
			{
				Stablo previousValue = this._Stablo1.Entity;
				if (((previousValue != value) 
							|| (this._Stablo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stablo1.Entity = null;
						previousValue.Stablos.Remove(this);
					}
					this._Stablo1.Entity = value;
					if ((value != null))
					{
						value.Stablos.Add(this);
						this._Roditelj_ID = value.Stablo_ID;
					}
					else
					{
						this._Roditelj_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Stablo1");
				}
			}
		}
		
		[Association(Name="TipCvora_Stablo", Storage="_TipCvora", ThisKey="TipCvora_ID", OtherKey="TipCvora_ID", IsForeignKey=true)]
		public TipCvora TipCvora
		{
			get
			{
				return this._TipCvora.Entity;
			}
			set
			{
				TipCvora previousValue = this._TipCvora.Entity;
				if (((previousValue != value) 
							|| (this._TipCvora.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipCvora.Entity = null;
						previousValue.Stablos.Remove(this);
					}
					this._TipCvora.Entity = value;
					if ((value != null))
					{
						value.Stablos.Add(this);
						this._TipCvora_ID = value.TipCvora_ID;
					}
					else
					{
						this._TipCvora_ID = default(byte);
					}
					this.SendPropertyChanged("TipCvora");
				}
			}
		}
		
		[Association(Name="OpisTabela_Stablo", Storage="_OpisTabela", ThisKey="Opis_ID", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabela
		{
			get
			{
				return this._OpisTabela.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabela.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabela.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabela.Entity = null;
						previousValue.Stablos.Remove(this);
					}
					this._OpisTabela.Entity = value;
					if ((value != null))
					{
						value.Stablos.Add(this);
						this._Opis_ID = value.Opis_ID;
					}
					else
					{
						this._Opis_ID = default(int);
					}
					this.SendPropertyChanged("OpisTabela");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stablos(Stablo entity)
		{
			this.SendPropertyChanging();
			entity.Stablo1 = this;
		}
		
		private void detach_Stablos(Stablo entity)
		{
			this.SendPropertyChanging();
			entity.Stablo1 = null;
		}
		
		private void attach_VezaArtikalStablos(VezaArtikalStablo entity)
		{
			this.SendPropertyChanging();
			entity.Stablo = this;
		}
		
		private void detach_VezaArtikalStablos(VezaArtikalStablo entity)
		{
			this.SendPropertyChanging();
			entity.Stablo = null;
		}
	}
	
	[Table(Name="dbo.VezaArtikalStablo")]
	public partial class VezaArtikalStablo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Artikal_ID;
		
		private int _Stablo_ID;
		
		private EntityRef<Artikal> _Artikal;
		
		private EntityRef<Stablo> _Stablo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArtikal_IDChanging(int value);
    partial void OnArtikal_IDChanged();
    partial void OnStablo_IDChanging(int value);
    partial void OnStablo_IDChanged();
    #endregion
		
		public VezaArtikalStablo()
		{
			this._Artikal = default(EntityRef<Artikal>);
			this._Stablo = default(EntityRef<Stablo>);
			OnCreated();
		}
		
		[Column(Storage="_Artikal_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Artikal_ID
		{
			get
			{
				return this._Artikal_ID;
			}
			set
			{
				if ((this._Artikal_ID != value))
				{
					if (this._Artikal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArtikal_IDChanging(value);
					this.SendPropertyChanging();
					this._Artikal_ID = value;
					this.SendPropertyChanged("Artikal_ID");
					this.OnArtikal_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Stablo_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Stablo_ID
		{
			get
			{
				return this._Stablo_ID;
			}
			set
			{
				if ((this._Stablo_ID != value))
				{
					if (this._Stablo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStablo_IDChanging(value);
					this.SendPropertyChanging();
					this._Stablo_ID = value;
					this.SendPropertyChanged("Stablo_ID");
					this.OnStablo_IDChanged();
				}
			}
		}
		
		[Association(Name="Artikal_VezaArtikalStablo", Storage="_Artikal", ThisKey="Artikal_ID", OtherKey="Artikal_ID", IsForeignKey=true)]
		public Artikal Artikal
		{
			get
			{
				return this._Artikal.Entity;
			}
			set
			{
				Artikal previousValue = this._Artikal.Entity;
				if (((previousValue != value) 
							|| (this._Artikal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artikal.Entity = null;
						previousValue.VezaArtikalStablos.Remove(this);
					}
					this._Artikal.Entity = value;
					if ((value != null))
					{
						value.VezaArtikalStablos.Add(this);
						this._Artikal_ID = value.Artikal_ID;
					}
					else
					{
						this._Artikal_ID = default(int);
					}
					this.SendPropertyChanged("Artikal");
				}
			}
		}
		
		[Association(Name="Stablo_VezaArtikalStablo", Storage="_Stablo", ThisKey="Stablo_ID", OtherKey="Stablo_ID", IsForeignKey=true)]
		public Stablo Stablo
		{
			get
			{
				return this._Stablo.Entity;
			}
			set
			{
				Stablo previousValue = this._Stablo.Entity;
				if (((previousValue != value) 
							|| (this._Stablo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stablo.Entity = null;
						previousValue.VezaArtikalStablos.Remove(this);
					}
					this._Stablo.Entity = value;
					if ((value != null))
					{
						value.VezaArtikalStablos.Add(this);
						this._Stablo_ID = value.Stablo_ID;
					}
					else
					{
						this._Stablo_ID = default(int);
					}
					this.SendPropertyChanged("Stablo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.VezaArtikalKriterijum")]
	public partial class VezaArtikalKriterijum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VezaArtikalKriterijum_ID;
		
		private int _Artikal_ID;
		
		private short _Kriterijum_ID;
		
		private string _Vrednost;
		
		private System.Nullable<int> _Opis_ID;
		
		private EntityRef<Artikal> _Artikal;
		
		private EntityRef<Kriterijum> _Kriterijum;
		
		private EntityRef<OpisTabela> _OpisTabela;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVezaArtikalKriterijum_IDChanging(int value);
    partial void OnVezaArtikalKriterijum_IDChanged();
    partial void OnArtikal_IDChanging(int value);
    partial void OnArtikal_IDChanged();
    partial void OnKriterijum_IDChanging(short value);
    partial void OnKriterijum_IDChanged();
    partial void OnVrednostChanging(string value);
    partial void OnVrednostChanged();
    partial void OnOpis_IDChanging(System.Nullable<int> value);
    partial void OnOpis_IDChanged();
    #endregion
		
		public VezaArtikalKriterijum()
		{
			this._Artikal = default(EntityRef<Artikal>);
			this._Kriterijum = default(EntityRef<Kriterijum>);
			this._OpisTabela = default(EntityRef<OpisTabela>);
			OnCreated();
		}
		
		[Column(Storage="_VezaArtikalKriterijum_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VezaArtikalKriterijum_ID
		{
			get
			{
				return this._VezaArtikalKriterijum_ID;
			}
			set
			{
				if ((this._VezaArtikalKriterijum_ID != value))
				{
					this.OnVezaArtikalKriterijum_IDChanging(value);
					this.SendPropertyChanging();
					this._VezaArtikalKriterijum_ID = value;
					this.SendPropertyChanged("VezaArtikalKriterijum_ID");
					this.OnVezaArtikalKriterijum_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Artikal_ID", DbType="Int NOT NULL")]
		public int Artikal_ID
		{
			get
			{
				return this._Artikal_ID;
			}
			set
			{
				if ((this._Artikal_ID != value))
				{
					if (this._Artikal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArtikal_IDChanging(value);
					this.SendPropertyChanging();
					this._Artikal_ID = value;
					this.SendPropertyChanged("Artikal_ID");
					this.OnArtikal_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Kriterijum_ID", DbType="SmallInt NOT NULL")]
		public short Kriterijum_ID
		{
			get
			{
				return this._Kriterijum_ID;
			}
			set
			{
				if ((this._Kriterijum_ID != value))
				{
					if (this._Kriterijum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKriterijum_IDChanging(value);
					this.SendPropertyChanging();
					this._Kriterijum_ID = value;
					this.SendPropertyChanged("Kriterijum_ID");
					this.OnKriterijum_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Vrednost", DbType="NVarChar(60)")]
		public string Vrednost
		{
			get
			{
				return this._Vrednost;
			}
			set
			{
				if ((this._Vrednost != value))
				{
					this.OnVrednostChanging(value);
					this.SendPropertyChanging();
					this._Vrednost = value;
					this.SendPropertyChanged("Vrednost");
					this.OnVrednostChanged();
				}
			}
		}
		
		[Column(Storage="_Opis_ID", DbType="Int")]
		public System.Nullable<int> Opis_ID
		{
			get
			{
				return this._Opis_ID;
			}
			set
			{
				if ((this._Opis_ID != value))
				{
					if (this._OpisTabela.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOpis_IDChanging(value);
					this.SendPropertyChanging();
					this._Opis_ID = value;
					this.SendPropertyChanged("Opis_ID");
					this.OnOpis_IDChanged();
				}
			}
		}
		
		[Association(Name="Artikal_VezaArtikalKriterijum", Storage="_Artikal", ThisKey="Artikal_ID", OtherKey="Artikal_ID", IsForeignKey=true)]
		public Artikal Artikal
		{
			get
			{
				return this._Artikal.Entity;
			}
			set
			{
				Artikal previousValue = this._Artikal.Entity;
				if (((previousValue != value) 
							|| (this._Artikal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artikal.Entity = null;
						previousValue.VezaArtikalKriterijums.Remove(this);
					}
					this._Artikal.Entity = value;
					if ((value != null))
					{
						value.VezaArtikalKriterijums.Add(this);
						this._Artikal_ID = value.Artikal_ID;
					}
					else
					{
						this._Artikal_ID = default(int);
					}
					this.SendPropertyChanged("Artikal");
				}
			}
		}
		
		[Association(Name="Kriterijum_VezaArtikalKriterijum", Storage="_Kriterijum", ThisKey="Kriterijum_ID", OtherKey="Kriterijum_ID", IsForeignKey=true)]
		public Kriterijum Kriterijum
		{
			get
			{
				return this._Kriterijum.Entity;
			}
			set
			{
				Kriterijum previousValue = this._Kriterijum.Entity;
				if (((previousValue != value) 
							|| (this._Kriterijum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kriterijum.Entity = null;
						previousValue.VezaArtikalKriterijums.Remove(this);
					}
					this._Kriterijum.Entity = value;
					if ((value != null))
					{
						value.VezaArtikalKriterijums.Add(this);
						this._Kriterijum_ID = value.Kriterijum_ID;
					}
					else
					{
						this._Kriterijum_ID = default(short);
					}
					this.SendPropertyChanged("Kriterijum");
				}
			}
		}
		
		[Association(Name="OpisTabela_VezaArtikalKriterijum", Storage="_OpisTabela", ThisKey="Opis_ID", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabela
		{
			get
			{
				return this._OpisTabela.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabela.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabela.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabela.Entity = null;
						previousValue.VezaArtikalKriterijums.Remove(this);
					}
					this._OpisTabela.Entity = value;
					if ((value != null))
					{
						value.VezaArtikalKriterijums.Add(this);
						this._Opis_ID = value.Opis_ID;
					}
					else
					{
						this._Opis_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabela");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Kriterijum")]
	public partial class Kriterijum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Kriterijum_ID;
		
		private int _Opis_ID;
		
		private EntitySet<VezaArtikalKriterijum> _VezaArtikalKriterijums;
		
		private EntitySet<VezaUgradnjaKriterijum> _VezaUgradnjaKriterijums;
		
		private EntityRef<OpisTabela> _OpisTabela;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKriterijum_IDChanging(short value);
    partial void OnKriterijum_IDChanged();
    partial void OnOpis_IDChanging(int value);
    partial void OnOpis_IDChanged();
    #endregion
		
		public Kriterijum()
		{
			this._VezaArtikalKriterijums = new EntitySet<VezaArtikalKriterijum>(new Action<VezaArtikalKriterijum>(this.attach_VezaArtikalKriterijums), new Action<VezaArtikalKriterijum>(this.detach_VezaArtikalKriterijums));
			this._VezaUgradnjaKriterijums = new EntitySet<VezaUgradnjaKriterijum>(new Action<VezaUgradnjaKriterijum>(this.attach_VezaUgradnjaKriterijums), new Action<VezaUgradnjaKriterijum>(this.detach_VezaUgradnjaKriterijums));
			this._OpisTabela = default(EntityRef<OpisTabela>);
			OnCreated();
		}
		
		[Column(Storage="_Kriterijum_ID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Kriterijum_ID
		{
			get
			{
				return this._Kriterijum_ID;
			}
			set
			{
				if ((this._Kriterijum_ID != value))
				{
					this.OnKriterijum_IDChanging(value);
					this.SendPropertyChanging();
					this._Kriterijum_ID = value;
					this.SendPropertyChanged("Kriterijum_ID");
					this.OnKriterijum_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Opis_ID", DbType="Int NOT NULL")]
		public int Opis_ID
		{
			get
			{
				return this._Opis_ID;
			}
			set
			{
				if ((this._Opis_ID != value))
				{
					if (this._OpisTabela.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOpis_IDChanging(value);
					this.SendPropertyChanging();
					this._Opis_ID = value;
					this.SendPropertyChanged("Opis_ID");
					this.OnOpis_IDChanged();
				}
			}
		}
		
		[Association(Name="Kriterijum_VezaArtikalKriterijum", Storage="_VezaArtikalKriterijums", ThisKey="Kriterijum_ID", OtherKey="Kriterijum_ID")]
		public EntitySet<VezaArtikalKriterijum> VezaArtikalKriterijums
		{
			get
			{
				return this._VezaArtikalKriterijums;
			}
			set
			{
				this._VezaArtikalKriterijums.Assign(value);
			}
		}
		
		[Association(Name="Kriterijum_VezaUgradnjaKriterijum", Storage="_VezaUgradnjaKriterijums", ThisKey="Kriterijum_ID", OtherKey="Kriterijum_ID")]
		public EntitySet<VezaUgradnjaKriterijum> VezaUgradnjaKriterijums
		{
			get
			{
				return this._VezaUgradnjaKriterijums;
			}
			set
			{
				this._VezaUgradnjaKriterijums.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_Kriterijum", Storage="_OpisTabela", ThisKey="Opis_ID", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabela
		{
			get
			{
				return this._OpisTabela.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabela.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabela.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabela.Entity = null;
						previousValue.Kriterijums.Remove(this);
					}
					this._OpisTabela.Entity = value;
					if ((value != null))
					{
						value.Kriterijums.Add(this);
						this._Opis_ID = value.Opis_ID;
					}
					else
					{
						this._Opis_ID = default(int);
					}
					this.SendPropertyChanged("OpisTabela");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VezaArtikalKriterijums(VezaArtikalKriterijum entity)
		{
			this.SendPropertyChanging();
			entity.Kriterijum = this;
		}
		
		private void detach_VezaArtikalKriterijums(VezaArtikalKriterijum entity)
		{
			this.SendPropertyChanging();
			entity.Kriterijum = null;
		}
		
		private void attach_VezaUgradnjaKriterijums(VezaUgradnjaKriterijum entity)
		{
			this.SendPropertyChanging();
			entity.Kriterijum = this;
		}
		
		private void detach_VezaUgradnjaKriterijums(VezaUgradnjaKriterijum entity)
		{
			this.SendPropertyChanging();
			entity.Kriterijum = null;
		}
	}
	
	[Table(Name="dbo.Motor")]
	public partial class Motor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Motor_ID;
		
		private string _Oznaka;
		
		private short _Proizvodjac_ID;
		
		private System.Nullable<int> _ProizvodnjaOd;
		
		private System.Nullable<int> _ProizvodnjaDo;
		
		private System.Nullable<short> _SnagaKwKodObrtajaUMinutiOd;
		
		private System.Nullable<short> _SnagaKwKodObrtajaUMinutiDo;
		
		private System.Nullable<short> _ObrtajaUMinutiKodSnageKwOd;
		
		private System.Nullable<short> _ObrtajaUMinutiKodSnageKwDo;
		
		private System.Nullable<short> _ObrtniMomenatKodObrtajaUMinutiOd;
		
		private System.Nullable<short> _ObrtajaUMinutiKodObrtnogMomentaOd;
		
		private System.Nullable<short> _ObrtniMomenatKodObrtajaUMinutiDo;
		
		private System.Nullable<short> _ObrtajaUMinutiKodObrtnogMomentaDo;
		
		private System.Nullable<short> _SnagaKSOd;
		
		private System.Nullable<short> _SnagaKSDo;
		
		private System.Nullable<int> _ZapreminaCcmOd;
		
		private System.Nullable<int> _ZapreminaCcmDo;
		
		private System.Nullable<byte> _Cilindara;
		
		private System.Nullable<decimal> _PrecnikCilindra;
		
		private System.Nullable<int> _OblikGlaveCilindra_Opis;
		
		private System.Nullable<decimal> _Korak;
		
		private System.Nullable<byte> _BrojLezajevaKolenastogVratilaRadilice;
		
		private System.Nullable<decimal> _KompresijaOd;
		
		private System.Nullable<decimal> _KompresijaDo;
		
		private System.Nullable<byte> _Ventila;
		
		private System.Nullable<int> _UpravljanjeVentilima_Opis;
		
		private System.Nullable<int> _VrstaMotora_Opis;
		
		private System.Nullable<int> _VrstaGoriva_Opis;
		
		private System.Nullable<int> _PripremaGoriva_Opis;
		
		private System.Nullable<int> _PunjenjeKompresija_Opis;
		
		private System.Nullable<int> _StandardIzduvnihGasova_Opis;
		
		private System.Nullable<int> _UpravljanjeMotorom_Opis;
		
		private System.Nullable<int> _OblikBlokaMotora_Opis;
		
		private System.Nullable<int> _VrstaHladjenja_Opis;
		
		private EntitySet<VezaTipAutomobilaMotor> _VezaTipAutomobilaMotors;
		
		private EntityRef<Proizvodjac> _Proizvodjac;
		
		private EntityRef<OpisTabela> _OpisTabelaOblikBlokaMotora_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaVrstaHladjenja_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaVrstaGoriva_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaPripremaGoriva_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaVrstaMotora_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaPunjenjeKompresija_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaStandardIzduvnihGasova_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaOblikGlaveCilindra_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaUpravljanjeMotorom_Opis;
		
		private EntityRef<OpisTabela> _OpisTabelaUpravljanjeVentilima_Opis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMotor_IDChanging(short value);
    partial void OnMotor_IDChanged();
    partial void OnOznakaChanging(string value);
    partial void OnOznakaChanged();
    partial void OnProizvodjac_IDChanging(short value);
    partial void OnProizvodjac_IDChanged();
    partial void OnProizvodnjaOdChanging(System.Nullable<int> value);
    partial void OnProizvodnjaOdChanged();
    partial void OnProizvodnjaDoChanging(System.Nullable<int> value);
    partial void OnProizvodnjaDoChanged();
    partial void OnSnagaKwKodObrtajaUMinutiOdChanging(System.Nullable<short> value);
    partial void OnSnagaKwKodObrtajaUMinutiOdChanged();
    partial void OnSnagaKwKodObrtajaUMinutiDoChanging(System.Nullable<short> value);
    partial void OnSnagaKwKodObrtajaUMinutiDoChanged();
    partial void OnObrtajaUMinutiKodSnageKwOdChanging(System.Nullable<short> value);
    partial void OnObrtajaUMinutiKodSnageKwOdChanged();
    partial void OnObrtajaUMinutiKodSnageKwDoChanging(System.Nullable<short> value);
    partial void OnObrtajaUMinutiKodSnageKwDoChanged();
    partial void OnObrtniMomenatKodObrtajaUMinutiOdChanging(System.Nullable<short> value);
    partial void OnObrtniMomenatKodObrtajaUMinutiOdChanged();
    partial void OnObrtajaUMinutiKodObrtnogMomentaOdChanging(System.Nullable<short> value);
    partial void OnObrtajaUMinutiKodObrtnogMomentaOdChanged();
    partial void OnObrtniMomenatKodObrtajaUMinutiDoChanging(System.Nullable<short> value);
    partial void OnObrtniMomenatKodObrtajaUMinutiDoChanged();
    partial void OnObrtajaUMinutiKodObrtnogMomentaDoChanging(System.Nullable<short> value);
    partial void OnObrtajaUMinutiKodObrtnogMomentaDoChanged();
    partial void OnSnagaKSOdChanging(System.Nullable<short> value);
    partial void OnSnagaKSOdChanged();
    partial void OnSnagaKSDoChanging(System.Nullable<short> value);
    partial void OnSnagaKSDoChanged();
    partial void OnZapreminaCcmOdChanging(System.Nullable<int> value);
    partial void OnZapreminaCcmOdChanged();
    partial void OnZapreminaCcmDoChanging(System.Nullable<int> value);
    partial void OnZapreminaCcmDoChanged();
    partial void OnCilindaraChanging(System.Nullable<byte> value);
    partial void OnCilindaraChanged();
    partial void OnPrecnikCilindraChanging(System.Nullable<decimal> value);
    partial void OnPrecnikCilindraChanged();
    partial void OnOblikGlaveCilindra_OpisChanging(System.Nullable<int> value);
    partial void OnOblikGlaveCilindra_OpisChanged();
    partial void OnKorakChanging(System.Nullable<decimal> value);
    partial void OnKorakChanged();
    partial void OnBrojLezajevaKolenastogVratilaRadiliceChanging(System.Nullable<byte> value);
    partial void OnBrojLezajevaKolenastogVratilaRadiliceChanged();
    partial void OnKompresijaOdChanging(System.Nullable<decimal> value);
    partial void OnKompresijaOdChanged();
    partial void OnKompresijaDoChanging(System.Nullable<decimal> value);
    partial void OnKompresijaDoChanged();
    partial void OnVentilaChanging(System.Nullable<byte> value);
    partial void OnVentilaChanged();
    partial void OnUpravljanjeVentilima_OpisChanging(System.Nullable<int> value);
    partial void OnUpravljanjeVentilima_OpisChanged();
    partial void OnVrstaMotora_OpisChanging(System.Nullable<int> value);
    partial void OnVrstaMotora_OpisChanged();
    partial void OnVrstaGoriva_OpisChanging(System.Nullable<int> value);
    partial void OnVrstaGoriva_OpisChanged();
    partial void OnPripremaGoriva_OpisChanging(System.Nullable<int> value);
    partial void OnPripremaGoriva_OpisChanged();
    partial void OnPunjenjeKompresija_OpisChanging(System.Nullable<int> value);
    partial void OnPunjenjeKompresija_OpisChanged();
    partial void OnStandardIzduvnihGasova_OpisChanging(System.Nullable<int> value);
    partial void OnStandardIzduvnihGasova_OpisChanged();
    partial void OnUpravljanjeMotorom_OpisChanging(System.Nullable<int> value);
    partial void OnUpravljanjeMotorom_OpisChanged();
    partial void OnOblikBlokaMotora_OpisChanging(System.Nullable<int> value);
    partial void OnOblikBlokaMotora_OpisChanged();
    partial void OnVrstaHladjenja_OpisChanging(System.Nullable<int> value);
    partial void OnVrstaHladjenja_OpisChanged();
    #endregion
		
		public Motor()
		{
			this._VezaTipAutomobilaMotors = new EntitySet<VezaTipAutomobilaMotor>(new Action<VezaTipAutomobilaMotor>(this.attach_VezaTipAutomobilaMotors), new Action<VezaTipAutomobilaMotor>(this.detach_VezaTipAutomobilaMotors));
			this._Proizvodjac = default(EntityRef<Proizvodjac>);
			this._OpisTabelaOblikBlokaMotora_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaVrstaHladjenja_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaVrstaGoriva_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaPripremaGoriva_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaVrstaMotora_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaPunjenjeKompresija_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaStandardIzduvnihGasova_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaOblikGlaveCilindra_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaUpravljanjeMotorom_Opis = default(EntityRef<OpisTabela>);
			this._OpisTabelaUpravljanjeVentilima_Opis = default(EntityRef<OpisTabela>);
			OnCreated();
		}
		
		[Column(Storage="_Motor_ID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Motor_ID
		{
			get
			{
				return this._Motor_ID;
			}
			set
			{
				if ((this._Motor_ID != value))
				{
					this.OnMotor_IDChanging(value);
					this.SendPropertyChanging();
					this._Motor_ID = value;
					this.SendPropertyChanged("Motor_ID");
					this.OnMotor_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Oznaka", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Oznaka
		{
			get
			{
				return this._Oznaka;
			}
			set
			{
				if ((this._Oznaka != value))
				{
					this.OnOznakaChanging(value);
					this.SendPropertyChanging();
					this._Oznaka = value;
					this.SendPropertyChanged("Oznaka");
					this.OnOznakaChanged();
				}
			}
		}
		
		[Column(Storage="_Proizvodjac_ID", DbType="SmallInt NOT NULL")]
		public short Proizvodjac_ID
		{
			get
			{
				return this._Proizvodjac_ID;
			}
			set
			{
				if ((this._Proizvodjac_ID != value))
				{
					if (this._Proizvodjac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProizvodjac_IDChanging(value);
					this.SendPropertyChanging();
					this._Proizvodjac_ID = value;
					this.SendPropertyChanged("Proizvodjac_ID");
					this.OnProizvodjac_IDChanged();
				}
			}
		}
		
		[Column(Storage="_ProizvodnjaOd", DbType="Int")]
		public System.Nullable<int> ProizvodnjaOd
		{
			get
			{
				return this._ProizvodnjaOd;
			}
			set
			{
				if ((this._ProizvodnjaOd != value))
				{
					this.OnProizvodnjaOdChanging(value);
					this.SendPropertyChanging();
					this._ProizvodnjaOd = value;
					this.SendPropertyChanged("ProizvodnjaOd");
					this.OnProizvodnjaOdChanged();
				}
			}
		}
		
		[Column(Storage="_ProizvodnjaDo", DbType="Int")]
		public System.Nullable<int> ProizvodnjaDo
		{
			get
			{
				return this._ProizvodnjaDo;
			}
			set
			{
				if ((this._ProizvodnjaDo != value))
				{
					this.OnProizvodnjaDoChanging(value);
					this.SendPropertyChanging();
					this._ProizvodnjaDo = value;
					this.SendPropertyChanged("ProizvodnjaDo");
					this.OnProizvodnjaDoChanged();
				}
			}
		}
		
		[Column(Storage="_SnagaKwKodObrtajaUMinutiOd", DbType="SmallInt")]
		public System.Nullable<short> SnagaKwKodObrtajaUMinutiOd
		{
			get
			{
				return this._SnagaKwKodObrtajaUMinutiOd;
			}
			set
			{
				if ((this._SnagaKwKodObrtajaUMinutiOd != value))
				{
					this.OnSnagaKwKodObrtajaUMinutiOdChanging(value);
					this.SendPropertyChanging();
					this._SnagaKwKodObrtajaUMinutiOd = value;
					this.SendPropertyChanged("SnagaKwKodObrtajaUMinutiOd");
					this.OnSnagaKwKodObrtajaUMinutiOdChanged();
				}
			}
		}
		
		[Column(Storage="_SnagaKwKodObrtajaUMinutiDo", DbType="SmallInt")]
		public System.Nullable<short> SnagaKwKodObrtajaUMinutiDo
		{
			get
			{
				return this._SnagaKwKodObrtajaUMinutiDo;
			}
			set
			{
				if ((this._SnagaKwKodObrtajaUMinutiDo != value))
				{
					this.OnSnagaKwKodObrtajaUMinutiDoChanging(value);
					this.SendPropertyChanging();
					this._SnagaKwKodObrtajaUMinutiDo = value;
					this.SendPropertyChanged("SnagaKwKodObrtajaUMinutiDo");
					this.OnSnagaKwKodObrtajaUMinutiDoChanged();
				}
			}
		}
		
		[Column(Storage="_ObrtajaUMinutiKodSnageKwOd", DbType="SmallInt")]
		public System.Nullable<short> ObrtajaUMinutiKodSnageKwOd
		{
			get
			{
				return this._ObrtajaUMinutiKodSnageKwOd;
			}
			set
			{
				if ((this._ObrtajaUMinutiKodSnageKwOd != value))
				{
					this.OnObrtajaUMinutiKodSnageKwOdChanging(value);
					this.SendPropertyChanging();
					this._ObrtajaUMinutiKodSnageKwOd = value;
					this.SendPropertyChanged("ObrtajaUMinutiKodSnageKwOd");
					this.OnObrtajaUMinutiKodSnageKwOdChanged();
				}
			}
		}
		
		[Column(Storage="_ObrtajaUMinutiKodSnageKwDo", DbType="SmallInt")]
		public System.Nullable<short> ObrtajaUMinutiKodSnageKwDo
		{
			get
			{
				return this._ObrtajaUMinutiKodSnageKwDo;
			}
			set
			{
				if ((this._ObrtajaUMinutiKodSnageKwDo != value))
				{
					this.OnObrtajaUMinutiKodSnageKwDoChanging(value);
					this.SendPropertyChanging();
					this._ObrtajaUMinutiKodSnageKwDo = value;
					this.SendPropertyChanged("ObrtajaUMinutiKodSnageKwDo");
					this.OnObrtajaUMinutiKodSnageKwDoChanged();
				}
			}
		}
		
		[Column(Storage="_ObrtniMomenatKodObrtajaUMinutiOd", DbType="SmallInt")]
		public System.Nullable<short> ObrtniMomenatKodObrtajaUMinutiOd
		{
			get
			{
				return this._ObrtniMomenatKodObrtajaUMinutiOd;
			}
			set
			{
				if ((this._ObrtniMomenatKodObrtajaUMinutiOd != value))
				{
					this.OnObrtniMomenatKodObrtajaUMinutiOdChanging(value);
					this.SendPropertyChanging();
					this._ObrtniMomenatKodObrtajaUMinutiOd = value;
					this.SendPropertyChanged("ObrtniMomenatKodObrtajaUMinutiOd");
					this.OnObrtniMomenatKodObrtajaUMinutiOdChanged();
				}
			}
		}
		
		[Column(Storage="_ObrtajaUMinutiKodObrtnogMomentaOd", DbType="SmallInt")]
		public System.Nullable<short> ObrtajaUMinutiKodObrtnogMomentaOd
		{
			get
			{
				return this._ObrtajaUMinutiKodObrtnogMomentaOd;
			}
			set
			{
				if ((this._ObrtajaUMinutiKodObrtnogMomentaOd != value))
				{
					this.OnObrtajaUMinutiKodObrtnogMomentaOdChanging(value);
					this.SendPropertyChanging();
					this._ObrtajaUMinutiKodObrtnogMomentaOd = value;
					this.SendPropertyChanged("ObrtajaUMinutiKodObrtnogMomentaOd");
					this.OnObrtajaUMinutiKodObrtnogMomentaOdChanged();
				}
			}
		}
		
		[Column(Storage="_ObrtniMomenatKodObrtajaUMinutiDo", DbType="SmallInt")]
		public System.Nullable<short> ObrtniMomenatKodObrtajaUMinutiDo
		{
			get
			{
				return this._ObrtniMomenatKodObrtajaUMinutiDo;
			}
			set
			{
				if ((this._ObrtniMomenatKodObrtajaUMinutiDo != value))
				{
					this.OnObrtniMomenatKodObrtajaUMinutiDoChanging(value);
					this.SendPropertyChanging();
					this._ObrtniMomenatKodObrtajaUMinutiDo = value;
					this.SendPropertyChanged("ObrtniMomenatKodObrtajaUMinutiDo");
					this.OnObrtniMomenatKodObrtajaUMinutiDoChanged();
				}
			}
		}
		
		[Column(Storage="_ObrtajaUMinutiKodObrtnogMomentaDo", DbType="SmallInt")]
		public System.Nullable<short> ObrtajaUMinutiKodObrtnogMomentaDo
		{
			get
			{
				return this._ObrtajaUMinutiKodObrtnogMomentaDo;
			}
			set
			{
				if ((this._ObrtajaUMinutiKodObrtnogMomentaDo != value))
				{
					this.OnObrtajaUMinutiKodObrtnogMomentaDoChanging(value);
					this.SendPropertyChanging();
					this._ObrtajaUMinutiKodObrtnogMomentaDo = value;
					this.SendPropertyChanged("ObrtajaUMinutiKodObrtnogMomentaDo");
					this.OnObrtajaUMinutiKodObrtnogMomentaDoChanged();
				}
			}
		}
		
		[Column(Storage="_SnagaKSOd", DbType="SmallInt")]
		public System.Nullable<short> SnagaKSOd
		{
			get
			{
				return this._SnagaKSOd;
			}
			set
			{
				if ((this._SnagaKSOd != value))
				{
					this.OnSnagaKSOdChanging(value);
					this.SendPropertyChanging();
					this._SnagaKSOd = value;
					this.SendPropertyChanged("SnagaKSOd");
					this.OnSnagaKSOdChanged();
				}
			}
		}
		
		[Column(Storage="_SnagaKSDo", DbType="SmallInt")]
		public System.Nullable<short> SnagaKSDo
		{
			get
			{
				return this._SnagaKSDo;
			}
			set
			{
				if ((this._SnagaKSDo != value))
				{
					this.OnSnagaKSDoChanging(value);
					this.SendPropertyChanging();
					this._SnagaKSDo = value;
					this.SendPropertyChanged("SnagaKSDo");
					this.OnSnagaKSDoChanged();
				}
			}
		}
		
		[Column(Storage="_ZapreminaCcmOd", DbType="Int")]
		public System.Nullable<int> ZapreminaCcmOd
		{
			get
			{
				return this._ZapreminaCcmOd;
			}
			set
			{
				if ((this._ZapreminaCcmOd != value))
				{
					this.OnZapreminaCcmOdChanging(value);
					this.SendPropertyChanging();
					this._ZapreminaCcmOd = value;
					this.SendPropertyChanged("ZapreminaCcmOd");
					this.OnZapreminaCcmOdChanged();
				}
			}
		}
		
		[Column(Storage="_ZapreminaCcmDo", DbType="Int")]
		public System.Nullable<int> ZapreminaCcmDo
		{
			get
			{
				return this._ZapreminaCcmDo;
			}
			set
			{
				if ((this._ZapreminaCcmDo != value))
				{
					this.OnZapreminaCcmDoChanging(value);
					this.SendPropertyChanging();
					this._ZapreminaCcmDo = value;
					this.SendPropertyChanged("ZapreminaCcmDo");
					this.OnZapreminaCcmDoChanged();
				}
			}
		}
		
		[Column(Storage="_Cilindara", DbType="TinyInt")]
		public System.Nullable<byte> Cilindara
		{
			get
			{
				return this._Cilindara;
			}
			set
			{
				if ((this._Cilindara != value))
				{
					this.OnCilindaraChanging(value);
					this.SendPropertyChanging();
					this._Cilindara = value;
					this.SendPropertyChanged("Cilindara");
					this.OnCilindaraChanged();
				}
			}
		}
		
		[Column(Storage="_PrecnikCilindra", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> PrecnikCilindra
		{
			get
			{
				return this._PrecnikCilindra;
			}
			set
			{
				if ((this._PrecnikCilindra != value))
				{
					this.OnPrecnikCilindraChanging(value);
					this.SendPropertyChanging();
					this._PrecnikCilindra = value;
					this.SendPropertyChanged("PrecnikCilindra");
					this.OnPrecnikCilindraChanged();
				}
			}
		}
		
		[Column(Storage="_OblikGlaveCilindra_Opis", DbType="Int")]
		public System.Nullable<int> OblikGlaveCilindra_Opis
		{
			get
			{
				return this._OblikGlaveCilindra_Opis;
			}
			set
			{
				if ((this._OblikGlaveCilindra_Opis != value))
				{
					if (this._OpisTabelaOblikGlaveCilindra_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOblikGlaveCilindra_OpisChanging(value);
					this.SendPropertyChanging();
					this._OblikGlaveCilindra_Opis = value;
					this.SendPropertyChanged("OblikGlaveCilindra_Opis");
					this.OnOblikGlaveCilindra_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_Korak", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> Korak
		{
			get
			{
				return this._Korak;
			}
			set
			{
				if ((this._Korak != value))
				{
					this.OnKorakChanging(value);
					this.SendPropertyChanging();
					this._Korak = value;
					this.SendPropertyChanged("Korak");
					this.OnKorakChanged();
				}
			}
		}
		
		[Column(Storage="_BrojLezajevaKolenastogVratilaRadilice", DbType="TinyInt")]
		public System.Nullable<byte> BrojLezajevaKolenastogVratilaRadilice
		{
			get
			{
				return this._BrojLezajevaKolenastogVratilaRadilice;
			}
			set
			{
				if ((this._BrojLezajevaKolenastogVratilaRadilice != value))
				{
					this.OnBrojLezajevaKolenastogVratilaRadiliceChanging(value);
					this.SendPropertyChanging();
					this._BrojLezajevaKolenastogVratilaRadilice = value;
					this.SendPropertyChanged("BrojLezajevaKolenastogVratilaRadilice");
					this.OnBrojLezajevaKolenastogVratilaRadiliceChanged();
				}
			}
		}
		
		[Column(Storage="_KompresijaOd", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> KompresijaOd
		{
			get
			{
				return this._KompresijaOd;
			}
			set
			{
				if ((this._KompresijaOd != value))
				{
					this.OnKompresijaOdChanging(value);
					this.SendPropertyChanging();
					this._KompresijaOd = value;
					this.SendPropertyChanged("KompresijaOd");
					this.OnKompresijaOdChanged();
				}
			}
		}
		
		[Column(Storage="_KompresijaDo", DbType="Decimal(6,3)")]
		public System.Nullable<decimal> KompresijaDo
		{
			get
			{
				return this._KompresijaDo;
			}
			set
			{
				if ((this._KompresijaDo != value))
				{
					this.OnKompresijaDoChanging(value);
					this.SendPropertyChanging();
					this._KompresijaDo = value;
					this.SendPropertyChanged("KompresijaDo");
					this.OnKompresijaDoChanged();
				}
			}
		}
		
		[Column(Storage="_Ventila", DbType="TinyInt")]
		public System.Nullable<byte> Ventila
		{
			get
			{
				return this._Ventila;
			}
			set
			{
				if ((this._Ventila != value))
				{
					this.OnVentilaChanging(value);
					this.SendPropertyChanging();
					this._Ventila = value;
					this.SendPropertyChanged("Ventila");
					this.OnVentilaChanged();
				}
			}
		}
		
		[Column(Storage="_UpravljanjeVentilima_Opis", DbType="Int")]
		public System.Nullable<int> UpravljanjeVentilima_Opis
		{
			get
			{
				return this._UpravljanjeVentilima_Opis;
			}
			set
			{
				if ((this._UpravljanjeVentilima_Opis != value))
				{
					if (this._OpisTabelaUpravljanjeVentilima_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpravljanjeVentilima_OpisChanging(value);
					this.SendPropertyChanging();
					this._UpravljanjeVentilima_Opis = value;
					this.SendPropertyChanged("UpravljanjeVentilima_Opis");
					this.OnUpravljanjeVentilima_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_VrstaMotora_Opis", DbType="Int")]
		public System.Nullable<int> VrstaMotora_Opis
		{
			get
			{
				return this._VrstaMotora_Opis;
			}
			set
			{
				if ((this._VrstaMotora_Opis != value))
				{
					if (this._OpisTabelaVrstaMotora_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVrstaMotora_OpisChanging(value);
					this.SendPropertyChanging();
					this._VrstaMotora_Opis = value;
					this.SendPropertyChanged("VrstaMotora_Opis");
					this.OnVrstaMotora_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_VrstaGoriva_Opis", DbType="Int")]
		public System.Nullable<int> VrstaGoriva_Opis
		{
			get
			{
				return this._VrstaGoriva_Opis;
			}
			set
			{
				if ((this._VrstaGoriva_Opis != value))
				{
					if (this._OpisTabelaVrstaGoriva_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVrstaGoriva_OpisChanging(value);
					this.SendPropertyChanging();
					this._VrstaGoriva_Opis = value;
					this.SendPropertyChanged("VrstaGoriva_Opis");
					this.OnVrstaGoriva_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_PripremaGoriva_Opis", DbType="Int")]
		public System.Nullable<int> PripremaGoriva_Opis
		{
			get
			{
				return this._PripremaGoriva_Opis;
			}
			set
			{
				if ((this._PripremaGoriva_Opis != value))
				{
					if (this._OpisTabelaPripremaGoriva_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPripremaGoriva_OpisChanging(value);
					this.SendPropertyChanging();
					this._PripremaGoriva_Opis = value;
					this.SendPropertyChanged("PripremaGoriva_Opis");
					this.OnPripremaGoriva_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_PunjenjeKompresija_Opis", DbType="Int")]
		public System.Nullable<int> PunjenjeKompresija_Opis
		{
			get
			{
				return this._PunjenjeKompresija_Opis;
			}
			set
			{
				if ((this._PunjenjeKompresija_Opis != value))
				{
					if (this._OpisTabelaPunjenjeKompresija_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPunjenjeKompresija_OpisChanging(value);
					this.SendPropertyChanging();
					this._PunjenjeKompresija_Opis = value;
					this.SendPropertyChanged("PunjenjeKompresija_Opis");
					this.OnPunjenjeKompresija_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_StandardIzduvnihGasova_Opis", DbType="Int")]
		public System.Nullable<int> StandardIzduvnihGasova_Opis
		{
			get
			{
				return this._StandardIzduvnihGasova_Opis;
			}
			set
			{
				if ((this._StandardIzduvnihGasova_Opis != value))
				{
					if (this._OpisTabelaStandardIzduvnihGasova_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStandardIzduvnihGasova_OpisChanging(value);
					this.SendPropertyChanging();
					this._StandardIzduvnihGasova_Opis = value;
					this.SendPropertyChanged("StandardIzduvnihGasova_Opis");
					this.OnStandardIzduvnihGasova_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_UpravljanjeMotorom_Opis", DbType="Int")]
		public System.Nullable<int> UpravljanjeMotorom_Opis
		{
			get
			{
				return this._UpravljanjeMotorom_Opis;
			}
			set
			{
				if ((this._UpravljanjeMotorom_Opis != value))
				{
					if (this._OpisTabelaUpravljanjeMotorom_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpravljanjeMotorom_OpisChanging(value);
					this.SendPropertyChanging();
					this._UpravljanjeMotorom_Opis = value;
					this.SendPropertyChanged("UpravljanjeMotorom_Opis");
					this.OnUpravljanjeMotorom_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_OblikBlokaMotora_Opis", DbType="Int")]
		public System.Nullable<int> OblikBlokaMotora_Opis
		{
			get
			{
				return this._OblikBlokaMotora_Opis;
			}
			set
			{
				if ((this._OblikBlokaMotora_Opis != value))
				{
					if (this._OpisTabelaOblikBlokaMotora_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOblikBlokaMotora_OpisChanging(value);
					this.SendPropertyChanging();
					this._OblikBlokaMotora_Opis = value;
					this.SendPropertyChanged("OblikBlokaMotora_Opis");
					this.OnOblikBlokaMotora_OpisChanged();
				}
			}
		}
		
		[Column(Storage="_VrstaHladjenja_Opis", DbType="Int")]
		public System.Nullable<int> VrstaHladjenja_Opis
		{
			get
			{
				return this._VrstaHladjenja_Opis;
			}
			set
			{
				if ((this._VrstaHladjenja_Opis != value))
				{
					if (this._OpisTabelaVrstaHladjenja_Opis.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVrstaHladjenja_OpisChanging(value);
					this.SendPropertyChanging();
					this._VrstaHladjenja_Opis = value;
					this.SendPropertyChanged("VrstaHladjenja_Opis");
					this.OnVrstaHladjenja_OpisChanged();
				}
			}
		}
		
		[Association(Name="Motor_VezaTipAutomobilaMotor", Storage="_VezaTipAutomobilaMotors", ThisKey="Motor_ID", OtherKey="Motor_ID")]
		public EntitySet<VezaTipAutomobilaMotor> VezaTipAutomobilaMotors
		{
			get
			{
				return this._VezaTipAutomobilaMotors;
			}
			set
			{
				this._VezaTipAutomobilaMotors.Assign(value);
			}
		}
		
		[Association(Name="Proizvodjac_Motor", Storage="_Proizvodjac", ThisKey="Proizvodjac_ID", OtherKey="Proizvodjac_ID", IsForeignKey=true)]
		public Proizvodjac Proizvodjac
		{
			get
			{
				return this._Proizvodjac.Entity;
			}
			set
			{
				Proizvodjac previousValue = this._Proizvodjac.Entity;
				if (((previousValue != value) 
							|| (this._Proizvodjac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proizvodjac.Entity = null;
						previousValue.Motors.Remove(this);
					}
					this._Proizvodjac.Entity = value;
					if ((value != null))
					{
						value.Motors.Add(this);
						this._Proizvodjac_ID = value.Proizvodjac_ID;
					}
					else
					{
						this._Proizvodjac_ID = default(short);
					}
					this.SendPropertyChanged("Proizvodjac");
				}
			}
		}
		
		[Association(Name="OpisTabela_Motor", Storage="_OpisTabelaOblikBlokaMotora_Opis", ThisKey="OblikBlokaMotora_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaOblikBlokaMotora_Opis
		{
			get
			{
				return this._OpisTabelaOblikBlokaMotora_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaOblikBlokaMotora_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaOblikBlokaMotora_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaOblikBlokaMotora_Opis.Entity = null;
						previousValue.Motors.Remove(this);
					}
					this._OpisTabelaOblikBlokaMotora_Opis.Entity = value;
					if ((value != null))
					{
						value.Motors.Add(this);
						this._OblikBlokaMotora_Opis = value.Opis_ID;
					}
					else
					{
						this._OblikBlokaMotora_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaOblikBlokaMotora_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_Motor1", Storage="_OpisTabelaVrstaHladjenja_Opis", ThisKey="VrstaHladjenja_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaVrstaHladjenja_Opis
		{
			get
			{
				return this._OpisTabelaVrstaHladjenja_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaVrstaHladjenja_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaVrstaHladjenja_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaVrstaHladjenja_Opis.Entity = null;
						previousValue.Motors1.Remove(this);
					}
					this._OpisTabelaVrstaHladjenja_Opis.Entity = value;
					if ((value != null))
					{
						value.Motors1.Add(this);
						this._VrstaHladjenja_Opis = value.Opis_ID;
					}
					else
					{
						this._VrstaHladjenja_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaVrstaHladjenja_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_Motor2", Storage="_OpisTabelaVrstaGoriva_Opis", ThisKey="VrstaGoriva_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaVrstaGoriva_Opis
		{
			get
			{
				return this._OpisTabelaVrstaGoriva_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaVrstaGoriva_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaVrstaGoriva_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaVrstaGoriva_Opis.Entity = null;
						previousValue.Motors2.Remove(this);
					}
					this._OpisTabelaVrstaGoriva_Opis.Entity = value;
					if ((value != null))
					{
						value.Motors2.Add(this);
						this._VrstaGoriva_Opis = value.Opis_ID;
					}
					else
					{
						this._VrstaGoriva_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaVrstaGoriva_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_Motor3", Storage="_OpisTabelaPripremaGoriva_Opis", ThisKey="PripremaGoriva_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaPripremaGoriva_Opis
		{
			get
			{
				return this._OpisTabelaPripremaGoriva_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaPripremaGoriva_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaPripremaGoriva_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaPripremaGoriva_Opis.Entity = null;
						previousValue.Motors3.Remove(this);
					}
					this._OpisTabelaPripremaGoriva_Opis.Entity = value;
					if ((value != null))
					{
						value.Motors3.Add(this);
						this._PripremaGoriva_Opis = value.Opis_ID;
					}
					else
					{
						this._PripremaGoriva_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaPripremaGoriva_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_Motor4", Storage="_OpisTabelaVrstaMotora_Opis", ThisKey="VrstaMotora_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaVrstaMotora_Opis
		{
			get
			{
				return this._OpisTabelaVrstaMotora_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaVrstaMotora_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaVrstaMotora_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaVrstaMotora_Opis.Entity = null;
						previousValue.Motors4.Remove(this);
					}
					this._OpisTabelaVrstaMotora_Opis.Entity = value;
					if ((value != null))
					{
						value.Motors4.Add(this);
						this._VrstaMotora_Opis = value.Opis_ID;
					}
					else
					{
						this._VrstaMotora_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaVrstaMotora_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_Motor5", Storage="_OpisTabelaPunjenjeKompresija_Opis", ThisKey="PunjenjeKompresija_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaPunjenjeKompresija_Opis
		{
			get
			{
				return this._OpisTabelaPunjenjeKompresija_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaPunjenjeKompresija_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaPunjenjeKompresija_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaPunjenjeKompresija_Opis.Entity = null;
						previousValue.Motors5.Remove(this);
					}
					this._OpisTabelaPunjenjeKompresija_Opis.Entity = value;
					if ((value != null))
					{
						value.Motors5.Add(this);
						this._PunjenjeKompresija_Opis = value.Opis_ID;
					}
					else
					{
						this._PunjenjeKompresija_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaPunjenjeKompresija_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_Motor6", Storage="_OpisTabelaStandardIzduvnihGasova_Opis", ThisKey="StandardIzduvnihGasova_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaStandardIzduvnihGasova_Opis
		{
			get
			{
				return this._OpisTabelaStandardIzduvnihGasova_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaStandardIzduvnihGasova_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaStandardIzduvnihGasova_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaStandardIzduvnihGasova_Opis.Entity = null;
						previousValue.Motors6.Remove(this);
					}
					this._OpisTabelaStandardIzduvnihGasova_Opis.Entity = value;
					if ((value != null))
					{
						value.Motors6.Add(this);
						this._StandardIzduvnihGasova_Opis = value.Opis_ID;
					}
					else
					{
						this._StandardIzduvnihGasova_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaStandardIzduvnihGasova_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_Motor7", Storage="_OpisTabelaOblikGlaveCilindra_Opis", ThisKey="OblikGlaveCilindra_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaOblikGlaveCilindra_Opis
		{
			get
			{
				return this._OpisTabelaOblikGlaveCilindra_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaOblikGlaveCilindra_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaOblikGlaveCilindra_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaOblikGlaveCilindra_Opis.Entity = null;
						previousValue.Motors7.Remove(this);
					}
					this._OpisTabelaOblikGlaveCilindra_Opis.Entity = value;
					if ((value != null))
					{
						value.Motors7.Add(this);
						this._OblikGlaveCilindra_Opis = value.Opis_ID;
					}
					else
					{
						this._OblikGlaveCilindra_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaOblikGlaveCilindra_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_Motor8", Storage="_OpisTabelaUpravljanjeMotorom_Opis", ThisKey="UpravljanjeMotorom_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaUpravljanjeMotorom_Opis
		{
			get
			{
				return this._OpisTabelaUpravljanjeMotorom_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaUpravljanjeMotorom_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaUpravljanjeMotorom_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaUpravljanjeMotorom_Opis.Entity = null;
						previousValue.Motors8.Remove(this);
					}
					this._OpisTabelaUpravljanjeMotorom_Opis.Entity = value;
					if ((value != null))
					{
						value.Motors8.Add(this);
						this._UpravljanjeMotorom_Opis = value.Opis_ID;
					}
					else
					{
						this._UpravljanjeMotorom_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaUpravljanjeMotorom_Opis");
				}
			}
		}
		
		[Association(Name="OpisTabela_Motor9", Storage="_OpisTabelaUpravljanjeVentilima_Opis", ThisKey="UpravljanjeVentilima_Opis", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabelaUpravljanjeVentilima_Opis
		{
			get
			{
				return this._OpisTabelaUpravljanjeVentilima_Opis.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabelaUpravljanjeVentilima_Opis.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabelaUpravljanjeVentilima_Opis.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabelaUpravljanjeVentilima_Opis.Entity = null;
						previousValue.Motors9.Remove(this);
					}
					this._OpisTabelaUpravljanjeVentilima_Opis.Entity = value;
					if ((value != null))
					{
						value.Motors9.Add(this);
						this._UpravljanjeVentilima_Opis = value.Opis_ID;
					}
					else
					{
						this._UpravljanjeVentilima_Opis = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabelaUpravljanjeVentilima_Opis");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VezaTipAutomobilaMotors(VezaTipAutomobilaMotor entity)
		{
			this.SendPropertyChanging();
			entity.Motor = this;
		}
		
		private void detach_VezaTipAutomobilaMotors(VezaTipAutomobilaMotor entity)
		{
			this.SendPropertyChanging();
			entity.Motor = null;
		}
	}
	
	[Table(Name="dbo.VezaTipAutomobilaMotor")]
	public partial class VezaTipAutomobilaMotor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TipAutomobila_ID;
		
		private short _Motor_ID;
		
		private System.Nullable<int> _UgradnjaOd;
		
		private System.Nullable<int> _UgradnjaDo;
		
		private EntityRef<Motor> _Motor;
		
		private EntityRef<TipAutomobila> _TipAutomobila;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTipAutomobila_IDChanging(int value);
    partial void OnTipAutomobila_IDChanged();
    partial void OnMotor_IDChanging(short value);
    partial void OnMotor_IDChanged();
    partial void OnUgradnjaOdChanging(System.Nullable<int> value);
    partial void OnUgradnjaOdChanged();
    partial void OnUgradnjaDoChanging(System.Nullable<int> value);
    partial void OnUgradnjaDoChanged();
    #endregion
		
		public VezaTipAutomobilaMotor()
		{
			this._Motor = default(EntityRef<Motor>);
			this._TipAutomobila = default(EntityRef<TipAutomobila>);
			OnCreated();
		}
		
		[Column(Storage="_TipAutomobila_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TipAutomobila_ID
		{
			get
			{
				return this._TipAutomobila_ID;
			}
			set
			{
				if ((this._TipAutomobila_ID != value))
				{
					if (this._TipAutomobila.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipAutomobila_IDChanging(value);
					this.SendPropertyChanging();
					this._TipAutomobila_ID = value;
					this.SendPropertyChanged("TipAutomobila_ID");
					this.OnTipAutomobila_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Motor_ID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Motor_ID
		{
			get
			{
				return this._Motor_ID;
			}
			set
			{
				if ((this._Motor_ID != value))
				{
					if (this._Motor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMotor_IDChanging(value);
					this.SendPropertyChanging();
					this._Motor_ID = value;
					this.SendPropertyChanged("Motor_ID");
					this.OnMotor_IDChanged();
				}
			}
		}
		
		[Column(Storage="_UgradnjaOd", DbType="Int")]
		public System.Nullable<int> UgradnjaOd
		{
			get
			{
				return this._UgradnjaOd;
			}
			set
			{
				if ((this._UgradnjaOd != value))
				{
					this.OnUgradnjaOdChanging(value);
					this.SendPropertyChanging();
					this._UgradnjaOd = value;
					this.SendPropertyChanged("UgradnjaOd");
					this.OnUgradnjaOdChanged();
				}
			}
		}
		
		[Column(Storage="_UgradnjaDo", DbType="Int")]
		public System.Nullable<int> UgradnjaDo
		{
			get
			{
				return this._UgradnjaDo;
			}
			set
			{
				if ((this._UgradnjaDo != value))
				{
					this.OnUgradnjaDoChanging(value);
					this.SendPropertyChanging();
					this._UgradnjaDo = value;
					this.SendPropertyChanged("UgradnjaDo");
					this.OnUgradnjaDoChanged();
				}
			}
		}
		
		[Association(Name="Motor_VezaTipAutomobilaMotor", Storage="_Motor", ThisKey="Motor_ID", OtherKey="Motor_ID", IsForeignKey=true)]
		public Motor Motor
		{
			get
			{
				return this._Motor.Entity;
			}
			set
			{
				Motor previousValue = this._Motor.Entity;
				if (((previousValue != value) 
							|| (this._Motor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Motor.Entity = null;
						previousValue.VezaTipAutomobilaMotors.Remove(this);
					}
					this._Motor.Entity = value;
					if ((value != null))
					{
						value.VezaTipAutomobilaMotors.Add(this);
						this._Motor_ID = value.Motor_ID;
					}
					else
					{
						this._Motor_ID = default(short);
					}
					this.SendPropertyChanged("Motor");
				}
			}
		}
		
		[Association(Name="TipAutomobila_VezaTipAutomobilaMotor", Storage="_TipAutomobila", ThisKey="TipAutomobila_ID", OtherKey="TipAutomobila_ID", IsForeignKey=true)]
		public TipAutomobila TipAutomobila
		{
			get
			{
				return this._TipAutomobila.Entity;
			}
			set
			{
				TipAutomobila previousValue = this._TipAutomobila.Entity;
				if (((previousValue != value) 
							|| (this._TipAutomobila.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipAutomobila.Entity = null;
						previousValue.VezaTipAutomobilaMotors.Remove(this);
					}
					this._TipAutomobila.Entity = value;
					if ((value != null))
					{
						value.VezaTipAutomobilaMotors.Add(this);
						this._TipAutomobila_ID = value.TipAutomobila_ID;
					}
					else
					{
						this._TipAutomobila_ID = default(int);
					}
					this.SendPropertyChanged("TipAutomobila");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PoreskaStopa")]
	public partial class PoreskaStopa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PoreskaStopa_ID;
		
		private string _Sifra;
		
		private int _VrednostProcenata;
		
		private EntitySet<Artikal> _Artikals;
		
		private EntitySet<StavkaUsluga> _StavkaUslugas;
		
		private EntitySet<StavkaArtikal> _StavkaArtikals;
		
		private EntitySet<Usluga> _Uslugas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPoreskaStopa_IDChanging(int value);
    partial void OnPoreskaStopa_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnVrednostProcenataChanging(int value);
    partial void OnVrednostProcenataChanged();
    #endregion
		
		public PoreskaStopa()
		{
			this._Artikals = new EntitySet<Artikal>(new Action<Artikal>(this.attach_Artikals), new Action<Artikal>(this.detach_Artikals));
			this._StavkaUslugas = new EntitySet<StavkaUsluga>(new Action<StavkaUsluga>(this.attach_StavkaUslugas), new Action<StavkaUsluga>(this.detach_StavkaUslugas));
			this._StavkaArtikals = new EntitySet<StavkaArtikal>(new Action<StavkaArtikal>(this.attach_StavkaArtikals), new Action<StavkaArtikal>(this.detach_StavkaArtikals));
			this._Uslugas = new EntitySet<Usluga>(new Action<Usluga>(this.attach_Uslugas), new Action<Usluga>(this.detach_Uslugas));
			OnCreated();
		}
		
		[Column(Storage="_PoreskaStopa_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PoreskaStopa_ID
		{
			get
			{
				return this._PoreskaStopa_ID;
			}
			set
			{
				if ((this._PoreskaStopa_ID != value))
				{
					this.OnPoreskaStopa_IDChanging(value);
					this.SendPropertyChanging();
					this._PoreskaStopa_ID = value;
					this.SendPropertyChanged("PoreskaStopa_ID");
					this.OnPoreskaStopa_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_VrednostProcenata", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int VrednostProcenata
		{
			get
			{
				return this._VrednostProcenata;
			}
			set
			{
				if ((this._VrednostProcenata != value))
				{
					this.OnVrednostProcenataChanging(value);
					this.SendPropertyChanging();
					this._VrednostProcenata = value;
					this.SendPropertyChanged("VrednostProcenata");
					this.OnVrednostProcenataChanged();
				}
			}
		}
		
		[Association(Name="PoreskaStopa_Artikal", Storage="_Artikals", ThisKey="PoreskaStopa_ID", OtherKey="PoreskaStopa_ID")]
		public EntitySet<Artikal> Artikals
		{
			get
			{
				return this._Artikals;
			}
			set
			{
				this._Artikals.Assign(value);
			}
		}
		
		[Association(Name="PoreskaStopa_StavkaUsluga", Storage="_StavkaUslugas", ThisKey="PoreskaStopa_ID", OtherKey="UslugaPoreskaStopa_ID")]
		public EntitySet<StavkaUsluga> StavkaUslugas
		{
			get
			{
				return this._StavkaUslugas;
			}
			set
			{
				this._StavkaUslugas.Assign(value);
			}
		}
		
		[Association(Name="PoreskaStopa_StavkaArtikal", Storage="_StavkaArtikals", ThisKey="PoreskaStopa_ID", OtherKey="ArtikalPoreskaStopa_ID")]
		public EntitySet<StavkaArtikal> StavkaArtikals
		{
			get
			{
				return this._StavkaArtikals;
			}
			set
			{
				this._StavkaArtikals.Assign(value);
			}
		}
		
		[Association(Name="PoreskaStopa_Usluga", Storage="_Uslugas", ThisKey="PoreskaStopa_ID", OtherKey="PoreskaStopa_ID")]
		public EntitySet<Usluga> Uslugas
		{
			get
			{
				return this._Uslugas;
			}
			set
			{
				this._Uslugas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Artikals(Artikal entity)
		{
			this.SendPropertyChanging();
			entity.PoreskaStopa = this;
		}
		
		private void detach_Artikals(Artikal entity)
		{
			this.SendPropertyChanging();
			entity.PoreskaStopa = null;
		}
		
		private void attach_StavkaUslugas(StavkaUsluga entity)
		{
			this.SendPropertyChanging();
			entity.UslugaPoreskaStopa = this;
		}
		
		private void detach_StavkaUslugas(StavkaUsluga entity)
		{
			this.SendPropertyChanging();
			entity.UslugaPoreskaStopa = null;
		}
		
		private void attach_StavkaArtikals(StavkaArtikal entity)
		{
			this.SendPropertyChanging();
			entity.ArtikalPoreskaStopa = this;
		}
		
		private void detach_StavkaArtikals(StavkaArtikal entity)
		{
			this.SendPropertyChanging();
			entity.ArtikalPoreskaStopa = null;
		}
		
		private void attach_Uslugas(Usluga entity)
		{
			this.SendPropertyChanging();
			entity.PoreskaStopa = this;
		}
		
		private void detach_Uslugas(Usluga entity)
		{
			this.SendPropertyChanging();
			entity.PoreskaStopa = null;
		}
	}
	
	[Table(Name="dbo.Ugradnja")]
	public partial class Ugradnja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Artikal_ID;
		
		private int _TipAutomobila_ID;
		
		private EntitySet<VezaUgradnjaKriterijum> _VezaUgradnjaKriterijums;
		
		private EntityRef<Artikal> _Artikal;
		
		private EntityRef<TipAutomobila> _TipAutomobila;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArtikal_IDChanging(int value);
    partial void OnArtikal_IDChanged();
    partial void OnTipAutomobila_IDChanging(int value);
    partial void OnTipAutomobila_IDChanged();
    #endregion
		
		public Ugradnja()
		{
			this._VezaUgradnjaKriterijums = new EntitySet<VezaUgradnjaKriterijum>(new Action<VezaUgradnjaKriterijum>(this.attach_VezaUgradnjaKriterijums), new Action<VezaUgradnjaKriterijum>(this.detach_VezaUgradnjaKriterijums));
			this._Artikal = default(EntityRef<Artikal>);
			this._TipAutomobila = default(EntityRef<TipAutomobila>);
			OnCreated();
		}
		
		[Column(Storage="_Artikal_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Artikal_ID
		{
			get
			{
				return this._Artikal_ID;
			}
			set
			{
				if ((this._Artikal_ID != value))
				{
					if (this._Artikal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArtikal_IDChanging(value);
					this.SendPropertyChanging();
					this._Artikal_ID = value;
					this.SendPropertyChanged("Artikal_ID");
					this.OnArtikal_IDChanged();
				}
			}
		}
		
		[Column(Storage="_TipAutomobila_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TipAutomobila_ID
		{
			get
			{
				return this._TipAutomobila_ID;
			}
			set
			{
				if ((this._TipAutomobila_ID != value))
				{
					if (this._TipAutomobila.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipAutomobila_IDChanging(value);
					this.SendPropertyChanging();
					this._TipAutomobila_ID = value;
					this.SendPropertyChanged("TipAutomobila_ID");
					this.OnTipAutomobila_IDChanged();
				}
			}
		}
		
		[Association(Name="Ugradnja_VezaUgradnjaKriterijum", Storage="_VezaUgradnjaKriterijums", ThisKey="Artikal_ID,TipAutomobila_ID", OtherKey="UgradnjaArtikal_ID,UgradnjaTipAutomobila_ID")]
		public EntitySet<VezaUgradnjaKriterijum> VezaUgradnjaKriterijums
		{
			get
			{
				return this._VezaUgradnjaKriterijums;
			}
			set
			{
				this._VezaUgradnjaKriterijums.Assign(value);
			}
		}
		
		[Association(Name="Artikal_Ugradnja", Storage="_Artikal", ThisKey="Artikal_ID", OtherKey="Artikal_ID", IsForeignKey=true)]
		public Artikal Artikal
		{
			get
			{
				return this._Artikal.Entity;
			}
			set
			{
				Artikal previousValue = this._Artikal.Entity;
				if (((previousValue != value) 
							|| (this._Artikal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artikal.Entity = null;
						previousValue.Ugradnjas.Remove(this);
					}
					this._Artikal.Entity = value;
					if ((value != null))
					{
						value.Ugradnjas.Add(this);
						this._Artikal_ID = value.Artikal_ID;
					}
					else
					{
						this._Artikal_ID = default(int);
					}
					this.SendPropertyChanged("Artikal");
				}
			}
		}
		
		[Association(Name="TipAutomobila_Ugradnja", Storage="_TipAutomobila", ThisKey="TipAutomobila_ID", OtherKey="TipAutomobila_ID", IsForeignKey=true)]
		public TipAutomobila TipAutomobila
		{
			get
			{
				return this._TipAutomobila.Entity;
			}
			set
			{
				TipAutomobila previousValue = this._TipAutomobila.Entity;
				if (((previousValue != value) 
							|| (this._TipAutomobila.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipAutomobila.Entity = null;
						previousValue.Ugradnjas.Remove(this);
					}
					this._TipAutomobila.Entity = value;
					if ((value != null))
					{
						value.Ugradnjas.Add(this);
						this._TipAutomobila_ID = value.TipAutomobila_ID;
					}
					else
					{
						this._TipAutomobila_ID = default(int);
					}
					this.SendPropertyChanged("TipAutomobila");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VezaUgradnjaKriterijums(VezaUgradnjaKriterijum entity)
		{
			this.SendPropertyChanging();
			entity.Ugradnja = this;
		}
		
		private void detach_VezaUgradnjaKriterijums(VezaUgradnjaKriterijum entity)
		{
			this.SendPropertyChanging();
			entity.Ugradnja = null;
		}
	}
	
	[Table(Name="dbo.VezaUgradnjaKriterijum")]
	public partial class VezaUgradnjaKriterijum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VezaUgradnjaKriterijum_ID;
		
		private int _UgradnjaArtikal_ID;
		
		private int _UgradnjaTipAutomobila_ID;
		
		private short _Kriterijum_ID;
		
		private string _Vrednost;
		
		private System.Nullable<int> _Opis_ID;
		
		private EntityRef<Kriterijum> _Kriterijum;
		
		private EntityRef<Ugradnja> _Ugradnja;
		
		private EntityRef<OpisTabela> _OpisTabela;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVezaUgradnjaKriterijum_IDChanging(int value);
    partial void OnVezaUgradnjaKriterijum_IDChanged();
    partial void OnUgradnjaArtikal_IDChanging(int value);
    partial void OnUgradnjaArtikal_IDChanged();
    partial void OnUgradnjaTipAutomobila_IDChanging(int value);
    partial void OnUgradnjaTipAutomobila_IDChanged();
    partial void OnKriterijum_IDChanging(short value);
    partial void OnKriterijum_IDChanged();
    partial void OnVrednostChanging(string value);
    partial void OnVrednostChanged();
    partial void OnOpis_IDChanging(System.Nullable<int> value);
    partial void OnOpis_IDChanged();
    #endregion
		
		public VezaUgradnjaKriterijum()
		{
			this._Kriterijum = default(EntityRef<Kriterijum>);
			this._Ugradnja = default(EntityRef<Ugradnja>);
			this._OpisTabela = default(EntityRef<OpisTabela>);
			OnCreated();
		}
		
		[Column(Storage="_VezaUgradnjaKriterijum_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VezaUgradnjaKriterijum_ID
		{
			get
			{
				return this._VezaUgradnjaKriterijum_ID;
			}
			set
			{
				if ((this._VezaUgradnjaKriterijum_ID != value))
				{
					this.OnVezaUgradnjaKriterijum_IDChanging(value);
					this.SendPropertyChanging();
					this._VezaUgradnjaKriterijum_ID = value;
					this.SendPropertyChanged("VezaUgradnjaKriterijum_ID");
					this.OnVezaUgradnjaKriterijum_IDChanged();
				}
			}
		}
		
		[Column(Storage="_UgradnjaArtikal_ID", DbType="Int NOT NULL")]
		public int UgradnjaArtikal_ID
		{
			get
			{
				return this._UgradnjaArtikal_ID;
			}
			set
			{
				if ((this._UgradnjaArtikal_ID != value))
				{
					if (this._Ugradnja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUgradnjaArtikal_IDChanging(value);
					this.SendPropertyChanging();
					this._UgradnjaArtikal_ID = value;
					this.SendPropertyChanged("UgradnjaArtikal_ID");
					this.OnUgradnjaArtikal_IDChanged();
				}
			}
		}
		
		[Column(Storage="_UgradnjaTipAutomobila_ID", DbType="Int NOT NULL")]
		public int UgradnjaTipAutomobila_ID
		{
			get
			{
				return this._UgradnjaTipAutomobila_ID;
			}
			set
			{
				if ((this._UgradnjaTipAutomobila_ID != value))
				{
					if (this._Ugradnja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUgradnjaTipAutomobila_IDChanging(value);
					this.SendPropertyChanging();
					this._UgradnjaTipAutomobila_ID = value;
					this.SendPropertyChanged("UgradnjaTipAutomobila_ID");
					this.OnUgradnjaTipAutomobila_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Kriterijum_ID", DbType="SmallInt NOT NULL")]
		public short Kriterijum_ID
		{
			get
			{
				return this._Kriterijum_ID;
			}
			set
			{
				if ((this._Kriterijum_ID != value))
				{
					if (this._Kriterijum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKriterijum_IDChanging(value);
					this.SendPropertyChanging();
					this._Kriterijum_ID = value;
					this.SendPropertyChanged("Kriterijum_ID");
					this.OnKriterijum_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Vrednost", DbType="NVarChar(60)")]
		public string Vrednost
		{
			get
			{
				return this._Vrednost;
			}
			set
			{
				if ((this._Vrednost != value))
				{
					this.OnVrednostChanging(value);
					this.SendPropertyChanging();
					this._Vrednost = value;
					this.SendPropertyChanged("Vrednost");
					this.OnVrednostChanged();
				}
			}
		}
		
		[Column(Storage="_Opis_ID", DbType="Int")]
		public System.Nullable<int> Opis_ID
		{
			get
			{
				return this._Opis_ID;
			}
			set
			{
				if ((this._Opis_ID != value))
				{
					if (this._OpisTabela.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOpis_IDChanging(value);
					this.SendPropertyChanging();
					this._Opis_ID = value;
					this.SendPropertyChanged("Opis_ID");
					this.OnOpis_IDChanged();
				}
			}
		}
		
		[Association(Name="Kriterijum_VezaUgradnjaKriterijum", Storage="_Kriterijum", ThisKey="Kriterijum_ID", OtherKey="Kriterijum_ID", IsForeignKey=true)]
		public Kriterijum Kriterijum
		{
			get
			{
				return this._Kriterijum.Entity;
			}
			set
			{
				Kriterijum previousValue = this._Kriterijum.Entity;
				if (((previousValue != value) 
							|| (this._Kriterijum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kriterijum.Entity = null;
						previousValue.VezaUgradnjaKriterijums.Remove(this);
					}
					this._Kriterijum.Entity = value;
					if ((value != null))
					{
						value.VezaUgradnjaKriterijums.Add(this);
						this._Kriterijum_ID = value.Kriterijum_ID;
					}
					else
					{
						this._Kriterijum_ID = default(short);
					}
					this.SendPropertyChanged("Kriterijum");
				}
			}
		}
		
		[Association(Name="Ugradnja_VezaUgradnjaKriterijum", Storage="_Ugradnja", ThisKey="UgradnjaArtikal_ID,UgradnjaTipAutomobila_ID", OtherKey="Artikal_ID,TipAutomobila_ID", IsForeignKey=true)]
		public Ugradnja Ugradnja
		{
			get
			{
				return this._Ugradnja.Entity;
			}
			set
			{
				Ugradnja previousValue = this._Ugradnja.Entity;
				if (((previousValue != value) 
							|| (this._Ugradnja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ugradnja.Entity = null;
						previousValue.VezaUgradnjaKriterijums.Remove(this);
					}
					this._Ugradnja.Entity = value;
					if ((value != null))
					{
						value.VezaUgradnjaKriterijums.Add(this);
						this._UgradnjaArtikal_ID = value.Artikal_ID;
						this._UgradnjaTipAutomobila_ID = value.TipAutomobila_ID;
					}
					else
					{
						this._UgradnjaArtikal_ID = default(int);
						this._UgradnjaTipAutomobila_ID = default(int);
					}
					this.SendPropertyChanged("Ugradnja");
				}
			}
		}
		
		[Association(Name="OpisTabela_VezaUgradnjaKriterijum", Storage="_OpisTabela", ThisKey="Opis_ID", OtherKey="Opis_ID", IsForeignKey=true)]
		public OpisTabela OpisTabela
		{
			get
			{
				return this._OpisTabela.Entity;
			}
			set
			{
				OpisTabela previousValue = this._OpisTabela.Entity;
				if (((previousValue != value) 
							|| (this._OpisTabela.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OpisTabela.Entity = null;
						previousValue.VezaUgradnjaKriterijums.Remove(this);
					}
					this._OpisTabela.Entity = value;
					if ((value != null))
					{
						value.VezaUgradnjaKriterijums.Add(this);
						this._Opis_ID = value.Opis_ID;
					}
					else
					{
						this._Opis_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OpisTabela");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.VrstaBrojaZaPretragu")]
	public partial class VrstaBrojaZaPretragu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _VrstaBrojaZaPretragu_ID;
		
		private string _Naziv;
		
		private EntitySet<VezaArtikalBrojZaPretragu> _VezaArtikalBrojZaPretragus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVrstaBrojaZaPretragu_IDChanging(byte value);
    partial void OnVrstaBrojaZaPretragu_IDChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    #endregion
		
		public VrstaBrojaZaPretragu()
		{
			this._VezaArtikalBrojZaPretragus = new EntitySet<VezaArtikalBrojZaPretragu>(new Action<VezaArtikalBrojZaPretragu>(this.attach_VezaArtikalBrojZaPretragus), new Action<VezaArtikalBrojZaPretragu>(this.detach_VezaArtikalBrojZaPretragus));
			OnCreated();
		}
		
		[Column(Storage="_VrstaBrojaZaPretragu_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte VrstaBrojaZaPretragu_ID
		{
			get
			{
				return this._VrstaBrojaZaPretragu_ID;
			}
			set
			{
				if ((this._VrstaBrojaZaPretragu_ID != value))
				{
					this.OnVrstaBrojaZaPretragu_IDChanging(value);
					this.SendPropertyChanging();
					this._VrstaBrojaZaPretragu_ID = value;
					this.SendPropertyChanged("VrstaBrojaZaPretragu_ID");
					this.OnVrstaBrojaZaPretragu_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Naziv", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[Association(Name="VrstaBrojaZaPretragu_VezaArtikalBrojZaPretragu", Storage="_VezaArtikalBrojZaPretragus", ThisKey="VrstaBrojaZaPretragu_ID", OtherKey="VrstaBrojaZaPretragu_ID")]
		public EntitySet<VezaArtikalBrojZaPretragu> VezaArtikalBrojZaPretragus
		{
			get
			{
				return this._VezaArtikalBrojZaPretragus;
			}
			set
			{
				this._VezaArtikalBrojZaPretragus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VezaArtikalBrojZaPretragus(VezaArtikalBrojZaPretragu entity)
		{
			this.SendPropertyChanging();
			entity.VrstaBrojaZaPretragu = this;
		}
		
		private void detach_VezaArtikalBrojZaPretragus(VezaArtikalBrojZaPretragu entity)
		{
			this.SendPropertyChanging();
			entity.VrstaBrojaZaPretragu = null;
		}
	}
	
	[Table(Name="dbo.VezaArtikalBrojZaPretragu")]
	public partial class VezaArtikalBrojZaPretragu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VezaArtikalBrojZaPretragu_ID;
		
		private int _Artikal_ID;
		
		private string _BrojZaPretragu;
		
		private string _BrojZaPrikazivanje;
		
		private byte _VrstaBrojaZaPretragu_ID;
		
		private System.Nullable<short> _Proizvodjac_ID;
		
		private EntityRef<Artikal> _Artikal;
		
		private EntityRef<Proizvodjac> _Proizvodjac;
		
		private EntityRef<VrstaBrojaZaPretragu> _VrstaBrojaZaPretragu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVezaArtikalBrojZaPretragu_IDChanging(int value);
    partial void OnVezaArtikalBrojZaPretragu_IDChanged();
    partial void OnArtikal_IDChanging(int value);
    partial void OnArtikal_IDChanged();
    partial void OnBrojZaPretraguChanging(string value);
    partial void OnBrojZaPretraguChanged();
    partial void OnBrojZaPrikazivanjeChanging(string value);
    partial void OnBrojZaPrikazivanjeChanged();
    partial void OnVrstaBrojaZaPretragu_IDChanging(byte value);
    partial void OnVrstaBrojaZaPretragu_IDChanged();
    partial void OnProizvodjac_IDChanging(System.Nullable<short> value);
    partial void OnProizvodjac_IDChanged();
    #endregion
		
		public VezaArtikalBrojZaPretragu()
		{
			this._Artikal = default(EntityRef<Artikal>);
			this._Proizvodjac = default(EntityRef<Proizvodjac>);
			this._VrstaBrojaZaPretragu = default(EntityRef<VrstaBrojaZaPretragu>);
			OnCreated();
		}
		
		[Column(Storage="_VezaArtikalBrojZaPretragu_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VezaArtikalBrojZaPretragu_ID
		{
			get
			{
				return this._VezaArtikalBrojZaPretragu_ID;
			}
			set
			{
				if ((this._VezaArtikalBrojZaPretragu_ID != value))
				{
					this.OnVezaArtikalBrojZaPretragu_IDChanging(value);
					this.SendPropertyChanging();
					this._VezaArtikalBrojZaPretragu_ID = value;
					this.SendPropertyChanged("VezaArtikalBrojZaPretragu_ID");
					this.OnVezaArtikalBrojZaPretragu_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Artikal_ID", DbType="Int NOT NULL")]
		public int Artikal_ID
		{
			get
			{
				return this._Artikal_ID;
			}
			set
			{
				if ((this._Artikal_ID != value))
				{
					if (this._Artikal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArtikal_IDChanging(value);
					this.SendPropertyChanging();
					this._Artikal_ID = value;
					this.SendPropertyChanged("Artikal_ID");
					this.OnArtikal_IDChanged();
				}
			}
		}
		
		[Column(Storage="_BrojZaPretragu", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BrojZaPretragu
		{
			get
			{
				return this._BrojZaPretragu;
			}
			set
			{
				if ((this._BrojZaPretragu != value))
				{
					this.OnBrojZaPretraguChanging(value);
					this.SendPropertyChanging();
					this._BrojZaPretragu = value;
					this.SendPropertyChanged("BrojZaPretragu");
					this.OnBrojZaPretraguChanged();
				}
			}
		}
		
		[Column(Storage="_BrojZaPrikazivanje", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BrojZaPrikazivanje
		{
			get
			{
				return this._BrojZaPrikazivanje;
			}
			set
			{
				if ((this._BrojZaPrikazivanje != value))
				{
					this.OnBrojZaPrikazivanjeChanging(value);
					this.SendPropertyChanging();
					this._BrojZaPrikazivanje = value;
					this.SendPropertyChanged("BrojZaPrikazivanje");
					this.OnBrojZaPrikazivanjeChanged();
				}
			}
		}
		
		[Column(Storage="_VrstaBrojaZaPretragu_ID", DbType="TinyInt NOT NULL")]
		public byte VrstaBrojaZaPretragu_ID
		{
			get
			{
				return this._VrstaBrojaZaPretragu_ID;
			}
			set
			{
				if ((this._VrstaBrojaZaPretragu_ID != value))
				{
					if (this._VrstaBrojaZaPretragu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVrstaBrojaZaPretragu_IDChanging(value);
					this.SendPropertyChanging();
					this._VrstaBrojaZaPretragu_ID = value;
					this.SendPropertyChanged("VrstaBrojaZaPretragu_ID");
					this.OnVrstaBrojaZaPretragu_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Proizvodjac_ID", DbType="SmallInt")]
		public System.Nullable<short> Proizvodjac_ID
		{
			get
			{
				return this._Proizvodjac_ID;
			}
			set
			{
				if ((this._Proizvodjac_ID != value))
				{
					if (this._Proizvodjac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProizvodjac_IDChanging(value);
					this.SendPropertyChanging();
					this._Proizvodjac_ID = value;
					this.SendPropertyChanged("Proizvodjac_ID");
					this.OnProizvodjac_IDChanged();
				}
			}
		}
		
		[Association(Name="Artikal_VezaArtikalBrojZaPretragu", Storage="_Artikal", ThisKey="Artikal_ID", OtherKey="Artikal_ID", IsForeignKey=true)]
		public Artikal Artikal
		{
			get
			{
				return this._Artikal.Entity;
			}
			set
			{
				Artikal previousValue = this._Artikal.Entity;
				if (((previousValue != value) 
							|| (this._Artikal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artikal.Entity = null;
						previousValue.VezaArtikalBrojZaPretragus.Remove(this);
					}
					this._Artikal.Entity = value;
					if ((value != null))
					{
						value.VezaArtikalBrojZaPretragus.Add(this);
						this._Artikal_ID = value.Artikal_ID;
					}
					else
					{
						this._Artikal_ID = default(int);
					}
					this.SendPropertyChanged("Artikal");
				}
			}
		}
		
		[Association(Name="Proizvodjac_VezaArtikalBrojZaPretragu", Storage="_Proizvodjac", ThisKey="Proizvodjac_ID", OtherKey="Proizvodjac_ID", IsForeignKey=true)]
		public Proizvodjac Proizvodjac
		{
			get
			{
				return this._Proizvodjac.Entity;
			}
			set
			{
				Proizvodjac previousValue = this._Proizvodjac.Entity;
				if (((previousValue != value) 
							|| (this._Proizvodjac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proizvodjac.Entity = null;
						previousValue.VezaArtikalBrojZaPretragus.Remove(this);
					}
					this._Proizvodjac.Entity = value;
					if ((value != null))
					{
						value.VezaArtikalBrojZaPretragus.Add(this);
						this._Proizvodjac_ID = value.Proizvodjac_ID;
					}
					else
					{
						this._Proizvodjac_ID = default(Nullable<short>);
					}
					this.SendPropertyChanged("Proizvodjac");
				}
			}
		}
		
		[Association(Name="VrstaBrojaZaPretragu_VezaArtikalBrojZaPretragu", Storage="_VrstaBrojaZaPretragu", ThisKey="VrstaBrojaZaPretragu_ID", OtherKey="VrstaBrojaZaPretragu_ID", IsForeignKey=true)]
		public VrstaBrojaZaPretragu VrstaBrojaZaPretragu
		{
			get
			{
				return this._VrstaBrojaZaPretragu.Entity;
			}
			set
			{
				VrstaBrojaZaPretragu previousValue = this._VrstaBrojaZaPretragu.Entity;
				if (((previousValue != value) 
							|| (this._VrstaBrojaZaPretragu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VrstaBrojaZaPretragu.Entity = null;
						previousValue.VezaArtikalBrojZaPretragus.Remove(this);
					}
					this._VrstaBrojaZaPretragu.Entity = value;
					if ((value != null))
					{
						value.VezaArtikalBrojZaPretragus.Add(this);
						this._VrstaBrojaZaPretragu_ID = value.VrstaBrojaZaPretragu_ID;
					}
					else
					{
						this._VrstaBrojaZaPretragu_ID = default(byte);
					}
					this.SendPropertyChanged("VrstaBrojaZaPretragu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.VezaArtikalDobavljac")]
	public partial class VezaArtikalDobavljac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VezaArtikalDobavljac_ID;
		
		private System.Nullable<int> _PoslovniPartner_ID;
		
		private System.Nullable<int> _KorisnikPrograma_ID;
		
		private int _Artikal_ID;
		
		private decimal _CenaBezPoreza;
		
		private System.DateTime _DatumAzuriranja;
		
		private System.Nullable<int> _KolicinaNaStanju;
		
		private EntitySet<StavkaArtikal> _StavkaArtikals;
		
		private EntityRef<PoslovniPartner> _PoslovniPartner;
		
		private EntityRef<Artikal> _Artikal;
		
		private EntityRef<KorisnikPrograma> _KorisnikPrograma;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVezaArtikalDobavljac_IDChanging(int value);
    partial void OnVezaArtikalDobavljac_IDChanged();
    partial void OnPoslovniPartner_IDChanging(System.Nullable<int> value);
    partial void OnPoslovniPartner_IDChanged();
    partial void OnKorisnikPrograma_IDChanging(System.Nullable<int> value);
    partial void OnKorisnikPrograma_IDChanged();
    partial void OnArtikal_IDChanging(int value);
    partial void OnArtikal_IDChanged();
    partial void OnCenaBezPorezaChanging(decimal value);
    partial void OnCenaBezPorezaChanged();
    partial void OnDatumAzuriranjaChanging(System.DateTime value);
    partial void OnDatumAzuriranjaChanged();
    partial void OnKolicinaNaStanjuChanging(System.Nullable<int> value);
    partial void OnKolicinaNaStanjuChanged();
    #endregion
		
		public VezaArtikalDobavljac()
		{
			this._StavkaArtikals = new EntitySet<StavkaArtikal>(new Action<StavkaArtikal>(this.attach_StavkaArtikals), new Action<StavkaArtikal>(this.detach_StavkaArtikals));
			this._PoslovniPartner = default(EntityRef<PoslovniPartner>);
			this._Artikal = default(EntityRef<Artikal>);
			this._KorisnikPrograma = default(EntityRef<KorisnikPrograma>);
			OnCreated();
		}
		
		[Column(Storage="_VezaArtikalDobavljac_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VezaArtikalDobavljac_ID
		{
			get
			{
				return this._VezaArtikalDobavljac_ID;
			}
			set
			{
				if ((this._VezaArtikalDobavljac_ID != value))
				{
					this.OnVezaArtikalDobavljac_IDChanging(value);
					this.SendPropertyChanging();
					this._VezaArtikalDobavljac_ID = value;
					this.SendPropertyChanged("VezaArtikalDobavljac_ID");
					this.OnVezaArtikalDobavljac_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PoslovniPartner_ID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PoslovniPartner_ID
		{
			get
			{
				return this._PoslovniPartner_ID;
			}
			set
			{
				if ((this._PoslovniPartner_ID != value))
				{
					if (this._PoslovniPartner.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPoslovniPartner_IDChanging(value);
					this.SendPropertyChanging();
					this._PoslovniPartner_ID = value;
					this.SendPropertyChanged("PoslovniPartner_ID");
					this.OnPoslovniPartner_IDChanged();
				}
			}
		}
		
		[Column(Storage="_KorisnikPrograma_ID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> KorisnikPrograma_ID
		{
			get
			{
				return this._KorisnikPrograma_ID;
			}
			set
			{
				if ((this._KorisnikPrograma_ID != value))
				{
					if (this._KorisnikPrograma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKorisnikPrograma_IDChanging(value);
					this.SendPropertyChanging();
					this._KorisnikPrograma_ID = value;
					this.SendPropertyChanged("KorisnikPrograma_ID");
					this.OnKorisnikPrograma_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Artikal_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Artikal_ID
		{
			get
			{
				return this._Artikal_ID;
			}
			set
			{
				if ((this._Artikal_ID != value))
				{
					if (this._Artikal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArtikal_IDChanging(value);
					this.SendPropertyChanging();
					this._Artikal_ID = value;
					this.SendPropertyChanged("Artikal_ID");
					this.OnArtikal_IDChanged();
				}
			}
		}
		
		[Column(Storage="_CenaBezPoreza", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal CenaBezPoreza
		{
			get
			{
				return this._CenaBezPoreza;
			}
			set
			{
				if ((this._CenaBezPoreza != value))
				{
					this.OnCenaBezPorezaChanging(value);
					this.SendPropertyChanging();
					this._CenaBezPoreza = value;
					this.SendPropertyChanged("CenaBezPoreza");
					this.OnCenaBezPorezaChanged();
				}
			}
		}
		
		[Column(Storage="_DatumAzuriranja", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DatumAzuriranja
		{
			get
			{
				return this._DatumAzuriranja;
			}
			set
			{
				if ((this._DatumAzuriranja != value))
				{
					this.OnDatumAzuriranjaChanging(value);
					this.SendPropertyChanging();
					this._DatumAzuriranja = value;
					this.SendPropertyChanged("DatumAzuriranja");
					this.OnDatumAzuriranjaChanged();
				}
			}
		}
		
		[Column(Storage="_KolicinaNaStanju", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> KolicinaNaStanju
		{
			get
			{
				return this._KolicinaNaStanju;
			}
			set
			{
				if ((this._KolicinaNaStanju != value))
				{
					this.OnKolicinaNaStanjuChanging(value);
					this.SendPropertyChanging();
					this._KolicinaNaStanju = value;
					this.SendPropertyChanged("KolicinaNaStanju");
					this.OnKolicinaNaStanjuChanged();
				}
			}
		}
		
		[Association(Name="VezaArtikalDobavljac_StavkaArtikal", Storage="_StavkaArtikals", ThisKey="VezaArtikalDobavljac_ID", OtherKey="VezaArtikalDobavljac_ID")]
		public EntitySet<StavkaArtikal> StavkaArtikals
		{
			get
			{
				return this._StavkaArtikals;
			}
			set
			{
				this._StavkaArtikals.Assign(value);
			}
		}
		
		[Association(Name="PoslovniPartner_VezaArtikalDobavljac", Storage="_PoslovniPartner", ThisKey="PoslovniPartner_ID", OtherKey="PoslovniPartner_ID", IsForeignKey=true)]
		public PoslovniPartner PoslovniPartner
		{
			get
			{
				return this._PoslovniPartner.Entity;
			}
			set
			{
				PoslovniPartner previousValue = this._PoslovniPartner.Entity;
				if (((previousValue != value) 
							|| (this._PoslovniPartner.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PoslovniPartner.Entity = null;
						previousValue.VezaArtikalDobavljacs.Remove(this);
					}
					this._PoslovniPartner.Entity = value;
					if ((value != null))
					{
						value.VezaArtikalDobavljacs.Add(this);
						this._PoslovniPartner_ID = value.PoslovniPartner_ID;
					}
					else
					{
						this._PoslovniPartner_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PoslovniPartner");
				}
			}
		}
		
		[Association(Name="Artikal_VezaArtikalDobavljac", Storage="_Artikal", ThisKey="Artikal_ID", OtherKey="Artikal_ID", IsForeignKey=true)]
		public Artikal Artikal
		{
			get
			{
				return this._Artikal.Entity;
			}
			set
			{
				Artikal previousValue = this._Artikal.Entity;
				if (((previousValue != value) 
							|| (this._Artikal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artikal.Entity = null;
						previousValue.VezaArtikalDobavljacs.Remove(this);
					}
					this._Artikal.Entity = value;
					if ((value != null))
					{
						value.VezaArtikalDobavljacs.Add(this);
						this._Artikal_ID = value.Artikal_ID;
					}
					else
					{
						this._Artikal_ID = default(int);
					}
					this.SendPropertyChanged("Artikal");
				}
			}
		}
		
		[Association(Name="KorisnikPrograma_VezaArtikalDobavljac", Storage="_KorisnikPrograma", ThisKey="KorisnikPrograma_ID", OtherKey="KorisnikPrograma_ID", IsForeignKey=true)]
		public KorisnikPrograma KorisnikPrograma
		{
			get
			{
				return this._KorisnikPrograma.Entity;
			}
			set
			{
				KorisnikPrograma previousValue = this._KorisnikPrograma.Entity;
				if (((previousValue != value) 
							|| (this._KorisnikPrograma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KorisnikPrograma.Entity = null;
						previousValue.VezaArtikalDobavljacs.Remove(this);
					}
					this._KorisnikPrograma.Entity = value;
					if ((value != null))
					{
						value.VezaArtikalDobavljacs.Add(this);
						this._KorisnikPrograma_ID = value.KorisnikPrograma_ID;
					}
					else
					{
						this._KorisnikPrograma_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("KorisnikPrograma");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StavkaArtikals(StavkaArtikal entity)
		{
			this.SendPropertyChanging();
			entity.VezaArtikalDobavljac = this;
		}
		
		private void detach_StavkaArtikals(StavkaArtikal entity)
		{
			this.SendPropertyChanging();
			entity.VezaArtikalDobavljac = null;
		}
	}
	
	[Table(Name="dbo.TipCvora")]
	public partial class TipCvora : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _TipCvora_ID;
		
		private string _Naziv;
		
		private EntitySet<Stablo> _Stablos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTipCvora_IDChanging(byte value);
    partial void OnTipCvora_IDChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    #endregion
		
		public TipCvora()
		{
			this._Stablos = new EntitySet<Stablo>(new Action<Stablo>(this.attach_Stablos), new Action<Stablo>(this.detach_Stablos));
			OnCreated();
		}
		
		[Column(Storage="_TipCvora_ID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte TipCvora_ID
		{
			get
			{
				return this._TipCvora_ID;
			}
			set
			{
				if ((this._TipCvora_ID != value))
				{
					this.OnTipCvora_IDChanging(value);
					this.SendPropertyChanging();
					this._TipCvora_ID = value;
					this.SendPropertyChanged("TipCvora_ID");
					this.OnTipCvora_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Naziv", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[Association(Name="TipCvora_Stablo", Storage="_Stablos", ThisKey="TipCvora_ID", OtherKey="TipCvora_ID")]
		public EntitySet<Stablo> Stablos
		{
			get
			{
				return this._Stablos;
			}
			set
			{
				this._Stablos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stablos(Stablo entity)
		{
			this.SendPropertyChanging();
			entity.TipCvora = this;
		}
		
		private void detach_Stablos(Stablo entity)
		{
			this.SendPropertyChanging();
			entity.TipCvora = null;
		}
	}
	
	[Table(Name="dbo.Opis")]
	public partial class OpisTabela : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Opis_ID;
		
		private string _Opis;
		
		private EntitySet<TipAutomobila> _TipAutomobilas;
		
		private EntitySet<TipAutomobila> _TipAutomobilas1;
		
		private EntitySet<TipAutomobila> _TipAutomobilas2;
		
		private EntitySet<TipAutomobila> _TipAutomobilas3;
		
		private EntitySet<TipAutomobila> _TipAutomobilas4;
		
		private EntitySet<TipAutomobila> _TipAutomobilas5;
		
		private EntitySet<TipAutomobila> _TipAutomobilas6;
		
		private EntitySet<TipAutomobila> _TipAutomobilas7;
		
		private EntitySet<TipAutomobila> _TipAutomobilas8;
		
		private EntitySet<TipAutomobila> _TipAutomobilas9;
		
		private EntitySet<TipAutomobila> _TipAutomobilas10;
		
		private EntitySet<TipAutomobila> _TipAutomobilas11;
		
		private EntitySet<TipAutomobila> _TipAutomobilas12;
		
		private EntitySet<ModelAutomobila> _ModelAutomobilas;
		
		private EntitySet<Artikal> _Artikals;
		
		private EntitySet<Stablo> _Stablos;
		
		private EntitySet<VezaArtikalKriterijum> _VezaArtikalKriterijums;
		
		private EntitySet<Kriterijum> _Kriterijums;
		
		private EntitySet<Motor> _Motors;
		
		private EntitySet<Motor> _Motors1;
		
		private EntitySet<Motor> _Motors2;
		
		private EntitySet<Motor> _Motors3;
		
		private EntitySet<Motor> _Motors4;
		
		private EntitySet<Motor> _Motors5;
		
		private EntitySet<Motor> _Motors6;
		
		private EntitySet<Motor> _Motors7;
		
		private EntitySet<Motor> _Motors8;
		
		private EntitySet<Motor> _Motors9;
		
		private EntitySet<VezaUgradnjaKriterijum> _VezaUgradnjaKriterijums;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOpis_IDChanging(int value);
    partial void OnOpis_IDChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    #endregion
		
		public OpisTabela()
		{
			this._TipAutomobilas = new EntitySet<TipAutomobila>(new Action<TipAutomobila>(this.attach_TipAutomobilas), new Action<TipAutomobila>(this.detach_TipAutomobilas));
			this._TipAutomobilas1 = new EntitySet<TipAutomobila>(new Action<TipAutomobila>(this.attach_TipAutomobilas1), new Action<TipAutomobila>(this.detach_TipAutomobilas1));
			this._TipAutomobilas2 = new EntitySet<TipAutomobila>(new Action<TipAutomobila>(this.attach_TipAutomobilas2), new Action<TipAutomobila>(this.detach_TipAutomobilas2));
			this._TipAutomobilas3 = new EntitySet<TipAutomobila>(new Action<TipAutomobila>(this.attach_TipAutomobilas3), new Action<TipAutomobila>(this.detach_TipAutomobilas3));
			this._TipAutomobilas4 = new EntitySet<TipAutomobila>(new Action<TipAutomobila>(this.attach_TipAutomobilas4), new Action<TipAutomobila>(this.detach_TipAutomobilas4));
			this._TipAutomobilas5 = new EntitySet<TipAutomobila>(new Action<TipAutomobila>(this.attach_TipAutomobilas5), new Action<TipAutomobila>(this.detach_TipAutomobilas5));
			this._TipAutomobilas6 = new EntitySet<TipAutomobila>(new Action<TipAutomobila>(this.attach_TipAutomobilas6), new Action<TipAutomobila>(this.detach_TipAutomobilas6));
			this._TipAutomobilas7 = new EntitySet<TipAutomobila>(new Action<TipAutomobila>(this.attach_TipAutomobilas7), new Action<TipAutomobila>(this.detach_TipAutomobilas7));
			this._TipAutomobilas8 = new EntitySet<TipAutomobila>(new Action<TipAutomobila>(this.attach_TipAutomobilas8), new Action<TipAutomobila>(this.detach_TipAutomobilas8));
			this._TipAutomobilas9 = new EntitySet<TipAutomobila>(new Action<TipAutomobila>(this.attach_TipAutomobilas9), new Action<TipAutomobila>(this.detach_TipAutomobilas9));
			this._TipAutomobilas10 = new EntitySet<TipAutomobila>(new Action<TipAutomobila>(this.attach_TipAutomobilas10), new Action<TipAutomobila>(this.detach_TipAutomobilas10));
			this._TipAutomobilas11 = new EntitySet<TipAutomobila>(new Action<TipAutomobila>(this.attach_TipAutomobilas11), new Action<TipAutomobila>(this.detach_TipAutomobilas11));
			this._TipAutomobilas12 = new EntitySet<TipAutomobila>(new Action<TipAutomobila>(this.attach_TipAutomobilas12), new Action<TipAutomobila>(this.detach_TipAutomobilas12));
			this._ModelAutomobilas = new EntitySet<ModelAutomobila>(new Action<ModelAutomobila>(this.attach_ModelAutomobilas), new Action<ModelAutomobila>(this.detach_ModelAutomobilas));
			this._Artikals = new EntitySet<Artikal>(new Action<Artikal>(this.attach_Artikals), new Action<Artikal>(this.detach_Artikals));
			this._Stablos = new EntitySet<Stablo>(new Action<Stablo>(this.attach_Stablos), new Action<Stablo>(this.detach_Stablos));
			this._VezaArtikalKriterijums = new EntitySet<VezaArtikalKriterijum>(new Action<VezaArtikalKriterijum>(this.attach_VezaArtikalKriterijums), new Action<VezaArtikalKriterijum>(this.detach_VezaArtikalKriterijums));
			this._Kriterijums = new EntitySet<Kriterijum>(new Action<Kriterijum>(this.attach_Kriterijums), new Action<Kriterijum>(this.detach_Kriterijums));
			this._Motors = new EntitySet<Motor>(new Action<Motor>(this.attach_Motors), new Action<Motor>(this.detach_Motors));
			this._Motors1 = new EntitySet<Motor>(new Action<Motor>(this.attach_Motors1), new Action<Motor>(this.detach_Motors1));
			this._Motors2 = new EntitySet<Motor>(new Action<Motor>(this.attach_Motors2), new Action<Motor>(this.detach_Motors2));
			this._Motors3 = new EntitySet<Motor>(new Action<Motor>(this.attach_Motors3), new Action<Motor>(this.detach_Motors3));
			this._Motors4 = new EntitySet<Motor>(new Action<Motor>(this.attach_Motors4), new Action<Motor>(this.detach_Motors4));
			this._Motors5 = new EntitySet<Motor>(new Action<Motor>(this.attach_Motors5), new Action<Motor>(this.detach_Motors5));
			this._Motors6 = new EntitySet<Motor>(new Action<Motor>(this.attach_Motors6), new Action<Motor>(this.detach_Motors6));
			this._Motors7 = new EntitySet<Motor>(new Action<Motor>(this.attach_Motors7), new Action<Motor>(this.detach_Motors7));
			this._Motors8 = new EntitySet<Motor>(new Action<Motor>(this.attach_Motors8), new Action<Motor>(this.detach_Motors8));
			this._Motors9 = new EntitySet<Motor>(new Action<Motor>(this.attach_Motors9), new Action<Motor>(this.detach_Motors9));
			this._VezaUgradnjaKriterijums = new EntitySet<VezaUgradnjaKriterijum>(new Action<VezaUgradnjaKriterijum>(this.attach_VezaUgradnjaKriterijums), new Action<VezaUgradnjaKriterijum>(this.detach_VezaUgradnjaKriterijums));
			OnCreated();
		}
		
		[Column(Storage="_Opis_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Opis_ID
		{
			get
			{
				return this._Opis_ID;
			}
			set
			{
				if ((this._Opis_ID != value))
				{
					this.OnOpis_IDChanging(value);
					this.SendPropertyChanging();
					this._Opis_ID = value;
					this.SendPropertyChanged("Opis_ID");
					this.OnOpis_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Opis", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila", Storage="_TipAutomobilas", ThisKey="Opis_ID", OtherKey="Opis_ID")]
		public EntitySet<TipAutomobila> TipAutomobilas
		{
			get
			{
				return this._TipAutomobilas;
			}
			set
			{
				this._TipAutomobilas.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila1", Storage="_TipAutomobilas1", ThisKey="Opis_ID", OtherKey="Menjac_Opis")]
		public EntitySet<TipAutomobila> TipAutomobilas1
		{
			get
			{
				return this._TipAutomobilas1;
			}
			set
			{
				this._TipAutomobilas1.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila2", Storage="_TipAutomobilas2", ThisKey="Opis_ID", OtherKey="PripremaGoriva_Opis")]
		public EntitySet<TipAutomobila> TipAutomobilas2
		{
			get
			{
				return this._TipAutomobilas2;
			}
			set
			{
				this._TipAutomobilas2.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila3", Storage="_TipAutomobilas3", ThisKey="Opis_ID", OtherKey="ABS_Opis")]
		public EntitySet<TipAutomobila> TipAutomobilas3
		{
			get
			{
				return this._TipAutomobilas3;
			}
			set
			{
				this._TipAutomobilas3.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila4", Storage="_TipAutomobilas4", ThisKey="Opis_ID", OtherKey="KocioniSistem_Opis")]
		public EntitySet<TipAutomobila> TipAutomobilas4
		{
			get
			{
				return this._TipAutomobilas4;
			}
			set
			{
				this._TipAutomobilas4.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila5", Storage="_TipAutomobilas5", ThisKey="Opis_ID", OtherKey="NaponAkumulatora_Opis")]
		public EntitySet<TipAutomobila> TipAutomobilas5
		{
			get
			{
				return this._TipAutomobilas5;
			}
			set
			{
				this._TipAutomobilas5.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila6", Storage="_TipAutomobilas6", ThisKey="Opis_ID", OtherKey="ASR_Opis")]
		public EntitySet<TipAutomobila> TipAutomobilas6
		{
			get
			{
				return this._TipAutomobilas6;
			}
			set
			{
				this._TipAutomobilas6.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila7", Storage="_TipAutomobilas7", ThisKey="Opis_ID", OtherKey="VrstaMotora_Opis")]
		public EntitySet<TipAutomobila> TipAutomobilas7
		{
			get
			{
				return this._TipAutomobilas7;
			}
			set
			{
				this._TipAutomobilas7.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila8", Storage="_TipAutomobilas8", ThisKey="Opis_ID", OtherKey="VrstaKocnica_Opis")]
		public EntitySet<TipAutomobila> TipAutomobilas8
		{
			get
			{
				return this._TipAutomobilas8;
			}
			set
			{
				this._TipAutomobilas8.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila9", Storage="_TipAutomobilas9", ThisKey="Opis_ID", OtherKey="VrstaGoriva_Opis")]
		public EntitySet<TipAutomobila> TipAutomobilas9
		{
			get
			{
				return this._TipAutomobilas9;
			}
			set
			{
				this._TipAutomobilas9.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila10", Storage="_TipAutomobilas10", ThisKey="Opis_ID", OtherKey="VrstaKatalizatora_Opis")]
		public EntitySet<TipAutomobila> TipAutomobilas10
		{
			get
			{
				return this._TipAutomobilas10;
			}
			set
			{
				this._TipAutomobilas10.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila11", Storage="_TipAutomobilas11", ThisKey="Opis_ID", OtherKey="VrstaKaroserije_Opis")]
		public EntitySet<TipAutomobila> TipAutomobilas11
		{
			get
			{
				return this._TipAutomobilas11;
			}
			set
			{
				this._TipAutomobilas11.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_TipAutomobila12", Storage="_TipAutomobilas12", ThisKey="Opis_ID", OtherKey="VrstaPogona_Opis")]
		public EntitySet<TipAutomobila> TipAutomobilas12
		{
			get
			{
				return this._TipAutomobilas12;
			}
			set
			{
				this._TipAutomobilas12.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_ModelAutomobila", Storage="_ModelAutomobilas", ThisKey="Opis_ID", OtherKey="Opis_ID")]
		public EntitySet<ModelAutomobila> ModelAutomobilas
		{
			get
			{
				return this._ModelAutomobilas;
			}
			set
			{
				this._ModelAutomobilas.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_Artikal", Storage="_Artikals", ThisKey="Opis_ID", OtherKey="Opis_ID")]
		public EntitySet<Artikal> Artikals
		{
			get
			{
				return this._Artikals;
			}
			set
			{
				this._Artikals.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_Stablo", Storage="_Stablos", ThisKey="Opis_ID", OtherKey="Opis_ID")]
		public EntitySet<Stablo> Stablos
		{
			get
			{
				return this._Stablos;
			}
			set
			{
				this._Stablos.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_VezaArtikalKriterijum", Storage="_VezaArtikalKriterijums", ThisKey="Opis_ID", OtherKey="Opis_ID")]
		public EntitySet<VezaArtikalKriterijum> VezaArtikalKriterijums
		{
			get
			{
				return this._VezaArtikalKriterijums;
			}
			set
			{
				this._VezaArtikalKriterijums.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_Kriterijum", Storage="_Kriterijums", ThisKey="Opis_ID", OtherKey="Opis_ID")]
		public EntitySet<Kriterijum> Kriterijums
		{
			get
			{
				return this._Kriterijums;
			}
			set
			{
				this._Kriterijums.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_Motor", Storage="_Motors", ThisKey="Opis_ID", OtherKey="OblikBlokaMotora_Opis")]
		public EntitySet<Motor> Motors
		{
			get
			{
				return this._Motors;
			}
			set
			{
				this._Motors.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_Motor1", Storage="_Motors1", ThisKey="Opis_ID", OtherKey="VrstaHladjenja_Opis")]
		public EntitySet<Motor> Motors1
		{
			get
			{
				return this._Motors1;
			}
			set
			{
				this._Motors1.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_Motor2", Storage="_Motors2", ThisKey="Opis_ID", OtherKey="VrstaGoriva_Opis")]
		public EntitySet<Motor> Motors2
		{
			get
			{
				return this._Motors2;
			}
			set
			{
				this._Motors2.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_Motor3", Storage="_Motors3", ThisKey="Opis_ID", OtherKey="PripremaGoriva_Opis")]
		public EntitySet<Motor> Motors3
		{
			get
			{
				return this._Motors3;
			}
			set
			{
				this._Motors3.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_Motor4", Storage="_Motors4", ThisKey="Opis_ID", OtherKey="VrstaMotora_Opis")]
		public EntitySet<Motor> Motors4
		{
			get
			{
				return this._Motors4;
			}
			set
			{
				this._Motors4.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_Motor5", Storage="_Motors5", ThisKey="Opis_ID", OtherKey="PunjenjeKompresija_Opis")]
		public EntitySet<Motor> Motors5
		{
			get
			{
				return this._Motors5;
			}
			set
			{
				this._Motors5.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_Motor6", Storage="_Motors6", ThisKey="Opis_ID", OtherKey="StandardIzduvnihGasova_Opis")]
		public EntitySet<Motor> Motors6
		{
			get
			{
				return this._Motors6;
			}
			set
			{
				this._Motors6.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_Motor7", Storage="_Motors7", ThisKey="Opis_ID", OtherKey="OblikGlaveCilindra_Opis")]
		public EntitySet<Motor> Motors7
		{
			get
			{
				return this._Motors7;
			}
			set
			{
				this._Motors7.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_Motor8", Storage="_Motors8", ThisKey="Opis_ID", OtherKey="UpravljanjeMotorom_Opis")]
		public EntitySet<Motor> Motors8
		{
			get
			{
				return this._Motors8;
			}
			set
			{
				this._Motors8.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_Motor9", Storage="_Motors9", ThisKey="Opis_ID", OtherKey="UpravljanjeVentilima_Opis")]
		public EntitySet<Motor> Motors9
		{
			get
			{
				return this._Motors9;
			}
			set
			{
				this._Motors9.Assign(value);
			}
		}
		
		[Association(Name="OpisTabela_VezaUgradnjaKriterijum", Storage="_VezaUgradnjaKriterijums", ThisKey="Opis_ID", OtherKey="Opis_ID")]
		public EntitySet<VezaUgradnjaKriterijum> VezaUgradnjaKriterijums
		{
			get
			{
				return this._VezaUgradnjaKriterijums;
			}
			set
			{
				this._VezaUgradnjaKriterijums.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TipAutomobilas(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabela = this;
		}
		
		private void detach_TipAutomobilas(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabela = null;
		}
		
		private void attach_TipAutomobilas1(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaMenjac_Opis = this;
		}
		
		private void detach_TipAutomobilas1(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaMenjac_Opis = null;
		}
		
		private void attach_TipAutomobilas2(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaPripremaGoriva_Opis = this;
		}
		
		private void detach_TipAutomobilas2(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaPripremaGoriva_Opis = null;
		}
		
		private void attach_TipAutomobilas3(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaABS_Opis = this;
		}
		
		private void detach_TipAutomobilas3(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaABS_Opis = null;
		}
		
		private void attach_TipAutomobilas4(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaKocioniSistem_Opis = this;
		}
		
		private void detach_TipAutomobilas4(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaKocioniSistem_Opis = null;
		}
		
		private void attach_TipAutomobilas5(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaNaponAkumulatora_Opis = this;
		}
		
		private void detach_TipAutomobilas5(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaNaponAkumulatora_Opis = null;
		}
		
		private void attach_TipAutomobilas6(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaASR_Opis = this;
		}
		
		private void detach_TipAutomobilas6(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaASR_Opis = null;
		}
		
		private void attach_TipAutomobilas7(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaMotora_Opis = this;
		}
		
		private void detach_TipAutomobilas7(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaMotora_Opis = null;
		}
		
		private void attach_TipAutomobilas8(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaKocnica_Opis = this;
		}
		
		private void detach_TipAutomobilas8(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaKocnica_Opis = null;
		}
		
		private void attach_TipAutomobilas9(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaGoriva_Opis = this;
		}
		
		private void detach_TipAutomobilas9(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaGoriva_Opis = null;
		}
		
		private void attach_TipAutomobilas10(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaKatalizatora_Opis = this;
		}
		
		private void detach_TipAutomobilas10(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaKatalizatora_Opis = null;
		}
		
		private void attach_TipAutomobilas11(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaKaroserije_Opis = this;
		}
		
		private void detach_TipAutomobilas11(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaKaroserije_Opis = null;
		}
		
		private void attach_TipAutomobilas12(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaPogona_Opis = this;
		}
		
		private void detach_TipAutomobilas12(TipAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaPogona_Opis = null;
		}
		
		private void attach_ModelAutomobilas(ModelAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabela = this;
		}
		
		private void detach_ModelAutomobilas(ModelAutomobila entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabela = null;
		}
		
		private void attach_Artikals(Artikal entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabela = this;
		}
		
		private void detach_Artikals(Artikal entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabela = null;
		}
		
		private void attach_Stablos(Stablo entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabela = this;
		}
		
		private void detach_Stablos(Stablo entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabela = null;
		}
		
		private void attach_VezaArtikalKriterijums(VezaArtikalKriterijum entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabela = this;
		}
		
		private void detach_VezaArtikalKriterijums(VezaArtikalKriterijum entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabela = null;
		}
		
		private void attach_Kriterijums(Kriterijum entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabela = this;
		}
		
		private void detach_Kriterijums(Kriterijum entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabela = null;
		}
		
		private void attach_Motors(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaOblikBlokaMotora_Opis = this;
		}
		
		private void detach_Motors(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaOblikBlokaMotora_Opis = null;
		}
		
		private void attach_Motors1(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaHladjenja_Opis = this;
		}
		
		private void detach_Motors1(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaHladjenja_Opis = null;
		}
		
		private void attach_Motors2(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaGoriva_Opis = this;
		}
		
		private void detach_Motors2(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaGoriva_Opis = null;
		}
		
		private void attach_Motors3(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaPripremaGoriva_Opis = this;
		}
		
		private void detach_Motors3(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaPripremaGoriva_Opis = null;
		}
		
		private void attach_Motors4(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaMotora_Opis = this;
		}
		
		private void detach_Motors4(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaVrstaMotora_Opis = null;
		}
		
		private void attach_Motors5(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaPunjenjeKompresija_Opis = this;
		}
		
		private void detach_Motors5(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaPunjenjeKompresija_Opis = null;
		}
		
		private void attach_Motors6(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaStandardIzduvnihGasova_Opis = this;
		}
		
		private void detach_Motors6(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaStandardIzduvnihGasova_Opis = null;
		}
		
		private void attach_Motors7(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaOblikGlaveCilindra_Opis = this;
		}
		
		private void detach_Motors7(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaOblikGlaveCilindra_Opis = null;
		}
		
		private void attach_Motors8(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaUpravljanjeMotorom_Opis = this;
		}
		
		private void detach_Motors8(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaUpravljanjeMotorom_Opis = null;
		}
		
		private void attach_Motors9(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaUpravljanjeVentilima_Opis = this;
		}
		
		private void detach_Motors9(Motor entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabelaUpravljanjeVentilima_Opis = null;
		}
		
		private void attach_VezaUgradnjaKriterijums(VezaUgradnjaKriterijum entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabela = this;
		}
		
		private void detach_VezaUgradnjaKriterijums(VezaUgradnjaKriterijum entity)
		{
			this.SendPropertyChanging();
			entity.OpisTabela = null;
		}
	}
	
	[Table(Name="dbo.Zaglavlje")]
	public partial class Zaglavlje : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Zaglavlje_ID;
		
		private int _ServisnaKnjizica_ID;
		
		private int _KorisnikPrograma_ID;
		
		private char _Status;
		
		private System.DateTime _VremePromene;
		
		private string _KorisnickiNalog;
		
		private EntityRef<Ponuda> _Ponuda;
		
		private EntityRef<RadniNalog> _RadniNalog;
		
		private EntityRef<ServisnaKnjizica> _ServisnaKnjizica;
		
		private EntityRef<KorisnikPrograma> _KorisnikPrograma;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZaglavlje_IDChanging(int value);
    partial void OnZaglavlje_IDChanged();
    partial void OnServisnaKnjizica_IDChanging(int value);
    partial void OnServisnaKnjizica_IDChanged();
    partial void OnKorisnikPrograma_IDChanging(int value);
    partial void OnKorisnikPrograma_IDChanged();
    partial void OnStatusChanging(char value);
    partial void OnStatusChanged();
    partial void OnVremePromeneChanging(System.DateTime value);
    partial void OnVremePromeneChanged();
    partial void OnKorisnickiNalogChanging(string value);
    partial void OnKorisnickiNalogChanged();
    #endregion
		
		public Zaglavlje()
		{
			this._Ponuda = default(EntityRef<Ponuda>);
			this._RadniNalog = default(EntityRef<RadniNalog>);
			this._ServisnaKnjizica = default(EntityRef<ServisnaKnjizica>);
			this._KorisnikPrograma = default(EntityRef<KorisnikPrograma>);
			OnCreated();
		}
		
		[Column(Storage="_Zaglavlje_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Zaglavlje_ID
		{
			get
			{
				return this._Zaglavlje_ID;
			}
			set
			{
				if ((this._Zaglavlje_ID != value))
				{
					this.OnZaglavlje_IDChanging(value);
					this.SendPropertyChanging();
					this._Zaglavlje_ID = value;
					this.SendPropertyChanged("Zaglavlje_ID");
					this.OnZaglavlje_IDChanged();
				}
			}
		}
		
		[Column(Storage="_ServisnaKnjizica_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ServisnaKnjizica_ID
		{
			get
			{
				return this._ServisnaKnjizica_ID;
			}
			set
			{
				if ((this._ServisnaKnjizica_ID != value))
				{
					if (this._ServisnaKnjizica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServisnaKnjizica_IDChanging(value);
					this.SendPropertyChanging();
					this._ServisnaKnjizica_ID = value;
					this.SendPropertyChanged("ServisnaKnjizica_ID");
					this.OnServisnaKnjizica_IDChanged();
				}
			}
		}
		
		[Column(Storage="_KorisnikPrograma_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int KorisnikPrograma_ID
		{
			get
			{
				return this._KorisnikPrograma_ID;
			}
			set
			{
				if ((this._KorisnikPrograma_ID != value))
				{
					if (this._KorisnikPrograma.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKorisnikPrograma_IDChanging(value);
					this.SendPropertyChanging();
					this._KorisnikPrograma_ID = value;
					this.SendPropertyChanged("KorisnikPrograma_ID");
					this.OnKorisnikPrograma_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Char(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_VremePromene", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime VremePromene
		{
			get
			{
				return this._VremePromene;
			}
			set
			{
				if ((this._VremePromene != value))
				{
					this.OnVremePromeneChanging(value);
					this.SendPropertyChanging();
					this._VremePromene = value;
					this.SendPropertyChanged("VremePromene");
					this.OnVremePromeneChanged();
				}
			}
		}
		
		[Column(Storage="_KorisnickiNalog", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string KorisnickiNalog
		{
			get
			{
				return this._KorisnickiNalog;
			}
			set
			{
				if ((this._KorisnickiNalog != value))
				{
					this.OnKorisnickiNalogChanging(value);
					this.SendPropertyChanging();
					this._KorisnickiNalog = value;
					this.SendPropertyChanged("KorisnickiNalog");
					this.OnKorisnickiNalogChanged();
				}
			}
		}
		
		[Association(Name="Zaglavlje_Ponuda", Storage="_Ponuda", ThisKey="Zaglavlje_ID", OtherKey="Ponuda_ID", IsUnique=true, IsForeignKey=false)]
		public Ponuda Ponuda
		{
			get
			{
				return this._Ponuda.Entity;
			}
			set
			{
				Ponuda previousValue = this._Ponuda.Entity;
				if (((previousValue != value) 
							|| (this._Ponuda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ponuda.Entity = null;
						previousValue.Zaglavlje = null;
					}
					this._Ponuda.Entity = value;
					if ((value != null))
					{
						value.Zaglavlje = this;
					}
					this.SendPropertyChanged("Ponuda");
				}
			}
		}
		
		[Association(Name="Zaglavlje_RadniNalog", Storage="_RadniNalog", ThisKey="Zaglavlje_ID", OtherKey="RadniNalog_ID", IsUnique=true, IsForeignKey=false)]
		public RadniNalog RadniNalog
		{
			get
			{
				return this._RadniNalog.Entity;
			}
			set
			{
				RadniNalog previousValue = this._RadniNalog.Entity;
				if (((previousValue != value) 
							|| (this._RadniNalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RadniNalog.Entity = null;
						previousValue.Zaglavlje = null;
					}
					this._RadniNalog.Entity = value;
					if ((value != null))
					{
						value.Zaglavlje = this;
					}
					this.SendPropertyChanged("RadniNalog");
				}
			}
		}
		
		[Association(Name="ServisnaKnjizica_Zaglavlje", Storage="_ServisnaKnjizica", ThisKey="ServisnaKnjizica_ID", OtherKey="ServisnaKnjizica_ID", IsForeignKey=true)]
		public ServisnaKnjizica ServisnaKnjizica
		{
			get
			{
				return this._ServisnaKnjizica.Entity;
			}
			set
			{
				ServisnaKnjizica previousValue = this._ServisnaKnjizica.Entity;
				if (((previousValue != value) 
							|| (this._ServisnaKnjizica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServisnaKnjizica.Entity = null;
						previousValue.Zaglavljes.Remove(this);
					}
					this._ServisnaKnjizica.Entity = value;
					if ((value != null))
					{
						value.Zaglavljes.Add(this);
						this._ServisnaKnjizica_ID = value.ServisnaKnjizica_ID;
					}
					else
					{
						this._ServisnaKnjizica_ID = default(int);
					}
					this.SendPropertyChanged("ServisnaKnjizica");
				}
			}
		}
		
		[Association(Name="KorisnikPrograma_Zaglavlje", Storage="_KorisnikPrograma", ThisKey="KorisnikPrograma_ID", OtherKey="KorisnikPrograma_ID", IsForeignKey=true)]
		public KorisnikPrograma KorisnikPrograma
		{
			get
			{
				return this._KorisnikPrograma.Entity;
			}
			set
			{
				KorisnikPrograma previousValue = this._KorisnikPrograma.Entity;
				if (((previousValue != value) 
							|| (this._KorisnikPrograma.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KorisnikPrograma.Entity = null;
						previousValue.Zaglavljes.Remove(this);
					}
					this._KorisnikPrograma.Entity = value;
					if ((value != null))
					{
						value.Zaglavljes.Add(this);
						this._KorisnikPrograma_ID = value.KorisnikPrograma_ID;
					}
					else
					{
						this._KorisnikPrograma_ID = default(int);
					}
					this.SendPropertyChanged("KorisnikPrograma");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Ponuda")]
	public partial class Ponuda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Ponuda_ID;
		
		private int _Radnik_ID;
		
		private System.DateTime _Vreme;
		
		private int _NacinZahtevaZaPonudu_ID;
		
		private bool _PreuzimaLicno;
		
		private System.Nullable<System.DateTime> _PreuzeoLicnoU;
		
		private bool _ObavestiTelefonom;
		
		private System.Nullable<System.DateTime> _ObavestenTelefonomU;
		
		private bool _PosaljiSMSObavestenje;
		
		private System.Nullable<System.DateTime> _PoslatoSMSObavestenjeU;
		
		private string _Napomena;
		
		private char _Status;
		
		private System.DateTime _VremePromene;
		
		private string _KorisnickiNalog;
		
		private EntitySet<StavkaUsluga> _StavkaUslugas;
		
		private EntityRef<Radnik> _Radnik;
		
		private EntityRef<Zaglavlje> _Zaglavlje;
		
		private EntityRef<NacinZahtevaZaPonudu> _NacinZahtevaZaPonudu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPonuda_IDChanging(int value);
    partial void OnPonuda_IDChanged();
    partial void OnRadnik_IDChanging(int value);
    partial void OnRadnik_IDChanged();
    partial void OnVremeChanging(System.DateTime value);
    partial void OnVremeChanged();
    partial void OnNacinZahtevaZaPonudu_IDChanging(int value);
    partial void OnNacinZahtevaZaPonudu_IDChanged();
    partial void OnPreuzimaLicnoChanging(bool value);
    partial void OnPreuzimaLicnoChanged();
    partial void OnPreuzeoLicnoUChanging(System.Nullable<System.DateTime> value);
    partial void OnPreuzeoLicnoUChanged();
    partial void OnObavestiTelefonomChanging(bool value);
    partial void OnObavestiTelefonomChanged();
    partial void OnObavestenTelefonomUChanging(System.Nullable<System.DateTime> value);
    partial void OnObavestenTelefonomUChanged();
    partial void OnPosaljiSMSObavestenjeChanging(bool value);
    partial void OnPosaljiSMSObavestenjeChanged();
    partial void OnPoslatoSMSObavestenjeUChanging(System.Nullable<System.DateTime> value);
    partial void OnPoslatoSMSObavestenjeUChanged();
    partial void OnNapomenaChanging(string value);
    partial void OnNapomenaChanged();
    partial void OnStatusChanging(char value);
    partial void OnStatusChanged();
    partial void OnVremePromeneChanging(System.DateTime value);
    partial void OnVremePromeneChanged();
    partial void OnKorisnickiNalogChanging(string value);
    partial void OnKorisnickiNalogChanged();
    #endregion
		
		public Ponuda()
		{
			this._StavkaUslugas = new EntitySet<StavkaUsluga>(new Action<StavkaUsluga>(this.attach_StavkaUslugas), new Action<StavkaUsluga>(this.detach_StavkaUslugas));
			this._Radnik = default(EntityRef<Radnik>);
			this._Zaglavlje = default(EntityRef<Zaglavlje>);
			this._NacinZahtevaZaPonudu = default(EntityRef<NacinZahtevaZaPonudu>);
			OnCreated();
		}
		
		[Column(Storage="_Ponuda_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Ponuda_ID
		{
			get
			{
				return this._Ponuda_ID;
			}
			set
			{
				if ((this._Ponuda_ID != value))
				{
					if (this._Zaglavlje.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPonuda_IDChanging(value);
					this.SendPropertyChanging();
					this._Ponuda_ID = value;
					this.SendPropertyChanged("Ponuda_ID");
					this.OnPonuda_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Radnik_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Radnik_ID
		{
			get
			{
				return this._Radnik_ID;
			}
			set
			{
				if ((this._Radnik_ID != value))
				{
					if (this._Radnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRadnik_IDChanging(value);
					this.SendPropertyChanging();
					this._Radnik_ID = value;
					this.SendPropertyChanged("Radnik_ID");
					this.OnRadnik_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Vreme", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Vreme
		{
			get
			{
				return this._Vreme;
			}
			set
			{
				if ((this._Vreme != value))
				{
					this.OnVremeChanging(value);
					this.SendPropertyChanging();
					this._Vreme = value;
					this.SendPropertyChanged("Vreme");
					this.OnVremeChanged();
				}
			}
		}
		
		[Column(Storage="_NacinZahtevaZaPonudu_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int NacinZahtevaZaPonudu_ID
		{
			get
			{
				return this._NacinZahtevaZaPonudu_ID;
			}
			set
			{
				if ((this._NacinZahtevaZaPonudu_ID != value))
				{
					if (this._NacinZahtevaZaPonudu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNacinZahtevaZaPonudu_IDChanging(value);
					this.SendPropertyChanging();
					this._NacinZahtevaZaPonudu_ID = value;
					this.SendPropertyChanged("NacinZahtevaZaPonudu_ID");
					this.OnNacinZahtevaZaPonudu_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PreuzimaLicno", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PreuzimaLicno
		{
			get
			{
				return this._PreuzimaLicno;
			}
			set
			{
				if ((this._PreuzimaLicno != value))
				{
					this.OnPreuzimaLicnoChanging(value);
					this.SendPropertyChanging();
					this._PreuzimaLicno = value;
					this.SendPropertyChanged("PreuzimaLicno");
					this.OnPreuzimaLicnoChanged();
				}
			}
		}
		
		[Column(Storage="_PreuzeoLicnoU", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> PreuzeoLicnoU
		{
			get
			{
				return this._PreuzeoLicnoU;
			}
			set
			{
				if ((this._PreuzeoLicnoU != value))
				{
					this.OnPreuzeoLicnoUChanging(value);
					this.SendPropertyChanging();
					this._PreuzeoLicnoU = value;
					this.SendPropertyChanged("PreuzeoLicnoU");
					this.OnPreuzeoLicnoUChanged();
				}
			}
		}
		
		[Column(Storage="_ObavestiTelefonom", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ObavestiTelefonom
		{
			get
			{
				return this._ObavestiTelefonom;
			}
			set
			{
				if ((this._ObavestiTelefonom != value))
				{
					this.OnObavestiTelefonomChanging(value);
					this.SendPropertyChanging();
					this._ObavestiTelefonom = value;
					this.SendPropertyChanged("ObavestiTelefonom");
					this.OnObavestiTelefonomChanged();
				}
			}
		}
		
		[Column(Storage="_ObavestenTelefonomU", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ObavestenTelefonomU
		{
			get
			{
				return this._ObavestenTelefonomU;
			}
			set
			{
				if ((this._ObavestenTelefonomU != value))
				{
					this.OnObavestenTelefonomUChanging(value);
					this.SendPropertyChanging();
					this._ObavestenTelefonomU = value;
					this.SendPropertyChanged("ObavestenTelefonomU");
					this.OnObavestenTelefonomUChanged();
				}
			}
		}
		
		[Column(Storage="_PosaljiSMSObavestenje", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PosaljiSMSObavestenje
		{
			get
			{
				return this._PosaljiSMSObavestenje;
			}
			set
			{
				if ((this._PosaljiSMSObavestenje != value))
				{
					this.OnPosaljiSMSObavestenjeChanging(value);
					this.SendPropertyChanging();
					this._PosaljiSMSObavestenje = value;
					this.SendPropertyChanged("PosaljiSMSObavestenje");
					this.OnPosaljiSMSObavestenjeChanged();
				}
			}
		}
		
		[Column(Storage="_PoslatoSMSObavestenjeU", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> PoslatoSMSObavestenjeU
		{
			get
			{
				return this._PoslatoSMSObavestenjeU;
			}
			set
			{
				if ((this._PoslatoSMSObavestenjeU != value))
				{
					this.OnPoslatoSMSObavestenjeUChanging(value);
					this.SendPropertyChanging();
					this._PoslatoSMSObavestenjeU = value;
					this.SendPropertyChanged("PoslatoSMSObavestenjeU");
					this.OnPoslatoSMSObavestenjeUChanged();
				}
			}
		}
		
		[Column(Storage="_Napomena", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string Napomena
		{
			get
			{
				return this._Napomena;
			}
			set
			{
				if ((this._Napomena != value))
				{
					this.OnNapomenaChanging(value);
					this.SendPropertyChanging();
					this._Napomena = value;
					this.SendPropertyChanged("Napomena");
					this.OnNapomenaChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Char(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_VremePromene", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime VremePromene
		{
			get
			{
				return this._VremePromene;
			}
			set
			{
				if ((this._VremePromene != value))
				{
					this.OnVremePromeneChanging(value);
					this.SendPropertyChanging();
					this._VremePromene = value;
					this.SendPropertyChanged("VremePromene");
					this.OnVremePromeneChanged();
				}
			}
		}
		
		[Column(Storage="_KorisnickiNalog", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string KorisnickiNalog
		{
			get
			{
				return this._KorisnickiNalog;
			}
			set
			{
				if ((this._KorisnickiNalog != value))
				{
					this.OnKorisnickiNalogChanging(value);
					this.SendPropertyChanging();
					this._KorisnickiNalog = value;
					this.SendPropertyChanged("KorisnickiNalog");
					this.OnKorisnickiNalogChanged();
				}
			}
		}
		
		[Association(Name="Ponuda_StavkaUsluga", Storage="_StavkaUslugas", ThisKey="Ponuda_ID", OtherKey="Ponuda_ID")]
		public EntitySet<StavkaUsluga> StavkaUslugas
		{
			get
			{
				return this._StavkaUslugas;
			}
			set
			{
				this._StavkaUslugas.Assign(value);
			}
		}
		
		[Association(Name="Radnik_Ponuda", Storage="_Radnik", ThisKey="Radnik_ID", OtherKey="Radnik_ID", IsForeignKey=true)]
		public Radnik Radnik
		{
			get
			{
				return this._Radnik.Entity;
			}
			set
			{
				Radnik previousValue = this._Radnik.Entity;
				if (((previousValue != value) 
							|| (this._Radnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Radnik.Entity = null;
						previousValue.Ponudas.Remove(this);
					}
					this._Radnik.Entity = value;
					if ((value != null))
					{
						value.Ponudas.Add(this);
						this._Radnik_ID = value.Radnik_ID;
					}
					else
					{
						this._Radnik_ID = default(int);
					}
					this.SendPropertyChanged("Radnik");
				}
			}
		}
		
		[Association(Name="Zaglavlje_Ponuda", Storage="_Zaglavlje", ThisKey="Ponuda_ID", OtherKey="Zaglavlje_ID", IsForeignKey=true)]
		public Zaglavlje Zaglavlje
		{
			get
			{
				return this._Zaglavlje.Entity;
			}
			set
			{
				Zaglavlje previousValue = this._Zaglavlje.Entity;
				if (((previousValue != value) 
							|| (this._Zaglavlje.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zaglavlje.Entity = null;
						previousValue.Ponuda = null;
					}
					this._Zaglavlje.Entity = value;
					if ((value != null))
					{
						value.Ponuda = this;
						this._Ponuda_ID = value.Zaglavlje_ID;
					}
					else
					{
						this._Ponuda_ID = default(int);
					}
					this.SendPropertyChanged("Zaglavlje");
				}
			}
		}
		
		[Association(Name="NacinZahtevaZaPonudu_Ponuda", Storage="_NacinZahtevaZaPonudu", ThisKey="NacinZahtevaZaPonudu_ID", OtherKey="NacinZahtevaZaPonudu_ID", IsForeignKey=true)]
		public NacinZahtevaZaPonudu NacinZahtevaZaPonudu
		{
			get
			{
				return this._NacinZahtevaZaPonudu.Entity;
			}
			set
			{
				NacinZahtevaZaPonudu previousValue = this._NacinZahtevaZaPonudu.Entity;
				if (((previousValue != value) 
							|| (this._NacinZahtevaZaPonudu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NacinZahtevaZaPonudu.Entity = null;
						previousValue.Ponudas.Remove(this);
					}
					this._NacinZahtevaZaPonudu.Entity = value;
					if ((value != null))
					{
						value.Ponudas.Add(this);
						this._NacinZahtevaZaPonudu_ID = value.NacinZahtevaZaPonudu_ID;
					}
					else
					{
						this._NacinZahtevaZaPonudu_ID = default(int);
					}
					this.SendPropertyChanged("NacinZahtevaZaPonudu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StavkaUslugas(StavkaUsluga entity)
		{
			this.SendPropertyChanging();
			entity.Ponuda = this;
		}
		
		private void detach_StavkaUslugas(StavkaUsluga entity)
		{
			this.SendPropertyChanging();
			entity.Ponuda = null;
		}
	}
	
	[Table(Name="dbo.RadniNalog")]
	public partial class RadniNalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RadniNalog_ID;
		
		private int _Radnik_ID;
		
		private System.DateTime _Vreme;
		
		private System.Nullable<decimal> _PotrebnoVreme;
		
		private System.Nullable<int> _Kilometraza;
		
		private string _RegistarskiBroj;
		
		private System.Nullable<System.DateTime> _DatumRegistarcije;
		
		private string _Napomena;
		
		private char _Status;
		
		private System.DateTime _VremePromene;
		
		private string _KorisnickiNalog;
		
		private EntitySet<StavkaUsluga> _StavkaUslugas;
		
		private EntityRef<Radnik> _Radnik;
		
		private EntityRef<Zaglavlje> _Zaglavlje;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRadniNalog_IDChanging(int value);
    partial void OnRadniNalog_IDChanged();
    partial void OnRadnik_IDChanging(int value);
    partial void OnRadnik_IDChanged();
    partial void OnVremeChanging(System.DateTime value);
    partial void OnVremeChanged();
    partial void OnPotrebnoVremeChanging(System.Nullable<decimal> value);
    partial void OnPotrebnoVremeChanged();
    partial void OnKilometrazaChanging(System.Nullable<int> value);
    partial void OnKilometrazaChanged();
    partial void OnRegistarskiBrojChanging(string value);
    partial void OnRegistarskiBrojChanged();
    partial void OnDatumRegistarcijeChanging(System.Nullable<System.DateTime> value);
    partial void OnDatumRegistarcijeChanged();
    partial void OnNapomenaChanging(string value);
    partial void OnNapomenaChanged();
    partial void OnStatusChanging(char value);
    partial void OnStatusChanged();
    partial void OnVremePromeneChanging(System.DateTime value);
    partial void OnVremePromeneChanged();
    partial void OnKorisnickiNalogChanging(string value);
    partial void OnKorisnickiNalogChanged();
    #endregion
		
		public RadniNalog()
		{
			this._StavkaUslugas = new EntitySet<StavkaUsluga>(new Action<StavkaUsluga>(this.attach_StavkaUslugas), new Action<StavkaUsluga>(this.detach_StavkaUslugas));
			this._Radnik = default(EntityRef<Radnik>);
			this._Zaglavlje = default(EntityRef<Zaglavlje>);
			OnCreated();
		}
		
		[Column(Storage="_RadniNalog_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RadniNalog_ID
		{
			get
			{
				return this._RadniNalog_ID;
			}
			set
			{
				if ((this._RadniNalog_ID != value))
				{
					if (this._Zaglavlje.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRadniNalog_IDChanging(value);
					this.SendPropertyChanging();
					this._RadniNalog_ID = value;
					this.SendPropertyChanged("RadniNalog_ID");
					this.OnRadniNalog_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Radnik_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Radnik_ID
		{
			get
			{
				return this._Radnik_ID;
			}
			set
			{
				if ((this._Radnik_ID != value))
				{
					if (this._Radnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRadnik_IDChanging(value);
					this.SendPropertyChanging();
					this._Radnik_ID = value;
					this.SendPropertyChanged("Radnik_ID");
					this.OnRadnik_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Vreme", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Vreme
		{
			get
			{
				return this._Vreme;
			}
			set
			{
				if ((this._Vreme != value))
				{
					this.OnVremeChanging(value);
					this.SendPropertyChanging();
					this._Vreme = value;
					this.SendPropertyChanged("Vreme");
					this.OnVremeChanged();
				}
			}
		}
		
		[Column(Storage="_PotrebnoVreme", DbType="Decimal(5,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PotrebnoVreme
		{
			get
			{
				return this._PotrebnoVreme;
			}
			set
			{
				if ((this._PotrebnoVreme != value))
				{
					this.OnPotrebnoVremeChanging(value);
					this.SendPropertyChanging();
					this._PotrebnoVreme = value;
					this.SendPropertyChanged("PotrebnoVreme");
					this.OnPotrebnoVremeChanged();
				}
			}
		}
		
		[Column(Storage="_Kilometraza", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Kilometraza
		{
			get
			{
				return this._Kilometraza;
			}
			set
			{
				if ((this._Kilometraza != value))
				{
					this.OnKilometrazaChanging(value);
					this.SendPropertyChanging();
					this._Kilometraza = value;
					this.SendPropertyChanged("Kilometraza");
					this.OnKilometrazaChanged();
				}
			}
		}
		
		[Column(Storage="_RegistarskiBroj", DbType="NVarChar(15)", UpdateCheck=UpdateCheck.Never)]
		public string RegistarskiBroj
		{
			get
			{
				return this._RegistarskiBroj;
			}
			set
			{
				if ((this._RegistarskiBroj != value))
				{
					this.OnRegistarskiBrojChanging(value);
					this.SendPropertyChanging();
					this._RegistarskiBroj = value;
					this.SendPropertyChanged("RegistarskiBroj");
					this.OnRegistarskiBrojChanged();
				}
			}
		}
		
		[Column(Storage="_DatumRegistarcije", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DatumRegistarcije
		{
			get
			{
				return this._DatumRegistarcije;
			}
			set
			{
				if ((this._DatumRegistarcije != value))
				{
					this.OnDatumRegistarcijeChanging(value);
					this.SendPropertyChanging();
					this._DatumRegistarcije = value;
					this.SendPropertyChanged("DatumRegistarcije");
					this.OnDatumRegistarcijeChanged();
				}
			}
		}
		
		[Column(Storage="_Napomena", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string Napomena
		{
			get
			{
				return this._Napomena;
			}
			set
			{
				if ((this._Napomena != value))
				{
					this.OnNapomenaChanging(value);
					this.SendPropertyChanging();
					this._Napomena = value;
					this.SendPropertyChanged("Napomena");
					this.OnNapomenaChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Char(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_VremePromene", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime VremePromene
		{
			get
			{
				return this._VremePromene;
			}
			set
			{
				if ((this._VremePromene != value))
				{
					this.OnVremePromeneChanging(value);
					this.SendPropertyChanging();
					this._VremePromene = value;
					this.SendPropertyChanged("VremePromene");
					this.OnVremePromeneChanged();
				}
			}
		}
		
		[Column(Storage="_KorisnickiNalog", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string KorisnickiNalog
		{
			get
			{
				return this._KorisnickiNalog;
			}
			set
			{
				if ((this._KorisnickiNalog != value))
				{
					this.OnKorisnickiNalogChanging(value);
					this.SendPropertyChanging();
					this._KorisnickiNalog = value;
					this.SendPropertyChanged("KorisnickiNalog");
					this.OnKorisnickiNalogChanged();
				}
			}
		}
		
		[Association(Name="RadniNalog_StavkaUsluga", Storage="_StavkaUslugas", ThisKey="RadniNalog_ID", OtherKey="RadniNalog_ID")]
		public EntitySet<StavkaUsluga> StavkaUslugas
		{
			get
			{
				return this._StavkaUslugas;
			}
			set
			{
				this._StavkaUslugas.Assign(value);
			}
		}
		
		[Association(Name="Radnik_RadniNalog", Storage="_Radnik", ThisKey="Radnik_ID", OtherKey="Radnik_ID", IsForeignKey=true)]
		public Radnik Radnik
		{
			get
			{
				return this._Radnik.Entity;
			}
			set
			{
				Radnik previousValue = this._Radnik.Entity;
				if (((previousValue != value) 
							|| (this._Radnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Radnik.Entity = null;
						previousValue.RadniNalogs.Remove(this);
					}
					this._Radnik.Entity = value;
					if ((value != null))
					{
						value.RadniNalogs.Add(this);
						this._Radnik_ID = value.Radnik_ID;
					}
					else
					{
						this._Radnik_ID = default(int);
					}
					this.SendPropertyChanged("Radnik");
				}
			}
		}
		
		[Association(Name="Zaglavlje_RadniNalog", Storage="_Zaglavlje", ThisKey="RadniNalog_ID", OtherKey="Zaglavlje_ID", IsForeignKey=true)]
		public Zaglavlje Zaglavlje
		{
			get
			{
				return this._Zaglavlje.Entity;
			}
			set
			{
				Zaglavlje previousValue = this._Zaglavlje.Entity;
				if (((previousValue != value) 
							|| (this._Zaglavlje.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zaglavlje.Entity = null;
						previousValue.RadniNalog = null;
					}
					this._Zaglavlje.Entity = value;
					if ((value != null))
					{
						value.RadniNalog = this;
						this._RadniNalog_ID = value.Zaglavlje_ID;
					}
					else
					{
						this._RadniNalog_ID = default(int);
					}
					this.SendPropertyChanged("Zaglavlje");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StavkaUslugas(StavkaUsluga entity)
		{
			this.SendPropertyChanging();
			entity.RadniNalog = this;
		}
		
		private void detach_StavkaUslugas(StavkaUsluga entity)
		{
			this.SendPropertyChanging();
			entity.RadniNalog = null;
		}
	}
	
	[Table(Name="dbo.StavkaUsluga")]
	public partial class StavkaUsluga : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StavkaUsluga_ID;
		
		private System.Nullable<int> _Ponuda_ID;
		
		private System.Nullable<int> _RadniNalog_ID;
		
		private int _Usluga_ID;
		
		private int _UslugaKolicina;
		
		private decimal _UslugaCenaBezPoreza;
		
		private int _UslugaPoreskaStopa_ID;
		
		private char _Status;
		
		private System.DateTime _VremePromene;
		
		private string _KorisnickiNalog;
		
		private EntitySet<StavkaArtikal> _StavkaArtikals;
		
		private EntityRef<RadniNalogStavkaUsluga> _RadniNalogStavkaUsluga;
		
		private EntitySet<StavkaUslugaRadniRaspored> _StavkaUslugaRadniRasporeds;
		
		private EntityRef<PoreskaStopa> _PoreskaStopa;
		
		private EntityRef<RadniNalog> _RadniNalog;
		
		private EntityRef<Ponuda> _Ponuda;
		
		private EntityRef<Usluga> _Usluga;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStavkaUsluga_IDChanging(int value);
    partial void OnStavkaUsluga_IDChanged();
    partial void OnPonuda_IDChanging(System.Nullable<int> value);
    partial void OnPonuda_IDChanged();
    partial void OnRadniNalog_IDChanging(System.Nullable<int> value);
    partial void OnRadniNalog_IDChanged();
    partial void OnUsluga_IDChanging(int value);
    partial void OnUsluga_IDChanged();
    partial void OnUslugaKolicinaChanging(int value);
    partial void OnUslugaKolicinaChanged();
    partial void OnUslugaCenaBezPorezaChanging(decimal value);
    partial void OnUslugaCenaBezPorezaChanged();
    partial void OnUslugaPoreskaStopa_IDChanging(int value);
    partial void OnUslugaPoreskaStopa_IDChanged();
    partial void OnStatusChanging(char value);
    partial void OnStatusChanged();
    partial void OnVremePromeneChanging(System.DateTime value);
    partial void OnVremePromeneChanged();
    partial void OnKorisnickiNalogChanging(string value);
    partial void OnKorisnickiNalogChanged();
    #endregion
		
		public StavkaUsluga()
		{
			this._StavkaArtikals = new EntitySet<StavkaArtikal>(new Action<StavkaArtikal>(this.attach_StavkaArtikals), new Action<StavkaArtikal>(this.detach_StavkaArtikals));
			this._RadniNalogStavkaUsluga = default(EntityRef<RadniNalogStavkaUsluga>);
			this._StavkaUslugaRadniRasporeds = new EntitySet<StavkaUslugaRadniRaspored>(new Action<StavkaUslugaRadniRaspored>(this.attach_StavkaUslugaRadniRasporeds), new Action<StavkaUslugaRadniRaspored>(this.detach_StavkaUslugaRadniRasporeds));
			this._PoreskaStopa = default(EntityRef<PoreskaStopa>);
			this._RadniNalog = default(EntityRef<RadniNalog>);
			this._Ponuda = default(EntityRef<Ponuda>);
			this._Usluga = default(EntityRef<Usluga>);
			OnCreated();
		}
		
		[Column(Storage="_StavkaUsluga_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StavkaUsluga_ID
		{
			get
			{
				return this._StavkaUsluga_ID;
			}
			set
			{
				if ((this._StavkaUsluga_ID != value))
				{
					this.OnStavkaUsluga_IDChanging(value);
					this.SendPropertyChanging();
					this._StavkaUsluga_ID = value;
					this.SendPropertyChanged("StavkaUsluga_ID");
					this.OnStavkaUsluga_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Ponuda_ID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> Ponuda_ID
		{
			get
			{
				return this._Ponuda_ID;
			}
			set
			{
				if ((this._Ponuda_ID != value))
				{
					if (this._Ponuda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPonuda_IDChanging(value);
					this.SendPropertyChanging();
					this._Ponuda_ID = value;
					this.SendPropertyChanged("Ponuda_ID");
					this.OnPonuda_IDChanged();
				}
			}
		}
		
		[Column(Storage="_RadniNalog_ID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> RadniNalog_ID
		{
			get
			{
				return this._RadniNalog_ID;
			}
			set
			{
				if ((this._RadniNalog_ID != value))
				{
					if (this._RadniNalog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRadniNalog_IDChanging(value);
					this.SendPropertyChanging();
					this._RadniNalog_ID = value;
					this.SendPropertyChanged("RadniNalog_ID");
					this.OnRadniNalog_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Usluga_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Usluga_ID
		{
			get
			{
				return this._Usluga_ID;
			}
			set
			{
				if ((this._Usluga_ID != value))
				{
					if (this._Usluga.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsluga_IDChanging(value);
					this.SendPropertyChanging();
					this._Usluga_ID = value;
					this.SendPropertyChanged("Usluga_ID");
					this.OnUsluga_IDChanged();
				}
			}
		}
		
		[Column(Storage="_UslugaKolicina", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int UslugaKolicina
		{
			get
			{
				return this._UslugaKolicina;
			}
			set
			{
				if ((this._UslugaKolicina != value))
				{
					this.OnUslugaKolicinaChanging(value);
					this.SendPropertyChanging();
					this._UslugaKolicina = value;
					this.SendPropertyChanged("UslugaKolicina");
					this.OnUslugaKolicinaChanged();
				}
			}
		}
		
		[Column(Storage="_UslugaCenaBezPoreza", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal UslugaCenaBezPoreza
		{
			get
			{
				return this._UslugaCenaBezPoreza;
			}
			set
			{
				if ((this._UslugaCenaBezPoreza != value))
				{
					this.OnUslugaCenaBezPorezaChanging(value);
					this.SendPropertyChanging();
					this._UslugaCenaBezPoreza = value;
					this.SendPropertyChanged("UslugaCenaBezPoreza");
					this.OnUslugaCenaBezPorezaChanged();
				}
			}
		}
		
		[Column(Storage="_UslugaPoreskaStopa_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int UslugaPoreskaStopa_ID
		{
			get
			{
				return this._UslugaPoreskaStopa_ID;
			}
			set
			{
				if ((this._UslugaPoreskaStopa_ID != value))
				{
					if (this._PoreskaStopa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUslugaPoreskaStopa_IDChanging(value);
					this.SendPropertyChanging();
					this._UslugaPoreskaStopa_ID = value;
					this.SendPropertyChanged("UslugaPoreskaStopa_ID");
					this.OnUslugaPoreskaStopa_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Char(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_VremePromene", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime VremePromene
		{
			get
			{
				return this._VremePromene;
			}
			set
			{
				if ((this._VremePromene != value))
				{
					this.OnVremePromeneChanging(value);
					this.SendPropertyChanging();
					this._VremePromene = value;
					this.SendPropertyChanged("VremePromene");
					this.OnVremePromeneChanged();
				}
			}
		}
		
		[Column(Storage="_KorisnickiNalog", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string KorisnickiNalog
		{
			get
			{
				return this._KorisnickiNalog;
			}
			set
			{
				if ((this._KorisnickiNalog != value))
				{
					this.OnKorisnickiNalogChanging(value);
					this.SendPropertyChanging();
					this._KorisnickiNalog = value;
					this.SendPropertyChanged("KorisnickiNalog");
					this.OnKorisnickiNalogChanged();
				}
			}
		}
		
		[Association(Name="StavkaUsluga_StavkaArtikal", Storage="_StavkaArtikals", ThisKey="StavkaUsluga_ID", OtherKey="StavkaUsluga_ID")]
		public EntitySet<StavkaArtikal> StavkaArtikals
		{
			get
			{
				return this._StavkaArtikals;
			}
			set
			{
				this._StavkaArtikals.Assign(value);
			}
		}
		
		[Association(Name="StavkaUsluga_RadniNalogStavkaUsluga", Storage="_RadniNalogStavkaUsluga", ThisKey="StavkaUsluga_ID", OtherKey="RadniNalogStavkaUsluga_ID", IsUnique=true, IsForeignKey=false)]
		public RadniNalogStavkaUsluga RadniNalogStavkaUsluga
		{
			get
			{
				return this._RadniNalogStavkaUsluga.Entity;
			}
			set
			{
				RadniNalogStavkaUsluga previousValue = this._RadniNalogStavkaUsluga.Entity;
				if (((previousValue != value) 
							|| (this._RadniNalogStavkaUsluga.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RadniNalogStavkaUsluga.Entity = null;
						previousValue.StavkaUsluga = null;
					}
					this._RadniNalogStavkaUsluga.Entity = value;
					if ((value != null))
					{
						value.StavkaUsluga = this;
					}
					this.SendPropertyChanged("RadniNalogStavkaUsluga");
				}
			}
		}
		
		[Association(Name="StavkaUsluga_StavkaUslugaRadniRaspored", Storage="_StavkaUslugaRadniRasporeds", ThisKey="StavkaUsluga_ID", OtherKey="StavkaUsluga_ID")]
		public EntitySet<StavkaUslugaRadniRaspored> StavkaUslugaRadniRasporeds
		{
			get
			{
				return this._StavkaUslugaRadniRasporeds;
			}
			set
			{
				this._StavkaUslugaRadniRasporeds.Assign(value);
			}
		}
		
		[Association(Name="PoreskaStopa_StavkaUsluga", Storage="_PoreskaStopa", ThisKey="UslugaPoreskaStopa_ID", OtherKey="PoreskaStopa_ID", IsForeignKey=true)]
		public PoreskaStopa UslugaPoreskaStopa
		{
			get
			{
				return this._PoreskaStopa.Entity;
			}
			set
			{
				PoreskaStopa previousValue = this._PoreskaStopa.Entity;
				if (((previousValue != value) 
							|| (this._PoreskaStopa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PoreskaStopa.Entity = null;
						previousValue.StavkaUslugas.Remove(this);
					}
					this._PoreskaStopa.Entity = value;
					if ((value != null))
					{
						value.StavkaUslugas.Add(this);
						this._UslugaPoreskaStopa_ID = value.PoreskaStopa_ID;
					}
					else
					{
						this._UslugaPoreskaStopa_ID = default(int);
					}
					this.SendPropertyChanged("UslugaPoreskaStopa");
				}
			}
		}
		
		[Association(Name="RadniNalog_StavkaUsluga", Storage="_RadniNalog", ThisKey="RadniNalog_ID", OtherKey="RadniNalog_ID", IsForeignKey=true)]
		public RadniNalog RadniNalog
		{
			get
			{
				return this._RadniNalog.Entity;
			}
			set
			{
				RadniNalog previousValue = this._RadniNalog.Entity;
				if (((previousValue != value) 
							|| (this._RadniNalog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RadniNalog.Entity = null;
						previousValue.StavkaUslugas.Remove(this);
					}
					this._RadniNalog.Entity = value;
					if ((value != null))
					{
						value.StavkaUslugas.Add(this);
						this._RadniNalog_ID = value.RadniNalog_ID;
					}
					else
					{
						this._RadniNalog_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RadniNalog");
				}
			}
		}
		
		[Association(Name="Ponuda_StavkaUsluga", Storage="_Ponuda", ThisKey="Ponuda_ID", OtherKey="Ponuda_ID", IsForeignKey=true)]
		public Ponuda Ponuda
		{
			get
			{
				return this._Ponuda.Entity;
			}
			set
			{
				Ponuda previousValue = this._Ponuda.Entity;
				if (((previousValue != value) 
							|| (this._Ponuda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ponuda.Entity = null;
						previousValue.StavkaUslugas.Remove(this);
					}
					this._Ponuda.Entity = value;
					if ((value != null))
					{
						value.StavkaUslugas.Add(this);
						this._Ponuda_ID = value.Ponuda_ID;
					}
					else
					{
						this._Ponuda_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ponuda");
				}
			}
		}
		
		[Association(Name="Usluga_StavkaUsluga", Storage="_Usluga", ThisKey="Usluga_ID", OtherKey="Usluga_ID", IsForeignKey=true)]
		public Usluga Usluga
		{
			get
			{
				return this._Usluga.Entity;
			}
			set
			{
				Usluga previousValue = this._Usluga.Entity;
				if (((previousValue != value) 
							|| (this._Usluga.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usluga.Entity = null;
						previousValue.StavkaUslugas.Remove(this);
					}
					this._Usluga.Entity = value;
					if ((value != null))
					{
						value.StavkaUslugas.Add(this);
						this._Usluga_ID = value.Usluga_ID;
					}
					else
					{
						this._Usluga_ID = default(int);
					}
					this.SendPropertyChanged("Usluga");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StavkaArtikals(StavkaArtikal entity)
		{
			this.SendPropertyChanging();
			entity.StavkaUsluga = this;
		}
		
		private void detach_StavkaArtikals(StavkaArtikal entity)
		{
			this.SendPropertyChanging();
			entity.StavkaUsluga = null;
		}
		
		private void attach_StavkaUslugaRadniRasporeds(StavkaUslugaRadniRaspored entity)
		{
			this.SendPropertyChanging();
			entity.StavkaUsluga = this;
		}
		
		private void detach_StavkaUslugaRadniRasporeds(StavkaUslugaRadniRaspored entity)
		{
			this.SendPropertyChanging();
			entity.StavkaUsluga = null;
		}
	}
	
	[Table(Name="dbo.StavkaArtikal")]
	public partial class StavkaArtikal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StavkaArtikal_ID;
		
		private int _StavkaUsluga_ID;
		
		private int _VezaArtikalDobavljac_ID;
		
		private System.Nullable<decimal> _ArtikalCenaBezPoreza;
		
		private System.Nullable<int> _ArtikalKolicina;
		
		private System.Nullable<int> _ArtikalPoreskaStopa_ID;
		
		private char _Status;
		
		private System.DateTime _VremePromene;
		
		private string _KorisnickiNalog;
		
		private EntityRef<VezaArtikalDobavljac> _VezaArtikalDobavljac;
		
		private EntityRef<PoreskaStopa> _PoreskaStopa;
		
		private EntityRef<StavkaUsluga> _StavkaUsluga;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStavkaArtikal_IDChanging(int value);
    partial void OnStavkaArtikal_IDChanged();
    partial void OnStavkaUsluga_IDChanging(int value);
    partial void OnStavkaUsluga_IDChanged();
    partial void OnVezaArtikalDobavljac_IDChanging(int value);
    partial void OnVezaArtikalDobavljac_IDChanged();
    partial void OnArtikalCenaBezPorezaChanging(System.Nullable<decimal> value);
    partial void OnArtikalCenaBezPorezaChanged();
    partial void OnArtikalKolicinaChanging(System.Nullable<int> value);
    partial void OnArtikalKolicinaChanged();
    partial void OnArtikalPoreskaStopa_IDChanging(System.Nullable<int> value);
    partial void OnArtikalPoreskaStopa_IDChanged();
    partial void OnStatusChanging(char value);
    partial void OnStatusChanged();
    partial void OnVremePromeneChanging(System.DateTime value);
    partial void OnVremePromeneChanged();
    partial void OnKorisnickiNalogChanging(string value);
    partial void OnKorisnickiNalogChanged();
    #endregion
		
		public StavkaArtikal()
		{
			this._VezaArtikalDobavljac = default(EntityRef<VezaArtikalDobavljac>);
			this._PoreskaStopa = default(EntityRef<PoreskaStopa>);
			this._StavkaUsluga = default(EntityRef<StavkaUsluga>);
			OnCreated();
		}
		
		[Column(Storage="_StavkaArtikal_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StavkaArtikal_ID
		{
			get
			{
				return this._StavkaArtikal_ID;
			}
			set
			{
				if ((this._StavkaArtikal_ID != value))
				{
					this.OnStavkaArtikal_IDChanging(value);
					this.SendPropertyChanging();
					this._StavkaArtikal_ID = value;
					this.SendPropertyChanged("StavkaArtikal_ID");
					this.OnStavkaArtikal_IDChanged();
				}
			}
		}
		
		[Column(Storage="_StavkaUsluga_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int StavkaUsluga_ID
		{
			get
			{
				return this._StavkaUsluga_ID;
			}
			set
			{
				if ((this._StavkaUsluga_ID != value))
				{
					if (this._StavkaUsluga.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStavkaUsluga_IDChanging(value);
					this.SendPropertyChanging();
					this._StavkaUsluga_ID = value;
					this.SendPropertyChanged("StavkaUsluga_ID");
					this.OnStavkaUsluga_IDChanged();
				}
			}
		}
		
		[Column(Storage="_VezaArtikalDobavljac_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int VezaArtikalDobavljac_ID
		{
			get
			{
				return this._VezaArtikalDobavljac_ID;
			}
			set
			{
				if ((this._VezaArtikalDobavljac_ID != value))
				{
					if (this._VezaArtikalDobavljac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVezaArtikalDobavljac_IDChanging(value);
					this.SendPropertyChanging();
					this._VezaArtikalDobavljac_ID = value;
					this.SendPropertyChanged("VezaArtikalDobavljac_ID");
					this.OnVezaArtikalDobavljac_IDChanged();
				}
			}
		}
		
		[Column(Storage="_ArtikalCenaBezPoreza", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ArtikalCenaBezPoreza
		{
			get
			{
				return this._ArtikalCenaBezPoreza;
			}
			set
			{
				if ((this._ArtikalCenaBezPoreza != value))
				{
					this.OnArtikalCenaBezPorezaChanging(value);
					this.SendPropertyChanging();
					this._ArtikalCenaBezPoreza = value;
					this.SendPropertyChanged("ArtikalCenaBezPoreza");
					this.OnArtikalCenaBezPorezaChanged();
				}
			}
		}
		
		[Column(Storage="_ArtikalKolicina", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ArtikalKolicina
		{
			get
			{
				return this._ArtikalKolicina;
			}
			set
			{
				if ((this._ArtikalKolicina != value))
				{
					this.OnArtikalKolicinaChanging(value);
					this.SendPropertyChanging();
					this._ArtikalKolicina = value;
					this.SendPropertyChanged("ArtikalKolicina");
					this.OnArtikalKolicinaChanged();
				}
			}
		}
		
		[Column(Storage="_ArtikalPoreskaStopa_ID", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ArtikalPoreskaStopa_ID
		{
			get
			{
				return this._ArtikalPoreskaStopa_ID;
			}
			set
			{
				if ((this._ArtikalPoreskaStopa_ID != value))
				{
					if (this._PoreskaStopa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArtikalPoreskaStopa_IDChanging(value);
					this.SendPropertyChanging();
					this._ArtikalPoreskaStopa_ID = value;
					this.SendPropertyChanged("ArtikalPoreskaStopa_ID");
					this.OnArtikalPoreskaStopa_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Char(1) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public char Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_VremePromene", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime VremePromene
		{
			get
			{
				return this._VremePromene;
			}
			set
			{
				if ((this._VremePromene != value))
				{
					this.OnVremePromeneChanging(value);
					this.SendPropertyChanging();
					this._VremePromene = value;
					this.SendPropertyChanged("VremePromene");
					this.OnVremePromeneChanged();
				}
			}
		}
		
		[Column(Storage="_KorisnickiNalog", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string KorisnickiNalog
		{
			get
			{
				return this._KorisnickiNalog;
			}
			set
			{
				if ((this._KorisnickiNalog != value))
				{
					this.OnKorisnickiNalogChanging(value);
					this.SendPropertyChanging();
					this._KorisnickiNalog = value;
					this.SendPropertyChanged("KorisnickiNalog");
					this.OnKorisnickiNalogChanged();
				}
			}
		}
		
		[Association(Name="VezaArtikalDobavljac_StavkaArtikal", Storage="_VezaArtikalDobavljac", ThisKey="VezaArtikalDobavljac_ID", OtherKey="VezaArtikalDobavljac_ID", IsForeignKey=true)]
		public VezaArtikalDobavljac VezaArtikalDobavljac
		{
			get
			{
				return this._VezaArtikalDobavljac.Entity;
			}
			set
			{
				VezaArtikalDobavljac previousValue = this._VezaArtikalDobavljac.Entity;
				if (((previousValue != value) 
							|| (this._VezaArtikalDobavljac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VezaArtikalDobavljac.Entity = null;
						previousValue.StavkaArtikals.Remove(this);
					}
					this._VezaArtikalDobavljac.Entity = value;
					if ((value != null))
					{
						value.StavkaArtikals.Add(this);
						this._VezaArtikalDobavljac_ID = value.VezaArtikalDobavljac_ID;
					}
					else
					{
						this._VezaArtikalDobavljac_ID = default(int);
					}
					this.SendPropertyChanged("VezaArtikalDobavljac");
				}
			}
		}
		
		[Association(Name="PoreskaStopa_StavkaArtikal", Storage="_PoreskaStopa", ThisKey="ArtikalPoreskaStopa_ID", OtherKey="PoreskaStopa_ID", IsForeignKey=true)]
		public PoreskaStopa ArtikalPoreskaStopa
		{
			get
			{
				return this._PoreskaStopa.Entity;
			}
			set
			{
				PoreskaStopa previousValue = this._PoreskaStopa.Entity;
				if (((previousValue != value) 
							|| (this._PoreskaStopa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PoreskaStopa.Entity = null;
						previousValue.StavkaArtikals.Remove(this);
					}
					this._PoreskaStopa.Entity = value;
					if ((value != null))
					{
						value.StavkaArtikals.Add(this);
						this._ArtikalPoreskaStopa_ID = value.PoreskaStopa_ID;
					}
					else
					{
						this._ArtikalPoreskaStopa_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ArtikalPoreskaStopa");
				}
			}
		}
		
		[Association(Name="StavkaUsluga_StavkaArtikal", Storage="_StavkaUsluga", ThisKey="StavkaUsluga_ID", OtherKey="StavkaUsluga_ID", IsForeignKey=true)]
		public StavkaUsluga StavkaUsluga
		{
			get
			{
				return this._StavkaUsluga.Entity;
			}
			set
			{
				StavkaUsluga previousValue = this._StavkaUsluga.Entity;
				if (((previousValue != value) 
							|| (this._StavkaUsluga.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StavkaUsluga.Entity = null;
						previousValue.StavkaArtikals.Remove(this);
					}
					this._StavkaUsluga.Entity = value;
					if ((value != null))
					{
						value.StavkaArtikals.Add(this);
						this._StavkaUsluga_ID = value.StavkaUsluga_ID;
					}
					else
					{
						this._StavkaUsluga_ID = default(int);
					}
					this.SendPropertyChanged("StavkaUsluga");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RadniNalogStavkaUsluga")]
	public partial class RadniNalogStavkaUsluga : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RadniNalogStavkaUsluga_ID;
		
		private int _RadniNalogStatus_ID;
		
		private decimal _NormaSatiMinuta;
		
		private string _Napomena;
		
		private EntityRef<StavkaUsluga> _StavkaUsluga;
		
		private EntityRef<RadniNalogStatus> _RadniNalogStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRadniNalogStavkaUsluga_IDChanging(int value);
    partial void OnRadniNalogStavkaUsluga_IDChanged();
    partial void OnRadniNalogStatus_IDChanging(int value);
    partial void OnRadniNalogStatus_IDChanged();
    partial void OnNormaSatiMinutaChanging(decimal value);
    partial void OnNormaSatiMinutaChanged();
    partial void OnNapomenaChanging(string value);
    partial void OnNapomenaChanged();
    #endregion
		
		public RadniNalogStavkaUsluga()
		{
			this._StavkaUsluga = default(EntityRef<StavkaUsluga>);
			this._RadniNalogStatus = default(EntityRef<RadniNalogStatus>);
			OnCreated();
		}
		
		[Column(Storage="_RadniNalogStavkaUsluga_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RadniNalogStavkaUsluga_ID
		{
			get
			{
				return this._RadniNalogStavkaUsluga_ID;
			}
			set
			{
				if ((this._RadniNalogStavkaUsluga_ID != value))
				{
					if (this._StavkaUsluga.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRadniNalogStavkaUsluga_IDChanging(value);
					this.SendPropertyChanging();
					this._RadniNalogStavkaUsluga_ID = value;
					this.SendPropertyChanged("RadniNalogStavkaUsluga_ID");
					this.OnRadniNalogStavkaUsluga_IDChanged();
				}
			}
		}
		
		[Column(Storage="_RadniNalogStatus_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int RadniNalogStatus_ID
		{
			get
			{
				return this._RadniNalogStatus_ID;
			}
			set
			{
				if ((this._RadniNalogStatus_ID != value))
				{
					if (this._RadniNalogStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRadniNalogStatus_IDChanging(value);
					this.SendPropertyChanging();
					this._RadniNalogStatus_ID = value;
					this.SendPropertyChanged("RadniNalogStatus_ID");
					this.OnRadniNalogStatus_IDChanged();
				}
			}
		}
		
		[Column(Storage="_NormaSatiMinuta", DbType="Decimal(5,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal NormaSatiMinuta
		{
			get
			{
				return this._NormaSatiMinuta;
			}
			set
			{
				if ((this._NormaSatiMinuta != value))
				{
					this.OnNormaSatiMinutaChanging(value);
					this.SendPropertyChanging();
					this._NormaSatiMinuta = value;
					this.SendPropertyChanged("NormaSatiMinuta");
					this.OnNormaSatiMinutaChanged();
				}
			}
		}
		
		[Column(Storage="_Napomena", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string Napomena
		{
			get
			{
				return this._Napomena;
			}
			set
			{
				if ((this._Napomena != value))
				{
					this.OnNapomenaChanging(value);
					this.SendPropertyChanging();
					this._Napomena = value;
					this.SendPropertyChanged("Napomena");
					this.OnNapomenaChanged();
				}
			}
		}
		
		[Association(Name="StavkaUsluga_RadniNalogStavkaUsluga", Storage="_StavkaUsluga", ThisKey="RadniNalogStavkaUsluga_ID", OtherKey="StavkaUsluga_ID", IsForeignKey=true)]
		public StavkaUsluga StavkaUsluga
		{
			get
			{
				return this._StavkaUsluga.Entity;
			}
			set
			{
				StavkaUsluga previousValue = this._StavkaUsluga.Entity;
				if (((previousValue != value) 
							|| (this._StavkaUsluga.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StavkaUsluga.Entity = null;
						previousValue.RadniNalogStavkaUsluga = null;
					}
					this._StavkaUsluga.Entity = value;
					if ((value != null))
					{
						value.RadniNalogStavkaUsluga = this;
						this._RadniNalogStavkaUsluga_ID = value.StavkaUsluga_ID;
					}
					else
					{
						this._RadniNalogStavkaUsluga_ID = default(int);
					}
					this.SendPropertyChanged("StavkaUsluga");
				}
			}
		}
		
		[Association(Name="RadniNalogStatus_RadniNalogStavkaUsluga", Storage="_RadniNalogStatus", ThisKey="RadniNalogStatus_ID", OtherKey="RadniNalogStatus_ID", IsForeignKey=true)]
		public RadniNalogStatus RadniNalogStatus
		{
			get
			{
				return this._RadniNalogStatus.Entity;
			}
			set
			{
				RadniNalogStatus previousValue = this._RadniNalogStatus.Entity;
				if (((previousValue != value) 
							|| (this._RadniNalogStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RadniNalogStatus.Entity = null;
						previousValue.RadniNalogStavkaUslugas.Remove(this);
					}
					this._RadniNalogStatus.Entity = value;
					if ((value != null))
					{
						value.RadniNalogStavkaUslugas.Add(this);
						this._RadniNalogStatus_ID = value.RadniNalogStatus_ID;
					}
					else
					{
						this._RadniNalogStatus_ID = default(int);
					}
					this.SendPropertyChanged("RadniNalogStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Usluga")]
	public partial class Usluga : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Usluga_ID;
		
		private string _Sifra;
		
		private int _VrstaUsluge_ID;
		
		private int _NosilacGrupe_ID;
		
		private int _Nivo_ID;
		
		private decimal _NormaSatiMinuta;
		
		private decimal _BrojBodova;
		
		private int _Bod_ID;
		
		private int _PoreskaStopa_ID;
		
		private EntitySet<StavkaUsluga> _StavkaUslugas;
		
		private EntityRef<PoreskaStopa> _PoreskaStopa;
		
		private EntityRef<VrstaUsluge> _VrstaUsluge;
		
		private EntityRef<NosilacGrupe> _NosilacGrupe;
		
		private EntityRef<Nivo> _Nivo;
		
		private EntityRef<Bod> _Bod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsluga_IDChanging(int value);
    partial void OnUsluga_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnVrstaUsluge_IDChanging(int value);
    partial void OnVrstaUsluge_IDChanged();
    partial void OnNosilacGrupe_IDChanging(int value);
    partial void OnNosilacGrupe_IDChanged();
    partial void OnNivo_IDChanging(int value);
    partial void OnNivo_IDChanged();
    partial void OnNormaSatiMinutaChanging(decimal value);
    partial void OnNormaSatiMinutaChanged();
    partial void OnBrojBodovaChanging(decimal value);
    partial void OnBrojBodovaChanged();
    partial void OnBod_IDChanging(int value);
    partial void OnBod_IDChanged();
    partial void OnPoreskaStopa_IDChanging(int value);
    partial void OnPoreskaStopa_IDChanged();
    #endregion
		
		public Usluga()
		{
			this._StavkaUslugas = new EntitySet<StavkaUsluga>(new Action<StavkaUsluga>(this.attach_StavkaUslugas), new Action<StavkaUsluga>(this.detach_StavkaUslugas));
			this._PoreskaStopa = default(EntityRef<PoreskaStopa>);
			this._VrstaUsluge = default(EntityRef<VrstaUsluge>);
			this._NosilacGrupe = default(EntityRef<NosilacGrupe>);
			this._Nivo = default(EntityRef<Nivo>);
			this._Bod = default(EntityRef<Bod>);
			OnCreated();
		}
		
		[Column(Storage="_Usluga_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Usluga_ID
		{
			get
			{
				return this._Usluga_ID;
			}
			set
			{
				if ((this._Usluga_ID != value))
				{
					this.OnUsluga_IDChanging(value);
					this.SendPropertyChanging();
					this._Usluga_ID = value;
					this.SendPropertyChanged("Usluga_ID");
					this.OnUsluga_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_VrstaUsluge_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int VrstaUsluge_ID
		{
			get
			{
				return this._VrstaUsluge_ID;
			}
			set
			{
				if ((this._VrstaUsluge_ID != value))
				{
					if (this._VrstaUsluge.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVrstaUsluge_IDChanging(value);
					this.SendPropertyChanging();
					this._VrstaUsluge_ID = value;
					this.SendPropertyChanged("VrstaUsluge_ID");
					this.OnVrstaUsluge_IDChanged();
				}
			}
		}
		
		[Column(Storage="_NosilacGrupe_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int NosilacGrupe_ID
		{
			get
			{
				return this._NosilacGrupe_ID;
			}
			set
			{
				if ((this._NosilacGrupe_ID != value))
				{
					if (this._NosilacGrupe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNosilacGrupe_IDChanging(value);
					this.SendPropertyChanging();
					this._NosilacGrupe_ID = value;
					this.SendPropertyChanged("NosilacGrupe_ID");
					this.OnNosilacGrupe_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Nivo_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Nivo_ID
		{
			get
			{
				return this._Nivo_ID;
			}
			set
			{
				if ((this._Nivo_ID != value))
				{
					if (this._Nivo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNivo_IDChanging(value);
					this.SendPropertyChanging();
					this._Nivo_ID = value;
					this.SendPropertyChanged("Nivo_ID");
					this.OnNivo_IDChanged();
				}
			}
		}
		
		[Column(Storage="_NormaSatiMinuta", DbType="Decimal(5,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal NormaSatiMinuta
		{
			get
			{
				return this._NormaSatiMinuta;
			}
			set
			{
				if ((this._NormaSatiMinuta != value))
				{
					this.OnNormaSatiMinutaChanging(value);
					this.SendPropertyChanging();
					this._NormaSatiMinuta = value;
					this.SendPropertyChanged("NormaSatiMinuta");
					this.OnNormaSatiMinutaChanged();
				}
			}
		}
		
		[Column(Storage="_BrojBodova", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal BrojBodova
		{
			get
			{
				return this._BrojBodova;
			}
			set
			{
				if ((this._BrojBodova != value))
				{
					this.OnBrojBodovaChanging(value);
					this.SendPropertyChanging();
					this._BrojBodova = value;
					this.SendPropertyChanged("BrojBodova");
					this.OnBrojBodovaChanged();
				}
			}
		}
		
		[Column(Storage="_Bod_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Bod_ID
		{
			get
			{
				return this._Bod_ID;
			}
			set
			{
				if ((this._Bod_ID != value))
				{
					if (this._Bod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBod_IDChanging(value);
					this.SendPropertyChanging();
					this._Bod_ID = value;
					this.SendPropertyChanged("Bod_ID");
					this.OnBod_IDChanged();
				}
			}
		}
		
		[Column(Storage="_PoreskaStopa_ID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PoreskaStopa_ID
		{
			get
			{
				return this._PoreskaStopa_ID;
			}
			set
			{
				if ((this._PoreskaStopa_ID != value))
				{
					if (this._PoreskaStopa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPoreskaStopa_IDChanging(value);
					this.SendPropertyChanging();
					this._PoreskaStopa_ID = value;
					this.SendPropertyChanged("PoreskaStopa_ID");
					this.OnPoreskaStopa_IDChanged();
				}
			}
		}
		
		[Association(Name="Usluga_StavkaUsluga", Storage="_StavkaUslugas", ThisKey="Usluga_ID", OtherKey="Usluga_ID")]
		public EntitySet<StavkaUsluga> StavkaUslugas
		{
			get
			{
				return this._StavkaUslugas;
			}
			set
			{
				this._StavkaUslugas.Assign(value);
			}
		}
		
		[Association(Name="PoreskaStopa_Usluga", Storage="_PoreskaStopa", ThisKey="PoreskaStopa_ID", OtherKey="PoreskaStopa_ID", IsForeignKey=true)]
		public PoreskaStopa PoreskaStopa
		{
			get
			{
				return this._PoreskaStopa.Entity;
			}
			set
			{
				PoreskaStopa previousValue = this._PoreskaStopa.Entity;
				if (((previousValue != value) 
							|| (this._PoreskaStopa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PoreskaStopa.Entity = null;
						previousValue.Uslugas.Remove(this);
					}
					this._PoreskaStopa.Entity = value;
					if ((value != null))
					{
						value.Uslugas.Add(this);
						this._PoreskaStopa_ID = value.PoreskaStopa_ID;
					}
					else
					{
						this._PoreskaStopa_ID = default(int);
					}
					this.SendPropertyChanged("PoreskaStopa");
				}
			}
		}
		
		[Association(Name="VrstaUsluge_Usluga", Storage="_VrstaUsluge", ThisKey="VrstaUsluge_ID", OtherKey="VrstaUsluge_ID", IsForeignKey=true)]
		public VrstaUsluge VrstaUsluge
		{
			get
			{
				return this._VrstaUsluge.Entity;
			}
			set
			{
				VrstaUsluge previousValue = this._VrstaUsluge.Entity;
				if (((previousValue != value) 
							|| (this._VrstaUsluge.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VrstaUsluge.Entity = null;
						previousValue.Uslugas.Remove(this);
					}
					this._VrstaUsluge.Entity = value;
					if ((value != null))
					{
						value.Uslugas.Add(this);
						this._VrstaUsluge_ID = value.VrstaUsluge_ID;
					}
					else
					{
						this._VrstaUsluge_ID = default(int);
					}
					this.SendPropertyChanged("VrstaUsluge");
				}
			}
		}
		
		[Association(Name="NosilacGrupe_Usluga", Storage="_NosilacGrupe", ThisKey="NosilacGrupe_ID", OtherKey="NosilacGrupe_ID", IsForeignKey=true)]
		public NosilacGrupe NosilacGrupe
		{
			get
			{
				return this._NosilacGrupe.Entity;
			}
			set
			{
				NosilacGrupe previousValue = this._NosilacGrupe.Entity;
				if (((previousValue != value) 
							|| (this._NosilacGrupe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NosilacGrupe.Entity = null;
						previousValue.Uslugas.Remove(this);
					}
					this._NosilacGrupe.Entity = value;
					if ((value != null))
					{
						value.Uslugas.Add(this);
						this._NosilacGrupe_ID = value.NosilacGrupe_ID;
					}
					else
					{
						this._NosilacGrupe_ID = default(int);
					}
					this.SendPropertyChanged("NosilacGrupe");
				}
			}
		}
		
		[Association(Name="Nivo_Usluga", Storage="_Nivo", ThisKey="Nivo_ID", OtherKey="Nivo_ID", IsForeignKey=true)]
		public Nivo Nivo
		{
			get
			{
				return this._Nivo.Entity;
			}
			set
			{
				Nivo previousValue = this._Nivo.Entity;
				if (((previousValue != value) 
							|| (this._Nivo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nivo.Entity = null;
						previousValue.Uslugas.Remove(this);
					}
					this._Nivo.Entity = value;
					if ((value != null))
					{
						value.Uslugas.Add(this);
						this._Nivo_ID = value.Nivo_ID;
					}
					else
					{
						this._Nivo_ID = default(int);
					}
					this.SendPropertyChanged("Nivo");
				}
			}
		}
		
		[Association(Name="Bod_Usluga", Storage="_Bod", ThisKey="Bod_ID", OtherKey="Bod_ID", IsForeignKey=true)]
		public Bod Bod
		{
			get
			{
				return this._Bod.Entity;
			}
			set
			{
				Bod previousValue = this._Bod.Entity;
				if (((previousValue != value) 
							|| (this._Bod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bod.Entity = null;
						previousValue.Uslugas.Remove(this);
					}
					this._Bod.Entity = value;
					if ((value != null))
					{
						value.Uslugas.Add(this);
						this._Bod_ID = value.Bod_ID;
					}
					else
					{
						this._Bod_ID = default(int);
					}
					this.SendPropertyChanged("Bod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StavkaUslugas(StavkaUsluga entity)
		{
			this.SendPropertyChanging();
			entity.Usluga = this;
		}
		
		private void detach_StavkaUslugas(StavkaUsluga entity)
		{
			this.SendPropertyChanging();
			entity.Usluga = null;
		}
	}
	
	[Table(Name="dbo.VrstaUsluge")]
	public partial class VrstaUsluge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VrstaUsluge_ID;
		
		private string _Sifra;
		
		private string _Naziv;
		
		private EntitySet<Usluga> _Uslugas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVrstaUsluge_IDChanging(int value);
    partial void OnVrstaUsluge_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    #endregion
		
		public VrstaUsluge()
		{
			this._Uslugas = new EntitySet<Usluga>(new Action<Usluga>(this.attach_Uslugas), new Action<Usluga>(this.detach_Uslugas));
			OnCreated();
		}
		
		[Column(Storage="_VrstaUsluge_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VrstaUsluge_ID
		{
			get
			{
				return this._VrstaUsluge_ID;
			}
			set
			{
				if ((this._VrstaUsluge_ID != value))
				{
					this.OnVrstaUsluge_IDChanging(value);
					this.SendPropertyChanging();
					this._VrstaUsluge_ID = value;
					this.SendPropertyChanged("VrstaUsluge_ID");
					this.OnVrstaUsluge_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[Association(Name="VrstaUsluge_Usluga", Storage="_Uslugas", ThisKey="VrstaUsluge_ID", OtherKey="VrstaUsluge_ID")]
		public EntitySet<Usluga> Uslugas
		{
			get
			{
				return this._Uslugas;
			}
			set
			{
				this._Uslugas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Uslugas(Usluga entity)
		{
			this.SendPropertyChanging();
			entity.VrstaUsluge = this;
		}
		
		private void detach_Uslugas(Usluga entity)
		{
			this.SendPropertyChanging();
			entity.VrstaUsluge = null;
		}
	}
	
	[Table(Name="dbo.RadnoMesto")]
	public partial class RadnoMesto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RadnoMesto_ID;
		
		private string _Sifra;
		
		private string _Naziv;
		
		private EntitySet<StavkaUslugaRadniRaspored> _StavkaUslugaRadniRasporeds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRadnoMesto_IDChanging(int value);
    partial void OnRadnoMesto_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    #endregion
		
		public RadnoMesto()
		{
			this._StavkaUslugaRadniRasporeds = new EntitySet<StavkaUslugaRadniRaspored>(new Action<StavkaUslugaRadniRaspored>(this.attach_StavkaUslugaRadniRasporeds), new Action<StavkaUslugaRadniRaspored>(this.detach_StavkaUslugaRadniRasporeds));
			OnCreated();
		}
		
		[Column(Storage="_RadnoMesto_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RadnoMesto_ID
		{
			get
			{
				return this._RadnoMesto_ID;
			}
			set
			{
				if ((this._RadnoMesto_ID != value))
				{
					this.OnRadnoMesto_IDChanging(value);
					this.SendPropertyChanging();
					this._RadnoMesto_ID = value;
					this.SendPropertyChanged("RadnoMesto_ID");
					this.OnRadnoMesto_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[Association(Name="RadnoMesto_StavkaUslugaRadniRaspored", Storage="_StavkaUslugaRadniRasporeds", ThisKey="RadnoMesto_ID", OtherKey="RadnoMesto_ID")]
		public EntitySet<StavkaUslugaRadniRaspored> StavkaUslugaRadniRasporeds
		{
			get
			{
				return this._StavkaUslugaRadniRasporeds;
			}
			set
			{
				this._StavkaUslugaRadniRasporeds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StavkaUslugaRadniRasporeds(StavkaUslugaRadniRaspored entity)
		{
			this.SendPropertyChanging();
			entity.RadnoMesto = this;
		}
		
		private void detach_StavkaUslugaRadniRasporeds(StavkaUslugaRadniRaspored entity)
		{
			this.SendPropertyChanging();
			entity.RadnoMesto = null;
		}
	}
	
	[Table(Name="dbo.RadniNalogStatus")]
	public partial class RadniNalogStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RadniNalogStatus_ID;
		
		private string _Sifra;
		
		private string _Naziv;
		
		private EntitySet<RadniNalogStavkaUsluga> _RadniNalogStavkaUslugas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRadniNalogStatus_IDChanging(int value);
    partial void OnRadniNalogStatus_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    #endregion
		
		public RadniNalogStatus()
		{
			this._RadniNalogStavkaUslugas = new EntitySet<RadniNalogStavkaUsluga>(new Action<RadniNalogStavkaUsluga>(this.attach_RadniNalogStavkaUslugas), new Action<RadniNalogStavkaUsluga>(this.detach_RadniNalogStavkaUslugas));
			OnCreated();
		}
		
		[Column(Storage="_RadniNalogStatus_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RadniNalogStatus_ID
		{
			get
			{
				return this._RadniNalogStatus_ID;
			}
			set
			{
				if ((this._RadniNalogStatus_ID != value))
				{
					this.OnRadniNalogStatus_IDChanging(value);
					this.SendPropertyChanging();
					this._RadniNalogStatus_ID = value;
					this.SendPropertyChanged("RadniNalogStatus_ID");
					this.OnRadniNalogStatus_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[Association(Name="RadniNalogStatus_RadniNalogStavkaUsluga", Storage="_RadniNalogStavkaUslugas", ThisKey="RadniNalogStatus_ID", OtherKey="RadniNalogStatus_ID")]
		public EntitySet<RadniNalogStavkaUsluga> RadniNalogStavkaUslugas
		{
			get
			{
				return this._RadniNalogStavkaUslugas;
			}
			set
			{
				this._RadniNalogStavkaUslugas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RadniNalogStavkaUslugas(RadniNalogStavkaUsluga entity)
		{
			this.SendPropertyChanging();
			entity.RadniNalogStatus = this;
		}
		
		private void detach_RadniNalogStavkaUslugas(RadniNalogStavkaUsluga entity)
		{
			this.SendPropertyChanging();
			entity.RadniNalogStatus = null;
		}
	}
	
	[Table(Name="dbo.NosilacGrupe")]
	public partial class NosilacGrupe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NosilacGrupe_ID;
		
		private string _Sifra;
		
		private string _Naziv;
		
		private EntitySet<Usluga> _Uslugas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNosilacGrupe_IDChanging(int value);
    partial void OnNosilacGrupe_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    #endregion
		
		public NosilacGrupe()
		{
			this._Uslugas = new EntitySet<Usluga>(new Action<Usluga>(this.attach_Uslugas), new Action<Usluga>(this.detach_Uslugas));
			OnCreated();
		}
		
		[Column(Storage="_NosilacGrupe_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NosilacGrupe_ID
		{
			get
			{
				return this._NosilacGrupe_ID;
			}
			set
			{
				if ((this._NosilacGrupe_ID != value))
				{
					this.OnNosilacGrupe_IDChanging(value);
					this.SendPropertyChanging();
					this._NosilacGrupe_ID = value;
					this.SendPropertyChanged("NosilacGrupe_ID");
					this.OnNosilacGrupe_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[Association(Name="NosilacGrupe_Usluga", Storage="_Uslugas", ThisKey="NosilacGrupe_ID", OtherKey="NosilacGrupe_ID")]
		public EntitySet<Usluga> Uslugas
		{
			get
			{
				return this._Uslugas;
			}
			set
			{
				this._Uslugas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Uslugas(Usluga entity)
		{
			this.SendPropertyChanging();
			entity.NosilacGrupe = this;
		}
		
		private void detach_Uslugas(Usluga entity)
		{
			this.SendPropertyChanging();
			entity.NosilacGrupe = null;
		}
	}
	
	[Table(Name="dbo.Nivo")]
	public partial class Nivo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nivo_ID;
		
		private string _Sifra;
		
		private string _Naziv;
		
		private EntitySet<Usluga> _Uslugas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNivo_IDChanging(int value);
    partial void OnNivo_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    #endregion
		
		public Nivo()
		{
			this._Uslugas = new EntitySet<Usluga>(new Action<Usluga>(this.attach_Uslugas), new Action<Usluga>(this.detach_Uslugas));
			OnCreated();
		}
		
		[Column(Storage="_Nivo_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Nivo_ID
		{
			get
			{
				return this._Nivo_ID;
			}
			set
			{
				if ((this._Nivo_ID != value))
				{
					this.OnNivo_IDChanging(value);
					this.SendPropertyChanging();
					this._Nivo_ID = value;
					this.SendPropertyChanged("Nivo_ID");
					this.OnNivo_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[Association(Name="Nivo_Usluga", Storage="_Uslugas", ThisKey="Nivo_ID", OtherKey="Nivo_ID")]
		public EntitySet<Usluga> Uslugas
		{
			get
			{
				return this._Uslugas;
			}
			set
			{
				this._Uslugas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Uslugas(Usluga entity)
		{
			this.SendPropertyChanging();
			entity.Nivo = this;
		}
		
		private void detach_Uslugas(Usluga entity)
		{
			this.SendPropertyChanging();
			entity.Nivo = null;
		}
	}
	
	[Table(Name="dbo.NacinZahtevaZaPonudu")]
	public partial class NacinZahtevaZaPonudu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NacinZahtevaZaPonudu_ID;
		
		private string _Sifra;
		
		private string _Naziv;
		
		private EntitySet<Ponuda> _Ponudas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNacinZahtevaZaPonudu_IDChanging(int value);
    partial void OnNacinZahtevaZaPonudu_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    #endregion
		
		public NacinZahtevaZaPonudu()
		{
			this._Ponudas = new EntitySet<Ponuda>(new Action<Ponuda>(this.attach_Ponudas), new Action<Ponuda>(this.detach_Ponudas));
			OnCreated();
		}
		
		[Column(Storage="_NacinZahtevaZaPonudu_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NacinZahtevaZaPonudu_ID
		{
			get
			{
				return this._NacinZahtevaZaPonudu_ID;
			}
			set
			{
				if ((this._NacinZahtevaZaPonudu_ID != value))
				{
					this.OnNacinZahtevaZaPonudu_IDChanging(value);
					this.SendPropertyChanging();
					this._NacinZahtevaZaPonudu_ID = value;
					this.SendPropertyChanged("NacinZahtevaZaPonudu_ID");
					this.OnNacinZahtevaZaPonudu_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[Association(Name="NacinZahtevaZaPonudu_Ponuda", Storage="_Ponudas", ThisKey="NacinZahtevaZaPonudu_ID", OtherKey="NacinZahtevaZaPonudu_ID")]
		public EntitySet<Ponuda> Ponudas
		{
			get
			{
				return this._Ponudas;
			}
			set
			{
				this._Ponudas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ponudas(Ponuda entity)
		{
			this.SendPropertyChanging();
			entity.NacinZahtevaZaPonudu = this;
		}
		
		private void detach_Ponudas(Ponuda entity)
		{
			this.SendPropertyChanging();
			entity.NacinZahtevaZaPonudu = null;
		}
	}
	
	[Table(Name="dbo.Bod")]
	public partial class Bod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Bod_ID;
		
		private string _Sifra;
		
		private string _Naziv;
		
		private decimal _Vrednost;
		
		private EntitySet<Usluga> _Uslugas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBod_IDChanging(int value);
    partial void OnBod_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    partial void OnVrednostChanging(decimal value);
    partial void OnVrednostChanged();
    #endregion
		
		public Bod()
		{
			this._Uslugas = new EntitySet<Usluga>(new Action<Usluga>(this.attach_Uslugas), new Action<Usluga>(this.detach_Uslugas));
			OnCreated();
		}
		
		[Column(Storage="_Bod_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Bod_ID
		{
			get
			{
				return this._Bod_ID;
			}
			set
			{
				if ((this._Bod_ID != value))
				{
					this.OnBod_IDChanging(value);
					this.SendPropertyChanging();
					this._Bod_ID = value;
					this.SendPropertyChanged("Bod_ID");
					this.OnBod_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[Column(Storage="_Vrednost", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Vrednost
		{
			get
			{
				return this._Vrednost;
			}
			set
			{
				if ((this._Vrednost != value))
				{
					this.OnVrednostChanging(value);
					this.SendPropertyChanging();
					this._Vrednost = value;
					this.SendPropertyChanged("Vrednost");
					this.OnVrednostChanged();
				}
			}
		}
		
		[Association(Name="Bod_Usluga", Storage="_Uslugas", ThisKey="Bod_ID", OtherKey="Bod_ID")]
		public EntitySet<Usluga> Uslugas
		{
			get
			{
				return this._Uslugas;
			}
			set
			{
				this._Uslugas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Uslugas(Usluga entity)
		{
			this.SendPropertyChanging();
			entity.Bod = this;
		}
		
		private void detach_Uslugas(Usluga entity)
		{
			this.SendPropertyChanging();
			entity.Bod = null;
		}
	}
	
	[Table(Name="dbo.RadnoVreme")]
	public partial class RadnoVreme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RadnoVreme_ID;
		
		private string _Sifra;
		
		private System.TimeSpan _PocinjeOd;
		
		private System.TimeSpan _TrajeDo;
		
		private EntitySet<StavkaUslugaRadniRaspored> _StavkaUslugaRadniRasporeds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRadnoVreme_IDChanging(int value);
    partial void OnRadnoVreme_IDChanged();
    partial void OnSifraChanging(string value);
    partial void OnSifraChanged();
    partial void OnPocinjeOdChanging(System.TimeSpan value);
    partial void OnPocinjeOdChanged();
    partial void OnTrajeDoChanging(System.TimeSpan value);
    partial void OnTrajeDoChanged();
    #endregion
		
		public RadnoVreme()
		{
			this._StavkaUslugaRadniRasporeds = new EntitySet<StavkaUslugaRadniRaspored>(new Action<StavkaUslugaRadniRaspored>(this.attach_StavkaUslugaRadniRasporeds), new Action<StavkaUslugaRadniRaspored>(this.detach_StavkaUslugaRadniRasporeds));
			OnCreated();
		}
		
		[Column(Storage="_RadnoVreme_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RadnoVreme_ID
		{
			get
			{
				return this._RadnoVreme_ID;
			}
			set
			{
				if ((this._RadnoVreme_ID != value))
				{
					this.OnRadnoVreme_IDChanging(value);
					this.SendPropertyChanging();
					this._RadnoVreme_ID = value;
					this.SendPropertyChanged("RadnoVreme_ID");
					this.OnRadnoVreme_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Sifra", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sifra
		{
			get
			{
				return this._Sifra;
			}
			set
			{
				if ((this._Sifra != value))
				{
					this.OnSifraChanging(value);
					this.SendPropertyChanging();
					this._Sifra = value;
					this.SendPropertyChanged("Sifra");
					this.OnSifraChanged();
				}
			}
		}
		
		[Column(Storage="_PocinjeOd", DbType="Time NOT NULL")]
		public System.TimeSpan PocinjeOd
		{
			get
			{
				return this._PocinjeOd;
			}
			set
			{
				if ((this._PocinjeOd != value))
				{
					this.OnPocinjeOdChanging(value);
					this.SendPropertyChanging();
					this._PocinjeOd = value;
					this.SendPropertyChanged("PocinjeOd");
					this.OnPocinjeOdChanged();
				}
			}
		}
		
		[Column(Storage="_TrajeDo", DbType="Time NOT NULL")]
		public System.TimeSpan TrajeDo
		{
			get
			{
				return this._TrajeDo;
			}
			set
			{
				if ((this._TrajeDo != value))
				{
					this.OnTrajeDoChanging(value);
					this.SendPropertyChanging();
					this._TrajeDo = value;
					this.SendPropertyChanged("TrajeDo");
					this.OnTrajeDoChanged();
				}
			}
		}
		
		[Association(Name="RadnoVreme_StavkaUslugaRadniRaspored", Storage="_StavkaUslugaRadniRasporeds", ThisKey="RadnoVreme_ID", OtherKey="RadnoVreme_ID")]
		public EntitySet<StavkaUslugaRadniRaspored> StavkaUslugaRadniRasporeds
		{
			get
			{
				return this._StavkaUslugaRadniRasporeds;
			}
			set
			{
				this._StavkaUslugaRadniRasporeds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StavkaUslugaRadniRasporeds(StavkaUslugaRadniRaspored entity)
		{
			this.SendPropertyChanging();
			entity.RadnoVreme = this;
		}
		
		private void detach_StavkaUslugaRadniRasporeds(StavkaUslugaRadniRaspored entity)
		{
			this.SendPropertyChanging();
			entity.RadnoVreme = null;
		}
	}
	
	[Table(Name="dbo.StavkaUslugaRadniRaspored")]
	public partial class StavkaUslugaRadniRaspored : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StavkaUslugaRadniRaspored_ID;
		
		private int _StavkaUsluga_ID;
		
		private int _Radnik_ID;
		
		private int _RadnoMesto_ID;
		
		private int _RadnoVreme_ID;
		
		private System.DateTime _Datum;
		
		private char _Status;
		
		private System.DateTime _VremePromene;
		
		private string _KorisnickiNalog;
		
		private EntityRef<StavkaUsluga> _StavkaUsluga;
		
		private EntityRef<Radnik> _Radnik;
		
		private EntityRef<RadnoMesto> _RadnoMesto;
		
		private EntityRef<RadnoVreme> _RadnoVreme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStavkaUslugaRadniRaspored_IDChanging(int value);
    partial void OnStavkaUslugaRadniRaspored_IDChanged();
    partial void OnStavkaUsluga_IDChanging(int value);
    partial void OnStavkaUsluga_IDChanged();
    partial void OnRadnik_IDChanging(int value);
    partial void OnRadnik_IDChanged();
    partial void OnRadnoMesto_IDChanging(int value);
    partial void OnRadnoMesto_IDChanged();
    partial void OnRadnoVreme_IDChanging(int value);
    partial void OnRadnoVreme_IDChanged();
    partial void OnDatumChanging(System.DateTime value);
    partial void OnDatumChanged();
    partial void OnStatusChanging(char value);
    partial void OnStatusChanged();
    partial void OnVremePromeneChanging(System.DateTime value);
    partial void OnVremePromeneChanged();
    partial void OnKorisnickiNalogChanging(string value);
    partial void OnKorisnickiNalogChanged();
    #endregion
		
		public StavkaUslugaRadniRaspored()
		{
			this._StavkaUsluga = default(EntityRef<StavkaUsluga>);
			this._Radnik = default(EntityRef<Radnik>);
			this._RadnoMesto = default(EntityRef<RadnoMesto>);
			this._RadnoVreme = default(EntityRef<RadnoVreme>);
			OnCreated();
		}
		
		[Column(Storage="_StavkaUslugaRadniRaspored_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StavkaUslugaRadniRaspored_ID
		{
			get
			{
				return this._StavkaUslugaRadniRaspored_ID;
			}
			set
			{
				if ((this._StavkaUslugaRadniRaspored_ID != value))
				{
					this.OnStavkaUslugaRadniRaspored_IDChanging(value);
					this.SendPropertyChanging();
					this._StavkaUslugaRadniRaspored_ID = value;
					this.SendPropertyChanged("StavkaUslugaRadniRaspored_ID");
					this.OnStavkaUslugaRadniRaspored_IDChanged();
				}
			}
		}
		
		[Column(Storage="_StavkaUsluga_ID", DbType="Int NOT NULL")]
		public int StavkaUsluga_ID
		{
			get
			{
				return this._StavkaUsluga_ID;
			}
			set
			{
				if ((this._StavkaUsluga_ID != value))
				{
					if (this._StavkaUsluga.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStavkaUsluga_IDChanging(value);
					this.SendPropertyChanging();
					this._StavkaUsluga_ID = value;
					this.SendPropertyChanged("StavkaUsluga_ID");
					this.OnStavkaUsluga_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Radnik_ID", DbType="Int NOT NULL")]
		public int Radnik_ID
		{
			get
			{
				return this._Radnik_ID;
			}
			set
			{
				if ((this._Radnik_ID != value))
				{
					if (this._Radnik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRadnik_IDChanging(value);
					this.SendPropertyChanging();
					this._Radnik_ID = value;
					this.SendPropertyChanged("Radnik_ID");
					this.OnRadnik_IDChanged();
				}
			}
		}
		
		[Column(Storage="_RadnoMesto_ID", DbType="Int NOT NULL")]
		public int RadnoMesto_ID
		{
			get
			{
				return this._RadnoMesto_ID;
			}
			set
			{
				if ((this._RadnoMesto_ID != value))
				{
					if (this._RadnoMesto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRadnoMesto_IDChanging(value);
					this.SendPropertyChanging();
					this._RadnoMesto_ID = value;
					this.SendPropertyChanged("RadnoMesto_ID");
					this.OnRadnoMesto_IDChanged();
				}
			}
		}
		
		[Column(Storage="_RadnoVreme_ID", DbType="Int NOT NULL")]
		public int RadnoVreme_ID
		{
			get
			{
				return this._RadnoVreme_ID;
			}
			set
			{
				if ((this._RadnoVreme_ID != value))
				{
					if (this._RadnoVreme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRadnoVreme_IDChanging(value);
					this.SendPropertyChanging();
					this._RadnoVreme_ID = value;
					this.SendPropertyChanged("RadnoVreme_ID");
					this.OnRadnoVreme_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Datum", DbType="Date NOT NULL")]
		public System.DateTime Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Char(1) NOT NULL")]
		public char Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_VremePromene", DbType="DateTime NOT NULL")]
		public System.DateTime VremePromene
		{
			get
			{
				return this._VremePromene;
			}
			set
			{
				if ((this._VremePromene != value))
				{
					this.OnVremePromeneChanging(value);
					this.SendPropertyChanging();
					this._VremePromene = value;
					this.SendPropertyChanged("VremePromene");
					this.OnVremePromeneChanged();
				}
			}
		}
		
		[Column(Storage="_KorisnickiNalog", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string KorisnickiNalog
		{
			get
			{
				return this._KorisnickiNalog;
			}
			set
			{
				if ((this._KorisnickiNalog != value))
				{
					this.OnKorisnickiNalogChanging(value);
					this.SendPropertyChanging();
					this._KorisnickiNalog = value;
					this.SendPropertyChanged("KorisnickiNalog");
					this.OnKorisnickiNalogChanged();
				}
			}
		}
		
		[Association(Name="StavkaUsluga_StavkaUslugaRadniRaspored", Storage="_StavkaUsluga", ThisKey="StavkaUsluga_ID", OtherKey="StavkaUsluga_ID", IsForeignKey=true)]
		public StavkaUsluga StavkaUsluga
		{
			get
			{
				return this._StavkaUsluga.Entity;
			}
			set
			{
				StavkaUsluga previousValue = this._StavkaUsluga.Entity;
				if (((previousValue != value) 
							|| (this._StavkaUsluga.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StavkaUsluga.Entity = null;
						previousValue.StavkaUslugaRadniRasporeds.Remove(this);
					}
					this._StavkaUsluga.Entity = value;
					if ((value != null))
					{
						value.StavkaUslugaRadniRasporeds.Add(this);
						this._StavkaUsluga_ID = value.StavkaUsluga_ID;
					}
					else
					{
						this._StavkaUsluga_ID = default(int);
					}
					this.SendPropertyChanged("StavkaUsluga");
				}
			}
		}
		
		[Association(Name="Radnik_StavkaUslugaRadniRaspored", Storage="_Radnik", ThisKey="Radnik_ID", OtherKey="Radnik_ID", IsForeignKey=true)]
		public Radnik Radnik
		{
			get
			{
				return this._Radnik.Entity;
			}
			set
			{
				Radnik previousValue = this._Radnik.Entity;
				if (((previousValue != value) 
							|| (this._Radnik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Radnik.Entity = null;
						previousValue.StavkaUslugaRadniRasporeds.Remove(this);
					}
					this._Radnik.Entity = value;
					if ((value != null))
					{
						value.StavkaUslugaRadniRasporeds.Add(this);
						this._Radnik_ID = value.Radnik_ID;
					}
					else
					{
						this._Radnik_ID = default(int);
					}
					this.SendPropertyChanged("Radnik");
				}
			}
		}
		
		[Association(Name="RadnoMesto_StavkaUslugaRadniRaspored", Storage="_RadnoMesto", ThisKey="RadnoMesto_ID", OtherKey="RadnoMesto_ID", IsForeignKey=true)]
		public RadnoMesto RadnoMesto
		{
			get
			{
				return this._RadnoMesto.Entity;
			}
			set
			{
				RadnoMesto previousValue = this._RadnoMesto.Entity;
				if (((previousValue != value) 
							|| (this._RadnoMesto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RadnoMesto.Entity = null;
						previousValue.StavkaUslugaRadniRasporeds.Remove(this);
					}
					this._RadnoMesto.Entity = value;
					if ((value != null))
					{
						value.StavkaUslugaRadniRasporeds.Add(this);
						this._RadnoMesto_ID = value.RadnoMesto_ID;
					}
					else
					{
						this._RadnoMesto_ID = default(int);
					}
					this.SendPropertyChanged("RadnoMesto");
				}
			}
		}
		
		[Association(Name="RadnoVreme_StavkaUslugaRadniRaspored", Storage="_RadnoVreme", ThisKey="RadnoVreme_ID", OtherKey="RadnoVreme_ID", IsForeignKey=true)]
		public RadnoVreme RadnoVreme
		{
			get
			{
				return this._RadnoVreme.Entity;
			}
			set
			{
				RadnoVreme previousValue = this._RadnoVreme.Entity;
				if (((previousValue != value) 
							|| (this._RadnoVreme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RadnoVreme.Entity = null;
						previousValue.StavkaUslugaRadniRasporeds.Remove(this);
					}
					this._RadnoVreme.Entity = value;
					if ((value != null))
					{
						value.StavkaUslugaRadniRasporeds.Add(this);
						this._RadnoVreme_ID = value.RadnoVreme_ID;
					}
					else
					{
						this._RadnoVreme_ID = default(int);
					}
					this.SendPropertyChanged("RadnoVreme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
