//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AutoServis {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LavAutoDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class LavAutoDataSet : global::System.Data.DataSet {
        
        private KorisnikProgramaDataTable tableKorisnikPrograma;
        
        private PonudaDataTable tablePonuda;
        
        private StavkaUslugaDataTable tableStavkaUsluga;
        
        private ZaglavljeDataTable tableZaglavlje;
        
        private global::System.Data.DataRelation relationPonuda_FK3;
        
        private global::System.Data.DataRelation relationStavkaUsluga_FK4;
        
        private global::System.Data.DataRelation relationZaglavlje_FK2;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LavAutoDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected LavAutoDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["KorisnikPrograma"] != null)) {
                    base.Tables.Add(new KorisnikProgramaDataTable(ds.Tables["KorisnikPrograma"]));
                }
                if ((ds.Tables["Ponuda"] != null)) {
                    base.Tables.Add(new PonudaDataTable(ds.Tables["Ponuda"]));
                }
                if ((ds.Tables["StavkaUsluga"] != null)) {
                    base.Tables.Add(new StavkaUslugaDataTable(ds.Tables["StavkaUsluga"]));
                }
                if ((ds.Tables["Zaglavlje"] != null)) {
                    base.Tables.Add(new ZaglavljeDataTable(ds.Tables["Zaglavlje"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KorisnikProgramaDataTable KorisnikPrograma {
            get {
                return this.tableKorisnikPrograma;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PonudaDataTable Ponuda {
            get {
                return this.tablePonuda;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StavkaUslugaDataTable StavkaUsluga {
            get {
                return this.tableStavkaUsluga;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ZaglavljeDataTable Zaglavlje {
            get {
                return this.tableZaglavlje;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            LavAutoDataSet cln = ((LavAutoDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["KorisnikPrograma"] != null)) {
                    base.Tables.Add(new KorisnikProgramaDataTable(ds.Tables["KorisnikPrograma"]));
                }
                if ((ds.Tables["Ponuda"] != null)) {
                    base.Tables.Add(new PonudaDataTable(ds.Tables["Ponuda"]));
                }
                if ((ds.Tables["StavkaUsluga"] != null)) {
                    base.Tables.Add(new StavkaUslugaDataTable(ds.Tables["StavkaUsluga"]));
                }
                if ((ds.Tables["Zaglavlje"] != null)) {
                    base.Tables.Add(new ZaglavljeDataTable(ds.Tables["Zaglavlje"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableKorisnikPrograma = ((KorisnikProgramaDataTable)(base.Tables["KorisnikPrograma"]));
            if ((initTable == true)) {
                if ((this.tableKorisnikPrograma != null)) {
                    this.tableKorisnikPrograma.InitVars();
                }
            }
            this.tablePonuda = ((PonudaDataTable)(base.Tables["Ponuda"]));
            if ((initTable == true)) {
                if ((this.tablePonuda != null)) {
                    this.tablePonuda.InitVars();
                }
            }
            this.tableStavkaUsluga = ((StavkaUslugaDataTable)(base.Tables["StavkaUsluga"]));
            if ((initTable == true)) {
                if ((this.tableStavkaUsluga != null)) {
                    this.tableStavkaUsluga.InitVars();
                }
            }
            this.tableZaglavlje = ((ZaglavljeDataTable)(base.Tables["Zaglavlje"]));
            if ((initTable == true)) {
                if ((this.tableZaglavlje != null)) {
                    this.tableZaglavlje.InitVars();
                }
            }
            this.relationPonuda_FK3 = this.Relations["Ponuda_FK3"];
            this.relationStavkaUsluga_FK4 = this.Relations["StavkaUsluga_FK4"];
            this.relationZaglavlje_FK2 = this.Relations["Zaglavlje_FK2"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "LavAutoDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LavAutoDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableKorisnikPrograma = new KorisnikProgramaDataTable();
            base.Tables.Add(this.tableKorisnikPrograma);
            this.tablePonuda = new PonudaDataTable();
            base.Tables.Add(this.tablePonuda);
            this.tableStavkaUsluga = new StavkaUslugaDataTable();
            base.Tables.Add(this.tableStavkaUsluga);
            this.tableZaglavlje = new ZaglavljeDataTable();
            base.Tables.Add(this.tableZaglavlje);
            this.relationPonuda_FK3 = new global::System.Data.DataRelation("Ponuda_FK3", new global::System.Data.DataColumn[] {
                        this.tableZaglavlje.Zaglavlje_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tablePonuda.Ponuda_IDColumn}, false);
            this.Relations.Add(this.relationPonuda_FK3);
            this.relationStavkaUsluga_FK4 = new global::System.Data.DataRelation("StavkaUsluga_FK4", new global::System.Data.DataColumn[] {
                        this.tablePonuda.Ponuda_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableStavkaUsluga.Ponuda_IDColumn}, false);
            this.Relations.Add(this.relationStavkaUsluga_FK4);
            this.relationZaglavlje_FK2 = new global::System.Data.DataRelation("Zaglavlje_FK2", new global::System.Data.DataColumn[] {
                        this.tableKorisnikPrograma.KorisnikPrograma_IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableZaglavlje.KorisnikPrograma_IDColumn}, false);
            this.Relations.Add(this.relationZaglavlje_FK2);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKorisnikPrograma() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePonuda() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStavkaUsluga() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeZaglavlje() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            LavAutoDataSet ds = new LavAutoDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void KorisnikProgramaRowChangeEventHandler(object sender, KorisnikProgramaRowChangeEvent e);
        
        public delegate void PonudaRowChangeEventHandler(object sender, PonudaRowChangeEvent e);
        
        public delegate void StavkaUslugaRowChangeEventHandler(object sender, StavkaUslugaRowChangeEvent e);
        
        public delegate void ZaglavljeRowChangeEventHandler(object sender, ZaglavljeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KorisnikProgramaDataTable : global::System.Data.TypedTableBase<KorisnikProgramaRow> {
            
            private global::System.Data.DataColumn columnKorisnikPrograma_ID;
            
            private global::System.Data.DataColumn columnSifra;
            
            private global::System.Data.DataColumn columnNaziv;
            
            private global::System.Data.DataColumn columnPIB;
            
            private global::System.Data.DataColumn columnMaticniBroj;
            
            private global::System.Data.DataColumn columnZiroRacun;
            
            private global::System.Data.DataColumn columnMesto_ID;
            
            private global::System.Data.DataColumn columnAdresa;
            
            private global::System.Data.DataColumn columnTelefon;
            
            private global::System.Data.DataColumn columnFaks;
            
            private global::System.Data.DataColumn columnEMail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KorisnikProgramaDataTable() {
                this.TableName = "KorisnikPrograma";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KorisnikProgramaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KorisnikProgramaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KorisnikPrograma_IDColumn {
                get {
                    return this.columnKorisnikPrograma_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SifraColumn {
                get {
                    return this.columnSifra;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NazivColumn {
                get {
                    return this.columnNaziv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PIBColumn {
                get {
                    return this.columnPIB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaticniBrojColumn {
                get {
                    return this.columnMaticniBroj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZiroRacunColumn {
                get {
                    return this.columnZiroRacun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Mesto_IDColumn {
                get {
                    return this.columnMesto_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdresaColumn {
                get {
                    return this.columnAdresa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelefonColumn {
                get {
                    return this.columnTelefon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaksColumn {
                get {
                    return this.columnFaks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMailColumn {
                get {
                    return this.columnEMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KorisnikProgramaRow this[int index] {
                get {
                    return ((KorisnikProgramaRow)(this.Rows[index]));
                }
            }
            
            public event KorisnikProgramaRowChangeEventHandler KorisnikProgramaRowChanging;
            
            public event KorisnikProgramaRowChangeEventHandler KorisnikProgramaRowChanged;
            
            public event KorisnikProgramaRowChangeEventHandler KorisnikProgramaRowDeleting;
            
            public event KorisnikProgramaRowChangeEventHandler KorisnikProgramaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKorisnikProgramaRow(KorisnikProgramaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KorisnikProgramaRow AddKorisnikProgramaRow(string Sifra, string Naziv, int PIB, int MaticniBroj, string ZiroRacun, int Mesto_ID, string Adresa, string Telefon, string Faks, string EMail) {
                KorisnikProgramaRow rowKorisnikProgramaRow = ((KorisnikProgramaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Sifra,
                        Naziv,
                        PIB,
                        MaticniBroj,
                        ZiroRacun,
                        Mesto_ID,
                        Adresa,
                        Telefon,
                        Faks,
                        EMail};
                rowKorisnikProgramaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKorisnikProgramaRow);
                return rowKorisnikProgramaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KorisnikProgramaRow FindByKorisnikPrograma_ID(int KorisnikPrograma_ID) {
                return ((KorisnikProgramaRow)(this.Rows.Find(new object[] {
                            KorisnikPrograma_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                KorisnikProgramaDataTable cln = ((KorisnikProgramaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KorisnikProgramaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKorisnikPrograma_ID = base.Columns["KorisnikPrograma_ID"];
                this.columnSifra = base.Columns["Sifra"];
                this.columnNaziv = base.Columns["Naziv"];
                this.columnPIB = base.Columns["PIB"];
                this.columnMaticniBroj = base.Columns["MaticniBroj"];
                this.columnZiroRacun = base.Columns["ZiroRacun"];
                this.columnMesto_ID = base.Columns["Mesto_ID"];
                this.columnAdresa = base.Columns["Adresa"];
                this.columnTelefon = base.Columns["Telefon"];
                this.columnFaks = base.Columns["Faks"];
                this.columnEMail = base.Columns["EMail"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKorisnikPrograma_ID = new global::System.Data.DataColumn("KorisnikPrograma_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKorisnikPrograma_ID);
                this.columnSifra = new global::System.Data.DataColumn("Sifra", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSifra);
                this.columnNaziv = new global::System.Data.DataColumn("Naziv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNaziv);
                this.columnPIB = new global::System.Data.DataColumn("PIB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIB);
                this.columnMaticniBroj = new global::System.Data.DataColumn("MaticniBroj", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaticniBroj);
                this.columnZiroRacun = new global::System.Data.DataColumn("ZiroRacun", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZiroRacun);
                this.columnMesto_ID = new global::System.Data.DataColumn("Mesto_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMesto_ID);
                this.columnAdresa = new global::System.Data.DataColumn("Adresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdresa);
                this.columnTelefon = new global::System.Data.DataColumn("Telefon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelefon);
                this.columnFaks = new global::System.Data.DataColumn("Faks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFaks);
                this.columnEMail = new global::System.Data.DataColumn("EMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMail);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKorisnikPrograma_ID}, true));
                this.columnKorisnikPrograma_ID.AutoIncrement = true;
                this.columnKorisnikPrograma_ID.AutoIncrementSeed = -1;
                this.columnKorisnikPrograma_ID.AutoIncrementStep = -1;
                this.columnKorisnikPrograma_ID.AllowDBNull = false;
                this.columnKorisnikPrograma_ID.ReadOnly = true;
                this.columnKorisnikPrograma_ID.Unique = true;
                this.columnSifra.AllowDBNull = false;
                this.columnSifra.MaxLength = 50;
                this.columnNaziv.AllowDBNull = false;
                this.columnNaziv.MaxLength = 50;
                this.columnPIB.AllowDBNull = false;
                this.columnMaticniBroj.AllowDBNull = false;
                this.columnZiroRacun.AllowDBNull = false;
                this.columnZiroRacun.MaxLength = 100;
                this.columnMesto_ID.AllowDBNull = false;
                this.columnAdresa.AllowDBNull = false;
                this.columnAdresa.MaxLength = 100;
                this.columnTelefon.AllowDBNull = false;
                this.columnTelefon.MaxLength = 50;
                this.columnFaks.AllowDBNull = false;
                this.columnFaks.MaxLength = 50;
                this.columnEMail.AllowDBNull = false;
                this.columnEMail.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KorisnikProgramaRow NewKorisnikProgramaRow() {
                return ((KorisnikProgramaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KorisnikProgramaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(KorisnikProgramaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KorisnikProgramaRowChanged != null)) {
                    this.KorisnikProgramaRowChanged(this, new KorisnikProgramaRowChangeEvent(((KorisnikProgramaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KorisnikProgramaRowChanging != null)) {
                    this.KorisnikProgramaRowChanging(this, new KorisnikProgramaRowChangeEvent(((KorisnikProgramaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KorisnikProgramaRowDeleted != null)) {
                    this.KorisnikProgramaRowDeleted(this, new KorisnikProgramaRowChangeEvent(((KorisnikProgramaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KorisnikProgramaRowDeleting != null)) {
                    this.KorisnikProgramaRowDeleting(this, new KorisnikProgramaRowChangeEvent(((KorisnikProgramaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKorisnikProgramaRow(KorisnikProgramaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LavAutoDataSet ds = new LavAutoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KorisnikProgramaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PonudaDataTable : global::System.Data.TypedTableBase<PonudaRow> {
            
            private global::System.Data.DataColumn columnPonuda_ID;
            
            private global::System.Data.DataColumn columnRadnik_ID;
            
            private global::System.Data.DataColumn columnVreme;
            
            private global::System.Data.DataColumn columnNacinZahtevaZaPonudu_ID;
            
            private global::System.Data.DataColumn columnPreuzimaLicno;
            
            private global::System.Data.DataColumn columnPreuzeoLicnoU;
            
            private global::System.Data.DataColumn columnObavestiTelefonom;
            
            private global::System.Data.DataColumn columnObavestenTelefonomU;
            
            private global::System.Data.DataColumn columnPosaljiSMSObavestenje;
            
            private global::System.Data.DataColumn columnPoslatoSMSObavestenjeU;
            
            private global::System.Data.DataColumn columnNapomena;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnVremePromene;
            
            private global::System.Data.DataColumn columnKorisnickiNalog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PonudaDataTable() {
                this.TableName = "Ponuda";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PonudaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PonudaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ponuda_IDColumn {
                get {
                    return this.columnPonuda_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Radnik_IDColumn {
                get {
                    return this.columnRadnik_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VremeColumn {
                get {
                    return this.columnVreme;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NacinZahtevaZaPonudu_IDColumn {
                get {
                    return this.columnNacinZahtevaZaPonudu_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreuzimaLicnoColumn {
                get {
                    return this.columnPreuzimaLicno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PreuzeoLicnoUColumn {
                get {
                    return this.columnPreuzeoLicnoU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObavestiTelefonomColumn {
                get {
                    return this.columnObavestiTelefonom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ObavestenTelefonomUColumn {
                get {
                    return this.columnObavestenTelefonomU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PosaljiSMSObavestenjeColumn {
                get {
                    return this.columnPosaljiSMSObavestenje;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PoslatoSMSObavestenjeUColumn {
                get {
                    return this.columnPoslatoSMSObavestenjeU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NapomenaColumn {
                get {
                    return this.columnNapomena;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VremePromeneColumn {
                get {
                    return this.columnVremePromene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KorisnickiNalogColumn {
                get {
                    return this.columnKorisnickiNalog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PonudaRow this[int index] {
                get {
                    return ((PonudaRow)(this.Rows[index]));
                }
            }
            
            public event PonudaRowChangeEventHandler PonudaRowChanging;
            
            public event PonudaRowChangeEventHandler PonudaRowChanged;
            
            public event PonudaRowChangeEventHandler PonudaRowDeleting;
            
            public event PonudaRowChangeEventHandler PonudaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPonudaRow(PonudaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PonudaRow AddPonudaRow(ZaglavljeRow parentZaglavljeRowByPonuda_FK3, int Radnik_ID, System.DateTime Vreme, int NacinZahtevaZaPonudu_ID, bool PreuzimaLicno, System.DateTime PreuzeoLicnoU, bool ObavestiTelefonom, System.DateTime ObavestenTelefonomU, bool PosaljiSMSObavestenje, System.DateTime PoslatoSMSObavestenjeU, string Napomena, string Status, System.DateTime VremePromene, string KorisnickiNalog) {
                PonudaRow rowPonudaRow = ((PonudaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Radnik_ID,
                        Vreme,
                        NacinZahtevaZaPonudu_ID,
                        PreuzimaLicno,
                        PreuzeoLicnoU,
                        ObavestiTelefonom,
                        ObavestenTelefonomU,
                        PosaljiSMSObavestenje,
                        PoslatoSMSObavestenjeU,
                        Napomena,
                        Status,
                        VremePromene,
                        KorisnickiNalog};
                if ((parentZaglavljeRowByPonuda_FK3 != null)) {
                    columnValuesArray[0] = parentZaglavljeRowByPonuda_FK3[0];
                }
                rowPonudaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPonudaRow);
                return rowPonudaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PonudaRow FindByPonuda_ID(int Ponuda_ID) {
                return ((PonudaRow)(this.Rows.Find(new object[] {
                            Ponuda_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PonudaDataTable cln = ((PonudaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PonudaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPonuda_ID = base.Columns["Ponuda_ID"];
                this.columnRadnik_ID = base.Columns["Radnik_ID"];
                this.columnVreme = base.Columns["Vreme"];
                this.columnNacinZahtevaZaPonudu_ID = base.Columns["NacinZahtevaZaPonudu_ID"];
                this.columnPreuzimaLicno = base.Columns["PreuzimaLicno"];
                this.columnPreuzeoLicnoU = base.Columns["PreuzeoLicnoU"];
                this.columnObavestiTelefonom = base.Columns["ObavestiTelefonom"];
                this.columnObavestenTelefonomU = base.Columns["ObavestenTelefonomU"];
                this.columnPosaljiSMSObavestenje = base.Columns["PosaljiSMSObavestenje"];
                this.columnPoslatoSMSObavestenjeU = base.Columns["PoslatoSMSObavestenjeU"];
                this.columnNapomena = base.Columns["Napomena"];
                this.columnStatus = base.Columns["Status"];
                this.columnVremePromene = base.Columns["VremePromene"];
                this.columnKorisnickiNalog = base.Columns["KorisnickiNalog"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPonuda_ID = new global::System.Data.DataColumn("Ponuda_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPonuda_ID);
                this.columnRadnik_ID = new global::System.Data.DataColumn("Radnik_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRadnik_ID);
                this.columnVreme = new global::System.Data.DataColumn("Vreme", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVreme);
                this.columnNacinZahtevaZaPonudu_ID = new global::System.Data.DataColumn("NacinZahtevaZaPonudu_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNacinZahtevaZaPonudu_ID);
                this.columnPreuzimaLicno = new global::System.Data.DataColumn("PreuzimaLicno", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreuzimaLicno);
                this.columnPreuzeoLicnoU = new global::System.Data.DataColumn("PreuzeoLicnoU", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPreuzeoLicnoU);
                this.columnObavestiTelefonom = new global::System.Data.DataColumn("ObavestiTelefonom", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObavestiTelefonom);
                this.columnObavestenTelefonomU = new global::System.Data.DataColumn("ObavestenTelefonomU", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObavestenTelefonomU);
                this.columnPosaljiSMSObavestenje = new global::System.Data.DataColumn("PosaljiSMSObavestenje", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosaljiSMSObavestenje);
                this.columnPoslatoSMSObavestenjeU = new global::System.Data.DataColumn("PoslatoSMSObavestenjeU", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoslatoSMSObavestenjeU);
                this.columnNapomena = new global::System.Data.DataColumn("Napomena", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNapomena);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnVremePromene = new global::System.Data.DataColumn("VremePromene", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVremePromene);
                this.columnKorisnickiNalog = new global::System.Data.DataColumn("KorisnickiNalog", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKorisnickiNalog);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPonuda_ID}, true));
                this.columnPonuda_ID.AllowDBNull = false;
                this.columnPonuda_ID.Unique = true;
                this.columnRadnik_ID.AllowDBNull = false;
                this.columnVreme.AllowDBNull = false;
                this.columnNacinZahtevaZaPonudu_ID.AllowDBNull = false;
                this.columnPreuzimaLicno.AllowDBNull = false;
                this.columnObavestiTelefonom.AllowDBNull = false;
                this.columnPosaljiSMSObavestenje.AllowDBNull = false;
                this.columnNapomena.MaxLength = 500;
                this.columnStatus.AllowDBNull = false;
                this.columnStatus.MaxLength = 1;
                this.columnVremePromene.AllowDBNull = false;
                this.columnKorisnickiNalog.AllowDBNull = false;
                this.columnKorisnickiNalog.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PonudaRow NewPonudaRow() {
                return ((PonudaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PonudaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PonudaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PonudaRowChanged != null)) {
                    this.PonudaRowChanged(this, new PonudaRowChangeEvent(((PonudaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PonudaRowChanging != null)) {
                    this.PonudaRowChanging(this, new PonudaRowChangeEvent(((PonudaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PonudaRowDeleted != null)) {
                    this.PonudaRowDeleted(this, new PonudaRowChangeEvent(((PonudaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PonudaRowDeleting != null)) {
                    this.PonudaRowDeleting(this, new PonudaRowChangeEvent(((PonudaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePonudaRow(PonudaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LavAutoDataSet ds = new LavAutoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PonudaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StavkaUslugaDataTable : global::System.Data.TypedTableBase<StavkaUslugaRow> {
            
            private global::System.Data.DataColumn columnStavkaUsluga_ID;
            
            private global::System.Data.DataColumn columnPonuda_ID;
            
            private global::System.Data.DataColumn columnRadniNalog_ID;
            
            private global::System.Data.DataColumn columnUsluga_ID;
            
            private global::System.Data.DataColumn columnUslugaKolicina;
            
            private global::System.Data.DataColumn columnUslugaCenaBezPoreza;
            
            private global::System.Data.DataColumn columnUslugaPoreskaStopa_ID;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnVremePromene;
            
            private global::System.Data.DataColumn columnKorisnickiNalog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaUslugaDataTable() {
                this.TableName = "StavkaUsluga";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StavkaUslugaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StavkaUslugaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StavkaUsluga_IDColumn {
                get {
                    return this.columnStavkaUsluga_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Ponuda_IDColumn {
                get {
                    return this.columnPonuda_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RadniNalog_IDColumn {
                get {
                    return this.columnRadniNalog_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Usluga_IDColumn {
                get {
                    return this.columnUsluga_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UslugaKolicinaColumn {
                get {
                    return this.columnUslugaKolicina;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UslugaCenaBezPorezaColumn {
                get {
                    return this.columnUslugaCenaBezPoreza;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UslugaPoreskaStopa_IDColumn {
                get {
                    return this.columnUslugaPoreskaStopa_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VremePromeneColumn {
                get {
                    return this.columnVremePromene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KorisnickiNalogColumn {
                get {
                    return this.columnKorisnickiNalog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaUslugaRow this[int index] {
                get {
                    return ((StavkaUslugaRow)(this.Rows[index]));
                }
            }
            
            public event StavkaUslugaRowChangeEventHandler StavkaUslugaRowChanging;
            
            public event StavkaUslugaRowChangeEventHandler StavkaUslugaRowChanged;
            
            public event StavkaUslugaRowChangeEventHandler StavkaUslugaRowDeleting;
            
            public event StavkaUslugaRowChangeEventHandler StavkaUslugaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStavkaUslugaRow(StavkaUslugaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaUslugaRow AddStavkaUslugaRow(PonudaRow parentPonudaRowByStavkaUsluga_FK4, int RadniNalog_ID, int Usluga_ID, int UslugaKolicina, decimal UslugaCenaBezPoreza, int UslugaPoreskaStopa_ID, string Status, System.DateTime VremePromene, string KorisnickiNalog) {
                StavkaUslugaRow rowStavkaUslugaRow = ((StavkaUslugaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        RadniNalog_ID,
                        Usluga_ID,
                        UslugaKolicina,
                        UslugaCenaBezPoreza,
                        UslugaPoreskaStopa_ID,
                        Status,
                        VremePromene,
                        KorisnickiNalog};
                if ((parentPonudaRowByStavkaUsluga_FK4 != null)) {
                    columnValuesArray[1] = parentPonudaRowByStavkaUsluga_FK4[0];
                }
                rowStavkaUslugaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStavkaUslugaRow);
                return rowStavkaUslugaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaUslugaRow FindByStavkaUsluga_ID(int StavkaUsluga_ID) {
                return ((StavkaUslugaRow)(this.Rows.Find(new object[] {
                            StavkaUsluga_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StavkaUslugaDataTable cln = ((StavkaUslugaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StavkaUslugaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStavkaUsluga_ID = base.Columns["StavkaUsluga_ID"];
                this.columnPonuda_ID = base.Columns["Ponuda_ID"];
                this.columnRadniNalog_ID = base.Columns["RadniNalog_ID"];
                this.columnUsluga_ID = base.Columns["Usluga_ID"];
                this.columnUslugaKolicina = base.Columns["UslugaKolicina"];
                this.columnUslugaCenaBezPoreza = base.Columns["UslugaCenaBezPoreza"];
                this.columnUslugaPoreskaStopa_ID = base.Columns["UslugaPoreskaStopa_ID"];
                this.columnStatus = base.Columns["Status"];
                this.columnVremePromene = base.Columns["VremePromene"];
                this.columnKorisnickiNalog = base.Columns["KorisnickiNalog"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStavkaUsluga_ID = new global::System.Data.DataColumn("StavkaUsluga_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStavkaUsluga_ID);
                this.columnPonuda_ID = new global::System.Data.DataColumn("Ponuda_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPonuda_ID);
                this.columnRadniNalog_ID = new global::System.Data.DataColumn("RadniNalog_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRadniNalog_ID);
                this.columnUsluga_ID = new global::System.Data.DataColumn("Usluga_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsluga_ID);
                this.columnUslugaKolicina = new global::System.Data.DataColumn("UslugaKolicina", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUslugaKolicina);
                this.columnUslugaCenaBezPoreza = new global::System.Data.DataColumn("UslugaCenaBezPoreza", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUslugaCenaBezPoreza);
                this.columnUslugaPoreskaStopa_ID = new global::System.Data.DataColumn("UslugaPoreskaStopa_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUslugaPoreskaStopa_ID);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnVremePromene = new global::System.Data.DataColumn("VremePromene", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVremePromene);
                this.columnKorisnickiNalog = new global::System.Data.DataColumn("KorisnickiNalog", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKorisnickiNalog);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnStavkaUsluga_ID}, true));
                this.columnStavkaUsluga_ID.AutoIncrement = true;
                this.columnStavkaUsluga_ID.AutoIncrementSeed = -1;
                this.columnStavkaUsluga_ID.AutoIncrementStep = -1;
                this.columnStavkaUsluga_ID.AllowDBNull = false;
                this.columnStavkaUsluga_ID.ReadOnly = true;
                this.columnStavkaUsluga_ID.Unique = true;
                this.columnUsluga_ID.AllowDBNull = false;
                this.columnUslugaKolicina.AllowDBNull = false;
                this.columnUslugaCenaBezPoreza.AllowDBNull = false;
                this.columnUslugaPoreskaStopa_ID.AllowDBNull = false;
                this.columnStatus.AllowDBNull = false;
                this.columnStatus.MaxLength = 1;
                this.columnVremePromene.AllowDBNull = false;
                this.columnKorisnickiNalog.AllowDBNull = false;
                this.columnKorisnickiNalog.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaUslugaRow NewStavkaUslugaRow() {
                return ((StavkaUslugaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StavkaUslugaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StavkaUslugaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StavkaUslugaRowChanged != null)) {
                    this.StavkaUslugaRowChanged(this, new StavkaUslugaRowChangeEvent(((StavkaUslugaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StavkaUslugaRowChanging != null)) {
                    this.StavkaUslugaRowChanging(this, new StavkaUslugaRowChangeEvent(((StavkaUslugaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StavkaUslugaRowDeleted != null)) {
                    this.StavkaUslugaRowDeleted(this, new StavkaUslugaRowChangeEvent(((StavkaUslugaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StavkaUslugaRowDeleting != null)) {
                    this.StavkaUslugaRowDeleting(this, new StavkaUslugaRowChangeEvent(((StavkaUslugaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStavkaUslugaRow(StavkaUslugaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LavAutoDataSet ds = new LavAutoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StavkaUslugaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ZaglavljeDataTable : global::System.Data.TypedTableBase<ZaglavljeRow> {
            
            private global::System.Data.DataColumn columnZaglavlje_ID;
            
            private global::System.Data.DataColumn columnServisnaKnjizica_ID;
            
            private global::System.Data.DataColumn columnKorisnikPrograma_ID;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnVremePromene;
            
            private global::System.Data.DataColumn columnKorisnickiNalog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZaglavljeDataTable() {
                this.TableName = "Zaglavlje";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ZaglavljeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ZaglavljeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Zaglavlje_IDColumn {
                get {
                    return this.columnZaglavlje_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServisnaKnjizica_IDColumn {
                get {
                    return this.columnServisnaKnjizica_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KorisnikPrograma_IDColumn {
                get {
                    return this.columnKorisnikPrograma_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VremePromeneColumn {
                get {
                    return this.columnVremePromene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KorisnickiNalogColumn {
                get {
                    return this.columnKorisnickiNalog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZaglavljeRow this[int index] {
                get {
                    return ((ZaglavljeRow)(this.Rows[index]));
                }
            }
            
            public event ZaglavljeRowChangeEventHandler ZaglavljeRowChanging;
            
            public event ZaglavljeRowChangeEventHandler ZaglavljeRowChanged;
            
            public event ZaglavljeRowChangeEventHandler ZaglavljeRowDeleting;
            
            public event ZaglavljeRowChangeEventHandler ZaglavljeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddZaglavljeRow(ZaglavljeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZaglavljeRow AddZaglavljeRow(int ServisnaKnjizica_ID, KorisnikProgramaRow parentKorisnikProgramaRowByZaglavlje_FK2, string Status, System.DateTime VremePromene, string KorisnickiNalog) {
                ZaglavljeRow rowZaglavljeRow = ((ZaglavljeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ServisnaKnjizica_ID,
                        null,
                        Status,
                        VremePromene,
                        KorisnickiNalog};
                if ((parentKorisnikProgramaRowByZaglavlje_FK2 != null)) {
                    columnValuesArray[2] = parentKorisnikProgramaRowByZaglavlje_FK2[0];
                }
                rowZaglavljeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowZaglavljeRow);
                return rowZaglavljeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZaglavljeRow FindByZaglavlje_ID(int Zaglavlje_ID) {
                return ((ZaglavljeRow)(this.Rows.Find(new object[] {
                            Zaglavlje_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ZaglavljeDataTable cln = ((ZaglavljeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ZaglavljeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnZaglavlje_ID = base.Columns["Zaglavlje_ID"];
                this.columnServisnaKnjizica_ID = base.Columns["ServisnaKnjizica_ID"];
                this.columnKorisnikPrograma_ID = base.Columns["KorisnikPrograma_ID"];
                this.columnStatus = base.Columns["Status"];
                this.columnVremePromene = base.Columns["VremePromene"];
                this.columnKorisnickiNalog = base.Columns["KorisnickiNalog"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnZaglavlje_ID = new global::System.Data.DataColumn("Zaglavlje_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZaglavlje_ID);
                this.columnServisnaKnjizica_ID = new global::System.Data.DataColumn("ServisnaKnjizica_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServisnaKnjizica_ID);
                this.columnKorisnikPrograma_ID = new global::System.Data.DataColumn("KorisnikPrograma_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKorisnikPrograma_ID);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnVremePromene = new global::System.Data.DataColumn("VremePromene", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVremePromene);
                this.columnKorisnickiNalog = new global::System.Data.DataColumn("KorisnickiNalog", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKorisnickiNalog);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnZaglavlje_ID}, true));
                this.columnZaglavlje_ID.AutoIncrement = true;
                this.columnZaglavlje_ID.AutoIncrementSeed = -1;
                this.columnZaglavlje_ID.AutoIncrementStep = -1;
                this.columnZaglavlje_ID.AllowDBNull = false;
                this.columnZaglavlje_ID.ReadOnly = true;
                this.columnZaglavlje_ID.Unique = true;
                this.columnServisnaKnjizica_ID.AllowDBNull = false;
                this.columnKorisnikPrograma_ID.AllowDBNull = false;
                this.columnStatus.AllowDBNull = false;
                this.columnStatus.MaxLength = 1;
                this.columnVremePromene.AllowDBNull = false;
                this.columnKorisnickiNalog.AllowDBNull = false;
                this.columnKorisnickiNalog.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZaglavljeRow NewZaglavljeRow() {
                return ((ZaglavljeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ZaglavljeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ZaglavljeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ZaglavljeRowChanged != null)) {
                    this.ZaglavljeRowChanged(this, new ZaglavljeRowChangeEvent(((ZaglavljeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ZaglavljeRowChanging != null)) {
                    this.ZaglavljeRowChanging(this, new ZaglavljeRowChangeEvent(((ZaglavljeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ZaglavljeRowDeleted != null)) {
                    this.ZaglavljeRowDeleted(this, new ZaglavljeRowChangeEvent(((ZaglavljeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ZaglavljeRowDeleting != null)) {
                    this.ZaglavljeRowDeleting(this, new ZaglavljeRowChangeEvent(((ZaglavljeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveZaglavljeRow(ZaglavljeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LavAutoDataSet ds = new LavAutoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ZaglavljeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KorisnikProgramaRow : global::System.Data.DataRow {
            
            private KorisnikProgramaDataTable tableKorisnikPrograma;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KorisnikProgramaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKorisnikPrograma = ((KorisnikProgramaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int KorisnikPrograma_ID {
                get {
                    return ((int)(this[this.tableKorisnikPrograma.KorisnikPrograma_IDColumn]));
                }
                set {
                    this[this.tableKorisnikPrograma.KorisnikPrograma_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sifra {
                get {
                    return ((string)(this[this.tableKorisnikPrograma.SifraColumn]));
                }
                set {
                    this[this.tableKorisnikPrograma.SifraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Naziv {
                get {
                    return ((string)(this[this.tableKorisnikPrograma.NazivColumn]));
                }
                set {
                    this[this.tableKorisnikPrograma.NazivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PIB {
                get {
                    return ((int)(this[this.tableKorisnikPrograma.PIBColumn]));
                }
                set {
                    this[this.tableKorisnikPrograma.PIBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MaticniBroj {
                get {
                    return ((int)(this[this.tableKorisnikPrograma.MaticniBrojColumn]));
                }
                set {
                    this[this.tableKorisnikPrograma.MaticniBrojColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZiroRacun {
                get {
                    return ((string)(this[this.tableKorisnikPrograma.ZiroRacunColumn]));
                }
                set {
                    this[this.tableKorisnikPrograma.ZiroRacunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Mesto_ID {
                get {
                    return ((int)(this[this.tableKorisnikPrograma.Mesto_IDColumn]));
                }
                set {
                    this[this.tableKorisnikPrograma.Mesto_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Adresa {
                get {
                    return ((string)(this[this.tableKorisnikPrograma.AdresaColumn]));
                }
                set {
                    this[this.tableKorisnikPrograma.AdresaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Telefon {
                get {
                    return ((string)(this[this.tableKorisnikPrograma.TelefonColumn]));
                }
                set {
                    this[this.tableKorisnikPrograma.TelefonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Faks {
                get {
                    return ((string)(this[this.tableKorisnikPrograma.FaksColumn]));
                }
                set {
                    this[this.tableKorisnikPrograma.FaksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMail {
                get {
                    return ((string)(this[this.tableKorisnikPrograma.EMailColumn]));
                }
                set {
                    this[this.tableKorisnikPrograma.EMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZaglavljeRow[] GetZaglavljeRows() {
                if ((this.Table.ChildRelations["Zaglavlje_FK2"] == null)) {
                    return new ZaglavljeRow[0];
                }
                else {
                    return ((ZaglavljeRow[])(base.GetChildRows(this.Table.ChildRelations["Zaglavlje_FK2"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PonudaRow : global::System.Data.DataRow {
            
            private PonudaDataTable tablePonuda;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PonudaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePonuda = ((PonudaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ponuda_ID {
                get {
                    return ((int)(this[this.tablePonuda.Ponuda_IDColumn]));
                }
                set {
                    this[this.tablePonuda.Ponuda_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Radnik_ID {
                get {
                    return ((int)(this[this.tablePonuda.Radnik_IDColumn]));
                }
                set {
                    this[this.tablePonuda.Radnik_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Vreme {
                get {
                    return ((global::System.DateTime)(this[this.tablePonuda.VremeColumn]));
                }
                set {
                    this[this.tablePonuda.VremeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NacinZahtevaZaPonudu_ID {
                get {
                    return ((int)(this[this.tablePonuda.NacinZahtevaZaPonudu_IDColumn]));
                }
                set {
                    this[this.tablePonuda.NacinZahtevaZaPonudu_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PreuzimaLicno {
                get {
                    return ((bool)(this[this.tablePonuda.PreuzimaLicnoColumn]));
                }
                set {
                    this[this.tablePonuda.PreuzimaLicnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PreuzeoLicnoU {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePonuda.PreuzeoLicnoUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PreuzeoLicnoU\' in table \'Ponuda\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePonuda.PreuzeoLicnoUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool ObavestiTelefonom {
                get {
                    return ((bool)(this[this.tablePonuda.ObavestiTelefonomColumn]));
                }
                set {
                    this[this.tablePonuda.ObavestiTelefonomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ObavestenTelefonomU {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePonuda.ObavestenTelefonomUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObavestenTelefonomU\' in table \'Ponuda\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePonuda.ObavestenTelefonomUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PosaljiSMSObavestenje {
                get {
                    return ((bool)(this[this.tablePonuda.PosaljiSMSObavestenjeColumn]));
                }
                set {
                    this[this.tablePonuda.PosaljiSMSObavestenjeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PoslatoSMSObavestenjeU {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePonuda.PoslatoSMSObavestenjeUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PoslatoSMSObavestenjeU\' in table \'Ponuda\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePonuda.PoslatoSMSObavestenjeUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Napomena {
                get {
                    try {
                        return ((string)(this[this.tablePonuda.NapomenaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Napomena\' in table \'Ponuda\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePonuda.NapomenaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    return ((string)(this[this.tablePonuda.StatusColumn]));
                }
                set {
                    this[this.tablePonuda.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime VremePromene {
                get {
                    return ((global::System.DateTime)(this[this.tablePonuda.VremePromeneColumn]));
                }
                set {
                    this[this.tablePonuda.VremePromeneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KorisnickiNalog {
                get {
                    return ((string)(this[this.tablePonuda.KorisnickiNalogColumn]));
                }
                set {
                    this[this.tablePonuda.KorisnickiNalogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZaglavljeRow ZaglavljeRow {
                get {
                    return ((ZaglavljeRow)(this.GetParentRow(this.Table.ParentRelations["Ponuda_FK3"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Ponuda_FK3"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPreuzeoLicnoUNull() {
                return this.IsNull(this.tablePonuda.PreuzeoLicnoUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPreuzeoLicnoUNull() {
                this[this.tablePonuda.PreuzeoLicnoUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsObavestenTelefonomUNull() {
                return this.IsNull(this.tablePonuda.ObavestenTelefonomUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetObavestenTelefonomUNull() {
                this[this.tablePonuda.ObavestenTelefonomUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPoslatoSMSObavestenjeUNull() {
                return this.IsNull(this.tablePonuda.PoslatoSMSObavestenjeUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPoslatoSMSObavestenjeUNull() {
                this[this.tablePonuda.PoslatoSMSObavestenjeUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNapomenaNull() {
                return this.IsNull(this.tablePonuda.NapomenaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNapomenaNull() {
                this[this.tablePonuda.NapomenaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaUslugaRow[] GetStavkaUslugaRows() {
                if ((this.Table.ChildRelations["StavkaUsluga_FK4"] == null)) {
                    return new StavkaUslugaRow[0];
                }
                else {
                    return ((StavkaUslugaRow[])(base.GetChildRows(this.Table.ChildRelations["StavkaUsluga_FK4"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StavkaUslugaRow : global::System.Data.DataRow {
            
            private StavkaUslugaDataTable tableStavkaUsluga;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StavkaUslugaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStavkaUsluga = ((StavkaUslugaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StavkaUsluga_ID {
                get {
                    return ((int)(this[this.tableStavkaUsluga.StavkaUsluga_IDColumn]));
                }
                set {
                    this[this.tableStavkaUsluga.StavkaUsluga_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Ponuda_ID {
                get {
                    try {
                        return ((int)(this[this.tableStavkaUsluga.Ponuda_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ponuda_ID\' in table \'StavkaUsluga\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStavkaUsluga.Ponuda_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RadniNalog_ID {
                get {
                    try {
                        return ((int)(this[this.tableStavkaUsluga.RadniNalog_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RadniNalog_ID\' in table \'StavkaUsluga\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStavkaUsluga.RadniNalog_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Usluga_ID {
                get {
                    return ((int)(this[this.tableStavkaUsluga.Usluga_IDColumn]));
                }
                set {
                    this[this.tableStavkaUsluga.Usluga_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UslugaKolicina {
                get {
                    return ((int)(this[this.tableStavkaUsluga.UslugaKolicinaColumn]));
                }
                set {
                    this[this.tableStavkaUsluga.UslugaKolicinaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UslugaCenaBezPoreza {
                get {
                    return ((decimal)(this[this.tableStavkaUsluga.UslugaCenaBezPorezaColumn]));
                }
                set {
                    this[this.tableStavkaUsluga.UslugaCenaBezPorezaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UslugaPoreskaStopa_ID {
                get {
                    return ((int)(this[this.tableStavkaUsluga.UslugaPoreskaStopa_IDColumn]));
                }
                set {
                    this[this.tableStavkaUsluga.UslugaPoreskaStopa_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    return ((string)(this[this.tableStavkaUsluga.StatusColumn]));
                }
                set {
                    this[this.tableStavkaUsluga.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime VremePromene {
                get {
                    return ((global::System.DateTime)(this[this.tableStavkaUsluga.VremePromeneColumn]));
                }
                set {
                    this[this.tableStavkaUsluga.VremePromeneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KorisnickiNalog {
                get {
                    return ((string)(this[this.tableStavkaUsluga.KorisnickiNalogColumn]));
                }
                set {
                    this[this.tableStavkaUsluga.KorisnickiNalogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PonudaRow PonudaRow {
                get {
                    return ((PonudaRow)(this.GetParentRow(this.Table.ParentRelations["StavkaUsluga_FK4"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["StavkaUsluga_FK4"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPonuda_IDNull() {
                return this.IsNull(this.tableStavkaUsluga.Ponuda_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPonuda_IDNull() {
                this[this.tableStavkaUsluga.Ponuda_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRadniNalog_IDNull() {
                return this.IsNull(this.tableStavkaUsluga.RadniNalog_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRadniNalog_IDNull() {
                this[this.tableStavkaUsluga.RadniNalog_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ZaglavljeRow : global::System.Data.DataRow {
            
            private ZaglavljeDataTable tableZaglavlje;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ZaglavljeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableZaglavlje = ((ZaglavljeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Zaglavlje_ID {
                get {
                    return ((int)(this[this.tableZaglavlje.Zaglavlje_IDColumn]));
                }
                set {
                    this[this.tableZaglavlje.Zaglavlje_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ServisnaKnjizica_ID {
                get {
                    return ((int)(this[this.tableZaglavlje.ServisnaKnjizica_IDColumn]));
                }
                set {
                    this[this.tableZaglavlje.ServisnaKnjizica_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int KorisnikPrograma_ID {
                get {
                    return ((int)(this[this.tableZaglavlje.KorisnikPrograma_IDColumn]));
                }
                set {
                    this[this.tableZaglavlje.KorisnikPrograma_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    return ((string)(this[this.tableZaglavlje.StatusColumn]));
                }
                set {
                    this[this.tableZaglavlje.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime VremePromene {
                get {
                    return ((global::System.DateTime)(this[this.tableZaglavlje.VremePromeneColumn]));
                }
                set {
                    this[this.tableZaglavlje.VremePromeneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KorisnickiNalog {
                get {
                    return ((string)(this[this.tableZaglavlje.KorisnickiNalogColumn]));
                }
                set {
                    this[this.tableZaglavlje.KorisnickiNalogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KorisnikProgramaRow KorisnikProgramaRow {
                get {
                    return ((KorisnikProgramaRow)(this.GetParentRow(this.Table.ParentRelations["Zaglavlje_FK2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Zaglavlje_FK2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PonudaRow[] GetPonudaRows() {
                if ((this.Table.ChildRelations["Ponuda_FK3"] == null)) {
                    return new PonudaRow[0];
                }
                else {
                    return ((PonudaRow[])(base.GetChildRows(this.Table.ChildRelations["Ponuda_FK3"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KorisnikProgramaRowChangeEvent : global::System.EventArgs {
            
            private KorisnikProgramaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KorisnikProgramaRowChangeEvent(KorisnikProgramaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KorisnikProgramaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PonudaRowChangeEvent : global::System.EventArgs {
            
            private PonudaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PonudaRowChangeEvent(PonudaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PonudaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StavkaUslugaRowChangeEvent : global::System.EventArgs {
            
            private StavkaUslugaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaUslugaRowChangeEvent(StavkaUslugaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StavkaUslugaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ZaglavljeRowChangeEvent : global::System.EventArgs {
            
            private ZaglavljeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZaglavljeRowChangeEvent(ZaglavljeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZaglavljeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591